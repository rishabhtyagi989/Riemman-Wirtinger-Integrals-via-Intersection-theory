(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    538367,      10684]
NotebookOptionsPosition[    525700,      10462]
NotebookOutlinePosition[    526138,      10479]
CellTagsIndexPosition[    526095,      10476]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
In this notebook we write a numerical implementation of Riemann-Wirtinger \
integrals and test the monodromy relations on them.\
\>", "Title",
 CellChangeTimes->{{3.893915707719901*^9, 
  3.893915771541472*^9}},ExpressionUUID->"e5c46d65-7870-4de3-9310-\
cd7fcbc06890"],

Cell[TextData[{
 "Note: Mathematica chooses branches cuts for complex powers, and draws the \
branch cuts of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", "z", ")"}], "s"], TraditionalForm]],ExpressionUUID->
  "e87d92b1-51fb-433d-beae-fe63c245aa77"],
 " where Arg(z) changes value discontinuously. (i.e. when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"arg", "(", "z", ")"}], "=", 
    RowBox[{
     RowBox[{"\[PlusMinus]", "\[ImaginaryI]"}], " ", "\[Pi]"}]}], 
   TraditionalForm]],ExpressionUUID->"c8cc6066-60ff-4eb3-8c0a-623432851d6b"],
 " ). This coincides with the definition of a complex power, which is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", "z", ")"}], "s"], ":=", 
    RowBox[{"exp", "(", 
     RowBox[{"s", " ", 
      RowBox[{"Log", "(", "z", ")"}]}], ")"}], " "}], TraditionalForm]],
  ExpressionUUID->"87b6f697-11ec-4284-8cfb-e138b301ddb9"],
 ", where Log uses the principal branch of the logarithm.\n\n"
}], "Subtitle",
 CellChangeTimes->{{3.8939165847604094`*^9, 3.893916754327406*^9}, {
  3.8975561457574387`*^9, 3.8975561671664467`*^9}, {3.8975562005321693`*^9, 
  3.897556242464342*^9}},ExpressionUUID->"dd76ea8d-796d-4526-8723-\
bc69023ae00d"],

Cell[CellGroupData[{

Cell["A warm-up: the beta function", "Subsection",
 CellChangeTimes->{{3.893932916046619*^9, 
  3.8939329218791237`*^9}},ExpressionUUID->"d7a4b99f-c345-4cc5-9246-\
e17753eac857"],

Cell[CellGroupData[{

Cell[TextData[{
 "The beta function \[Beta](a,b) uses a Pochhammer contour in its integral \
representation to obtain an analytic continuation (the integral actually only \
converges when Re(a)>0 and  Re(b)>0 ).\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalBeta]", "(", 
     RowBox[{"a", ",", "b"}], ")"}], "\[LongEqual]", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SuperscriptBox["t", 
       RowBox[{"a", "-", "1"}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}], 
       RowBox[{"b", "-", "1"}]], "d", "\[InvisibleSpace]", "t"}]}]}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "ded884c5-4a56-4712-801a-8f13006456e2"],
 ". \n\nFor example \n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalBeta]", "(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "5"}], "/", "2"}], ",", 
      RowBox[{"7", "/", "2"}]}], ")"}], "\[LongEqual]", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SuperscriptBox["t", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "5"}], "/", "2"}], "-", "1"}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], ")"}], 
       RowBox[{
        RowBox[{"7", "/", "2"}], "-", "1"}]], "d", "\[InvisibleSpace]", 
      "t"}]}]}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "d3933cfd-8688-44e0-a4a8-1676b5212752"],
 " is a divergent integral, but its value is analytically continued and \
understood to be \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalBeta]", "(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "5"}], "/", "2"}], ",", 
      RowBox[{"7", "/", "2"}]}], ")"}], "\[LongEqual]", 
    RowBox[{"-", "\[Pi]"}]}], TraditionalForm]],ExpressionUUID->
  "5e9d8b53-2042-4f8f-b779-e9c68581e52a"],
 "\n"
}], "Subsubsection",
 CellChangeTimes->{{3.893932924385982*^9, 3.893932961951557*^9}, {
   3.893933278381472*^9, 3.8939332818582563`*^9}, {3.893934867279698*^9, 
   3.89393491646733*^9}, {3.89393494959823*^9, 3.89393500327232*^9}, 
   3.897631838229357*^9},ExpressionUUID->"4c4356dd-fff8-4971-a24c-\
b724adaca888"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Beta", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "5"}], "/", "2"}], ",", 
   RowBox[{"7", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{3.893933319015307*^9},
 CellLabel->
  "In[369]:=",ExpressionUUID->"953a0fa2-26ba-415f-b63d-b3617636916e"],

Cell[BoxData[
 RowBox[{"-", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.893932975440333*^9, 3.893933319681858*^9, 
  3.893934890344577*^9, 3.8974620698951683`*^9, 3.897631902517345*^9, 
  3.906042186907103*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"5996835b-774b-4099-a7c6-68240ea9326e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["But Mathematica knows this integral is not convergent:", "Subsubsection",
 CellChangeTimes->{{3.893934846579192*^9, 3.893934863419141*^9}, {
  3.893935011900126*^9, 
  3.8939350346538963`*^9}},ExpressionUUID->"b8fff623-0a84-4aae-9d5b-\
6feefc462dad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "/", "2"}], ")"}], "-", "1"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"7", "/", "2"}], ")"}], "-", "1"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.893933284628063*^9, 3.893933302519266*^9}, {
  3.8939333346013613`*^9, 3.893933342947967*^9}},
 CellLabel->
  "In[370]:=",ExpressionUUID->"b8c7e899-13c8-4800-9ff8-30fb2887e6ee"],

Cell[BoxData[
 TemplateBox[{
  "Integrate", "idiv", 
   "\"Integral of \\!\\(\\*FractionBox[SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\"-\\\", \\\"t\\\"}], \\\")\\\"}], RowBox[{\\\"5\\\", \\\
\"/\\\", \\\"2\\\"}]], SuperscriptBox[\\\"t\\\", RowBox[{\\\"7\\\", \
\\\"/\\\", \\\"2\\\"}]]]\\) does not converge on \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]\\).\"", 2, 370, 57, 
   33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.893933344778347*^9, 3.893935030164239*^9, 
  3.897462080226829*^9, 3.89763190514574*^9, 3.906042188512231*^9},
 CellLabel->
  "During evaluation of \
In[370]:=",ExpressionUUID->"993d19c6-4426-4e5a-9b4a-acad5cdd8b16"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], 
     RowBox[{"5", "/", "2"}]], 
    SuperscriptBox["t", 
     RowBox[{"7", "/", "2"}]]], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]], "Output",
 CellChangeTimes->{3.893933306341628*^9, 3.893933344788682*^9, 
  3.89393503017227*^9, 3.897462080231649*^9, 3.897631905182358*^9, 
  3.906042188517709*^9},
 CellLabel->
  "Out[370]=",ExpressionUUID->"251e0919-aff3-408d-a971-aa0d0473004f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "To regularize it, we implement the path \[Gamma]\[CloseCurlyQuote] of \
Yoshida\[CloseCurlyQuote]s Love book, section 2.5\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Gamma]", "'"}], "=", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SubscriptBox["C", "\[Epsilon]"], "(", "0", ")"}], 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", " ", "a"}]]}]]}], "+", 
     OverscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Epsilon]", ",", 
        RowBox[{"1", "-", "\[Epsilon]"}]}], ")"}], "\[LongRightArrow]"], "+", 
     
     FractionBox[
      RowBox[{
       SubscriptBox["C", "\[Epsilon]"], "(", "1", ")"}], 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]", " ", "b"}]]}]]}]}], 
   TraditionalForm]],ExpressionUUID->"d51ef814-c8fb-449a-a45d-109c8a088d59"],
 "\n\nwhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "\[Epsilon]"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"9d718ecb-86eb-4bf6-b997-ee56ec181a4c"],
 " is a counterclockwise path around the point ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "4677f1ba-1208-4a01-957e-dd3d962e3359"],
 " with radius ",
 Cell[BoxData[
  FormBox["\[Epsilon]", TraditionalForm]],ExpressionUUID->
  "6c676e13-db70-4dec-8dc6-94aeb46f01a6"],
 ", and  the three paths start from the same branch of our function. "
}], "Subsubsection",
 CellChangeTimes->{{3.894101464606472*^9, 3.894101578096882*^9}, {
  3.8941016374633207`*^9, 3.894101700511943*^9}, {3.894101908807336*^9, 
  3.894101935380666*^9}},ExpressionUUID->"bea53e04-73fb-4244-876a-\
a83e04138391"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eps", "=", 
      RowBox[{"1", "/", "5"}]}], ",", 
     RowBox[{"a", "=", 
      RowBox[{
       RowBox[{"-", "5"}], "/", "2"}]}], ",", 
     RowBox[{"b", "=", 
      RowBox[{"7", "/", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["t", 
        RowBox[{"a", "-", "1"}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], ")"}], 
        RowBox[{"b", "-", "1"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "eps", ",", 
        RowBox[{"1", "-", "eps"}]}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "a"}], "]"}]}]]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["t", 
           RowBox[{"a", "-", "1"}]], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], 
           RowBox[{"b", "-", "1"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "eps", ",", 
           RowBox[{"eps", "*", "I"}], ",", 
           RowBox[{"-", "eps"}]}], "}"}]}], "]"}], "+", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"2", "\[Pi]", " ", "I", " ", "a"}], " ", "]"}], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["t", 
            RowBox[{"a", "-", "1"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "t"}], ")"}], 
            RowBox[{"b", "-", "1"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"-", "eps"}], ",", 
            RowBox[{
             RowBox[{"-", "eps"}], "*", "I"}], ",", "eps"}], "}"}]}], 
         "]"}]}]}], ")"}]}], "+", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "b"}], "]"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["t", 
           RowBox[{"a", "-", "1"}]], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}], 
           RowBox[{"b", "-", "1"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"1", "-", "eps"}], ",", 
           RowBox[{"1", "-", 
            RowBox[{"eps", "*", "I"}]}], ",", 
           RowBox[{"1", "+", "eps"}]}], "}"}]}], "]"}], "+", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"2", "\[Pi]", " ", "I", " ", "b"}], " ", "]"}], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["t", 
            RowBox[{"a", "-", "1"}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "t"}], ")"}], 
            RowBox[{"b", "-", "1"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"1", "+", "eps"}], ",", 
            RowBox[{"1", "+", 
             RowBox[{"eps", "*", "I"}]}], ",", 
            RowBox[{"1", "-", "eps"}]}], "}"}]}], "]"}]}]}], ")"}]}], "+", 
    "\[IndentingNewLine]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["t", 
        RowBox[{"a", "-", "1"}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], ")"}], 
        RowBox[{"b", "-", "1"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "eps", ",", 
        RowBox[{"1", "-", "eps"}]}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.893933356874086*^9, 3.893933416065435*^9}, {
   3.8939351214180717`*^9, 3.8939351215139093`*^9}, {3.8941005186215487`*^9, 
   3.894100653156886*^9}, {3.8941006853132343`*^9, 3.894100758650099*^9}, {
   3.894100790576322*^9, 3.894100794751361*^9}, {3.894100848153552*^9, 
   3.8941008880028*^9}, {3.894101366438727*^9, 3.8941013923355837`*^9}, {
   3.8945237191731853`*^9, 3.894523720374468*^9}, 3.894523889275249*^9},
 CellLabel->
  "In[371]:=",ExpressionUUID->"96072dbb-d4b1-4ff3-b78e-6c56cb95de98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3.141592653589365`"}], "+", 
  RowBox[{"7.105481567709626`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.894100556947106*^9, 3.8941006031797237`*^9}, {
   3.894100634034144*^9, 3.894100645653607*^9}, {3.8941006946213617`*^9, 
   3.8941007371023703`*^9}, {3.894100772796035*^9, 3.894100803511263*^9}, {
   3.894100850689735*^9, 3.89410088842691*^9}, {3.894101367142005*^9, 
   3.894101392615438*^9}, {3.894101906797834*^9, 3.8941019365100822`*^9}, {
   3.8945238835298986`*^9, 3.894523889753374*^9}, 3.8974620803567467`*^9, 
   3.897631905327796*^9, 3.9060421885714407`*^9},
 CellLabel->
  "Out[371]=",ExpressionUUID->"fa07b90a-3ae3-4496-8562-6eb0da65499c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Note that above we needed to add some prefactors of Exp[2\[Pi] \[ImaginaryI] \
a ] and Exp[2\[Pi] \[ImaginaryI] b ] to deal with the branch cuts of our \
integrand:\
\>", "Subsubsection",
 CellChangeTimes->{{3.894101939314418*^9, 3.89410196111123*^9}, 
   3.894102016984199*^9},ExpressionUUID->"236b0f3c-4b0e-4534-9744-\
11a56cf72a52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexPlot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"7", "/", "2"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}], 
     RowBox[{
      RowBox[{"-", "5"}], "/", "2"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", ".5"}], "-", 
      RowBox[{".5", "I"}]}], ",", 
     RowBox[{"1.5", "+", 
      RowBox[{".5", "I"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.893933464013666*^9, 3.893933480287691*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"4472187a-eb62-4574-aef8-1616f8e5696f"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxd211o1XUcx/FDVgijh2EXMb1Z1oUwKsIyqPhFxCwYjApiEUabRiUM00ih
VRQug9aEIhdWaEQh2YMTarUeJrSLbJMKMSs1zGQsQ8WnlB5gncP/9/pe/K4O
79vPi3HOzvl/W3tW3P3QebVarX9WrdZ4XTB96pOZmYM7Njz+977G62Xvf9PT
PLQ/urbizUvmt/0UffS6lV8u/Hp39LZjA7tfGt4Vve6J69uGD4xHf/7PV01b
mkei31pw+38jW16O3jO5aO5rfVuTvnnvHfv6p8aiFx9+cs7m9p3Rn334x4Fb
Bn+I3nVkzrVt5/ZE/3ZVWtvS/Uv0me7le2dP/hp9/vcTr/a1HIq+uPfBsVWd
h6Mvbzo7/Wj/VPQV7w00d49OR7ctbr2p6/iR6BumRpZ1zj8afevajvXtXcej
37305P5N7Seitx784rGW7pPR2z5ad8FQ36noj5++6/XmodPRox3zrhkcPhM9
Nnd6fPbkX9Hjf27v6p86Gz0x+tSxmZlz0XwHfly6vb5D+Gq+mq/mq/lqvpqv
5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ab+yXfTVfzVfz1Xw1X833uUXf
vdBw5av5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvrFf
9tV8NV/NV/PVfDXfNRtvfKC+S/hqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv
5qv5ar6ar+ar+Wq+mm/sl301X81X89V8NV/Nt/fftxc2HPlqvpqv5qv5ar6a
r+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mm/sl301X81X89V8NV/Nd+mS
i5rqO4Wv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/nG
ftlX89V8NV/NV/PVfO/bseZQw42v5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5
ar6ar+ar+Wq+mq/mq/nGftlX89V8NV/NV/PVfDtbf/+0vlv4ar6ar+ar+Wq+
mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvppv7Jd9NV/NV/PVfDVfzffF
CzfOG6w78dV8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz1Xw1
39gv+2q+mq/mq/lqvprv6onebze17wxfzVfz1Xw1X81X89V8NV/NV/PVfDVf
zVfz1Xw1X81X89V8NV/NV/ON/bKv5qv5ar6ar+ar+fasv211w4Wv5qv5ar6a
r+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/nGftlX89V8NV/NV/PV
fN945+r2+q7hq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar
+Wq+sV/21Xw1X81X89V8Nd9VbT9vbjjw1Xw1X81X89V8NV/NV/PVfDVfzVfz
1Xw1X81X89V8NV/NV/PVfDXf2C/7ar6ar+ar+Wq+mu8rj8w6vaFva/hqvpqv
5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mm/sl301X81X89V8
NV/N99kTH3SM1nfnq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6a
r+ar+Wq+sV/21Xw1X81X89V8Nd8rq058NV/NV/PVfDVfzVfz1Xw1X81X89V8
NV/NV/PVfDVfzVfz1Xw1X8039su+mq/mq/lqvpqv5rus+nsOX81X89V8NV/N
V/PVfDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfzjf2yr+ar+Wq+mq/mq/ne
X70fh6/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+cZ+
2Vfz1Xw1X81X89V8+6vP0+Gr+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/m
q/lqvpqv5qv5ar6xX/bVfDVfzVfz1Xw133ur/4fDV/PVfDVfzVfz1Xw1X81X
89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8Y7/sq/lqvpqv5qv5ar7Lq++zwlfz
1Xw1X81X89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/NV/PVfGO/7Kv5ar6a
r+ar+Wq+z1TfR4ev5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+
mq/mq/nGftlX89V8NV/NV/PVfO+sfk8KX81X89V8NV/NV/PVfDVfzVfz1Xw1
X81X89V8NV/NV/PVfDVfzVfzjf2yr+ar+Wq+mq/mq/neU/0eHL6ar+ar+Wq+
mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5hv7ZV/NV/PVfDVfzVfz
XVI9zxG+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+Yb
+2VfzVfz1Xw1X81X8324eh4rfDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz
1Xw1X81X89V8NV/NN/bLvpqv5qv5ar6ar+a7snqeMnw1X81X89V8NV/NV/PV
fDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzTf2y76ar+ar+Wq+mq/m21c9Dx2+
mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+Yb+2VfzVfz
1Xw1X81X832+umcIX81X89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/NV/PV
fDVfzVfzjf2yr+ar+Wq+mq/mq4v7slTcl6XiviwV92WpuC9LxX1Z+OriviwV
92WpuC9LxX1ZKu7LUnFflor7slTcl6XiviwV92WpuC9LxX1ZKu7LUnFflor7
slTcl6XiviwV92WpuC9LxX1ZKu7LUnFflor7svQ/O304Ow==
    "], {{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1: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
9GPEj/HEj1YQBynjX73Tq/4HycPfRPmn+MlqnBAthr1ieem4bp0N3PjzPCCN
laM5AAuBuUDhmlbqBUnY9zMaAOGzs0sA3cv1YWcBsa5ZwxmY7gHbKimIG38O
9hSs1AXYTUEXYZmARkAg9wzIPZPrnsVxv8Zxz2HDk8vyeDdsMJ45HM9sjlcW
1+sq5JsJBWRAwZehc2lQZAoUkwxdSISS4qGUWOhyNHQ1AsoJhQoCoUJf6K4X
t9yDVetOa3LdfuW80e2wPmizPG6xMGuERxvP4U3HFsz6ls3b1yyfka3qNm0q
tuxLqC7FO5436b65jMCrzJA0VthFVuQFdnQUB1xnKed4mSH8vCBBYaDwjr+o
xEf8yEtS4yGtc5U2OsueO8hf2srbrWRdlpLX5uJeM1G/qWDAhD9kxBsxPNs3
e3ZgQm1w6F0qwnWsHmb7yVL1qaJ9i52ALQbAPhRQhzXKSVGcQST+4a9YYQW4
gxX4Ay2KCoYj/mMFeXAT6NX3Xq/S30D54iWpcwK1GdaK5aXlQVEJIf9+AWD8
kvINotJDjFIDKFzjyqMgCTuP4wEQ1mmtARq8916sK07cNE8Y/4Ct4sKh6GjY
UyGJsKF8UyGvdIVMVznu2Wy3XJZbPsPtOsPtJt2tkOZ2a3923G/R9sejkO5x
k+F5nelVwPLKY3tnc32yoIBMKCSDF57Oi07lxSXzkpJ4KfG8jBheVhQvL4x3
I5h324/3wJtb5cWs99h54bbV6ULud1wdtV2asSCizNA488l5i8Flq6416xay
bcOmXfW2w0Oq212a9y26fz4j+Brz3GVWxCV2dDw75jwnIQJKC+NdC+UXhAhv
B4nuBYgf+oorvSW1ntJ6N1mzs6zFQf7KVt5pLe22lPRYiPrMhQOmgkET3rAx
NGqo+Rqh0j9zdmBcscg+pOKTd2w/ffODxQDYGyEDFEXMRkGJp30x34EWloP7
ohT/OUDEAfiI4x/LqM83J76i9yn2F9Cr5Hdh7mkA82w/BWzAy8t781Q46Zck
QBoLysU4pWpgLoAZI8qzoBq3np6v11it1Nu4b7Rzw4wJi+UMo0VyADc+FLYV
2FOhCVDgRVgpz8uQWybXDciUx3S7TnctpLne3nEtprrc2Xa5t+Vyn+LyQDEl
FNcH+7Pldn/L/d62xx2qR9GO5y26102G93WWTx7HNxsKzOKdu8KLusyLS+Ul
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
K6CqcSuf4VY+x656gV1dg11TO/Db64G1b/rXvetf39z3T3vfpu7ebf09JsRu
O0qXB6MzhNWZyO88IOnKV3QXj/Q9msC9nab0zwwNznJEcyL1rBS4Y3pCNTM6
Mqsdn1XOzCnezwx/mJR/0EnfK8RzAv4sizdN5UxhWZOdQ+PvGKO19JGnNM19
qrKUOnydKrtMlZyjCk9S+bk0bhaNfYDO3Esf3M1gpAzSEgcpcUPkaCYxikmI
ZOIimNgw5kAosy+E2RvM/CjTfNNz9MC56MfTvKECAedssJGflNqIlMrc2ndM
3wALjTtuo30yLa+2Nbabv8I5PaTBVPLLV0Tv02ZEa044aR4YseDawrgRbYtU
x5pMPlw5iP8aIja02a0Du+H/vq2x0/kBHSQLyEaL/ECSh0LR44CTjmpQrdha
XGrOhyb5ePsQ8D84Dlpl/Toi0m41FsCyFcnXDaACPwUM2IVp6cI0dWMaUS1/
1/OpVuhrZWPPqqbuVS3dq1u71rR3/d7Zubanc11/x3pc+yZCqyGpxYLaZM9o
dGc2BHDfRgvfpErfHFa+OT3ytni8uXKys2Gqv3+GwJili2bY6inu+IR4Uied
VqtmFLoZydSseHZa/H5C9GFE8H6YNydgzwwOTZMZU/30yXbq+Fvy6AvSSCVR
U0FQ3SIorhHkBQTpGaLoOFGQQ+Rlkjj7yew9FGYqZTCZSk+g0WLplCgGOWKQ
GDpICB3Ehwxhg4cGgob6A4cAIbxwDh44Z33f8wRDwYRywAZDhoIhBTihV2oX
sB/6AnNfDjRAw+6LYCv0umVblVFz/dbGTotaHDjL6wbX74w87JA2NUkLToHJ
BdboM6gFMofYq443mb63ituz+CHlK6Aa8OzW3jzjtsrtb/tc7jGgMUKUBqF3
7URGOxyIvp4HqgFAwr9z01J4x4x335gNjqvayni2mVazgVr7Nxl8B4jydi0e
2mbjGlzTKmzzyoGWFQMty/tboVb0/bdW9reuGmhdPdDyG7Z5La75T3zT34TG
jcSGreS3RtQ3ZvQ668FXDqyX7pwaP8HzMHF1gvxpuqrqyMjTs+M1Nyfqqibf
vZtq7Z/uYUwRRBMU9djg6AhnQimcksumxepp3sQ0d2aKMzfG+aBlvZcPzfEZ
M3TKNIE01UucaCWMv8GNPsfqHg5o7/Srb/QrC/uHLwxITw2I87DCbCz/EI63
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
OKCtYY3UynW1Ol3thKpuWlY3J3g9N1Q3S3w93V07+a5m4sXzsScvRu+90N2u
0RbVaApeqk+/VB6rVWS9kh+sk2bUi9PeilIaBEmNvPhmbkwLO7KNFd4+FNo5
GNTFCOih+fdSffsp3gNkLyzJA2eCTYa5vwU1wL1AgIgr+o5t6wVbndejBfTA
OyZtD4EujJrrFsSqxdlXUVwrhpARLkogbQEkoAAVjS4gjJhyUy7AW6dBC9Hg
LnP5ccHGJKmVmzradPzchrGq5YAceOr/VVC+giAG6Q84B3Xg3uPGnSXwU7Y3
tsEsgzbrXsaC3O13HoymDDiC3nWaVw1abloistt+vXBwh2QFoQ14QKRHffQn
p3iiz2jnuS/UcXd0xg0qT02eNzo2Jc9feyxQeyxEmxuuPRqlzYnTZidrj+we
ycoYycwcOXR05EC+bt9FXUbRyMFy9ZGq4aP10rwOYR6el88Yuswm3RD0lUra
H8sbXynqm1QvetWPBjWVEm2lVls5rqiekjyb41XPMZ7N4p9Nd1ZPNlRNPKsc
e1Q5Wv5Ed7NKe/Wp5mK1+tQzZe5zReYL+f4a2Z5aSepr0c46YeIbflwDL7qR
E9HEDmthhrQNBbYPBnTS/bpoPj1Ur16KZz/JYwBy0CbUAPfruSJnK7LVGWhQ
+h54E300Buii9Tlw+7xY5rW4HU/JLvcGAQiRBQAPslB0SktA67dwnwN+w+gH
xu4xeEM2uMVeniPYlCC1dlVFmo6f2jTxaKW06UcaEb2kcJr0bRjBwBtnB9kB
mvD2ntPo09ytz7c3tUL0hlvC7a7+lrgkhpgAdwXAZ/gh1CET0tHHllPnhYvT
7ovRaxeBtrlmhqITBLKC0fkpqAI12UH6CtZkh6DDU46Eo5M4sqK1h2O1mQna
Q8nag6naA3vQB2D3Zo2k547sztelXNClXtOklykzHssOvBQdbOIf7GUfJDPy
GIRzrO7L/Oar4vp70pfP5U/rFfe7lKV0dZlIc0ejLh+V358UPZjlPJijP5zF
PprueDT15sFE9b2xe/dGS+/rrj/UXnmkOf9YfbJSebRKkfl0eG+1LO25NKVG
nFQrjH8tiKnnRb7hhjewQxtZwc3MwJZB/zaGbwfdu5Pm1U3x6CG79/2DuOKT
rfIRWqAeWKQfWBXoPeXWF/NiwcyCO9+umgwjBoDQp1CILmMO2u4LLIdWJ3w1
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
cU0aUiwJuCH2uSXyLhN4lvM97vHcH3JdH3NcqtjO1Uyn50OOLwcdXiGxIBS3
zIvVBrkY6N2qBg+RBzqMG3TCm5yF5QXAjJyP5kpBK3iA8TneqBlesZWWmvNh
eL1eT2rB9AEcEgwe0jBXWfN6bYmVmPvKdtiqwsxG9m8fP7cBRpiuevnw25/5
XUvoBPQxtxeUL2+SEXikEBeHElb74428cA4gGbjMDJu4ZSAN7UMAAll4YFoy
P3CR11prjFvqwG5IuKa27Y2d2xq74ZYD+Yze9hujGjBB1W/c0G/0rt+wsc+o
qce4qcu0ud2spcWitdGq7Y11e61tx3O7ric7uu/b95Y59N9wwF6xx5/bQTzh
RsoOIB+MpOxJpO7cTY/ZzwjKGnQ9N2RXyrJ/xnZo5jpiec5MnouQ7SljBKhI
obqBiInu6JnWuJk3SdMvUicfpU+U7R0rytBd2DdyfL/m8EH1wSxVxlFl+nHl
rnxF8pnh+Avy6AJZ+BVpyDVJQLHY54bI65bQo0zgfpfndp/r+pDjXMl2qmI5
VjMdXgw5vNSL9Rroa3tjGxoK9YgxbPUA5lqBAN4LOuHlhRW8eXNB5tqdpH9q
H4RiF5BhkbUESP7pFkb9OmIbprvX4DWELxqmkLX82IJeZn4yux3KIHNAxLH8
TeiQxErUEsWtP7AGFoHFGqmfP6J8VYi64ndxhO8B74E9ABf1koWZY+O3oX0+
+/+7IeHT8mb7A/Tp0dZnxq0v0YfNm9+AdkbNTUZNzUZNLUZNrUZNbfNl3Nyq
Pymg2bSl0az1rXlrvUXbK6v2F9Yd1Tadj2277tv23LHrLbHrv2aHvWiLO21N
yHUmZvmQ9oeQ02IoScnU6DRa0H6Ge86gxZUhqwqW9Uu2bRvHjsDdwebZC5lu
cqqPmhCo6wud6IyYaY6aqY+ffpY8+WDXRGna2LV03fm9I3l7NYcy1PsPqfYe
Ue7OVaQcVySeGo47K4+6IAu/JA2+Igm4JvYpFnmWCN1vC9zu8F3v8lzuc5wf
sZ0qWY5PmQ7PhuznxZqfBd0AhMAYaGxB2rrPWOiEEHAgcJ0Ec6EXzCFz7dyF
VuqANI74oWYIMRltHTRmP9tMA9gAOASYJxpU0DFXkF7AG5vjxKb+MlsHhZ85
IOLYsS2T19ZPPlgJLVHW+BOv+3s68UuYYrWUL+5Qvj5P/vYg8TsYZMH49X54
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
0QMvGF5XbKUAG/dM2FVbGa/+Jr9bA3p16PV6otfrCnP5Sc7qTN76NLTEAUhv
6Smz24FGWAyiekSJF/8B6pj8aDFZ40/CjqXQFRmEr4jU/+ukfv6W+kW1XrLr
5G+AGCGXHSJ9l0pcHIOM9msoem8XqRaA3l+z9MXb+ODtvfBOXngXT5ybB87d
A+fpgQ4X8PLAo/LEe3nhPb3xHj54N1+8qz864sEhiGAXQrAKI5pFEA2jiJti
SesSSJg95OVHKMvzqcsvUVeU0Fbco6+opq+oZ6xsHVzZP7iSMriKSf+dS14v
xG+U9m1VdBmq20x1jRbjb6ymam1nntlPPXKdLPecKPEZL/QfOxekOxEykh2m
2R+uTo1QJUQpY+MV0TsVkbuHw/bKQw7IgzJl/kekvrkSr+MSj3yx62mR0zmh
w0Wh3SWBTSHfuohnfYNrdYtjVcq2LP/0oBatZgDDXxF9MhfaOabf7wekgZph
nPZApH4fuzcaXpC8rtpIADYADp9uob/6iwRhueOjXqR5vTD5nFWHeX+mQ2QW
GYVJLLxltg5ohIWbaVONR4ESz2wE6pi+uxosBqCoePOLpAV1RdbAIhrpSzz1
M2APwMVqfWMs0X+bJV//rYm96AX57yPRa9cYpBrh7yD8lkC8YQDe1B9v4Ye3
9sXb+uJ3+KBzOubPT3H0ReXgh7f3x+8IINgFEmyCCJYhBLMwgnE4cVskcWM0
cV0saUUKyWAf2SCHYnCKgrlExdygYSpomCo65hVjeRNjec/gcuLgCgZjJZuy
lk/4SzywUdazVdlhqGk2GW0wn6iznK6xma6yn7rvMlnqMVHsPX7Jb/RMgC4v
eCQrRJMRpk4JV8VFKmPiFFFJiojU4dA98uB9ssBDMr8sqU+OxCtP4n5S7HJK
5HRWaH9BaFcgsL7Ct77Gs7rOtSrhWN5mW95Bz2crhtAmlk/mAiw8qfDPRV8B
jTiASCM5FTXD+fcO0Nsinmjz84Udw0X69+kADgHmIXw1rQK92nsN6ub1omEK
hzCnOCuzeOv2oAhmGAHIIbVxhhGmDDLXJOkp8fhmRB23kMUAFNWvfpUj8EBd
kYn9lkb6AtgDQvQbfWO8T/n6Fvquzrdn0adCvjtEQl+hT9SrFo68tgbmWjDh
nyDC5iD8Nv35KSYB6CwVswB0Zod5IBTBPIhgFkwwDSYYhxIMwwhbw4mbIol/
RRHXxhCXJ5J+SSf9coj8ay7l1zOUXy9Tfy2h/nqX9usTukEt3eAdw6CTYYAb
xNAGMUzqai7pDyHuL0nfxuGuLapWw5FG47E3ZpOvLGeeW09X2k9VOE/ecp+4
5jV20Xf0lL8uNxA9Kdwbqt4ZpoyNUEbHKiITh8N3DYekyYMyZAEHZX6Hpd7Z
Es9jErfjYpd8kdMZof15oe1FgfVlvtVVnlUx1/IGx/IW26JsATP+H3MdV/ln
I4yfJw2IXagZRqMvHwLJw/DKd1QX7EDvP94xQ3D4bBOt7k9i08qBf+l1h4a5
OoQ5zV5xhPdHBopg26L0yOEGI0zha45a4h6j0RxEHZ8sNvICo6z7BXXF9mWc
3sVDuG+APbB6yd7q8QMgv4yCPot0UW+0HNJ3B5Fq6JSHGKTaD+EETBhhdSjh
j1DC+hDC3yGEDSGEjSGETSGEzVChhE2hhI1hhA3hhL8iiH9GEn+PIq6MJv6c
SPp5N+nn/eSfj5B/PkH5+Rzl50Lqzzepv1TQfnlC++Ul/ZcG+i/tjF8GGL9S
GL8O0lawyb/x8etE/X/Lujcq2rdomrfrGozH60ynaixmqq2nH9pP3nGeKHEb
L/QcO+8zmu83cjRAezBIkx6iSgpVxoQro2IUEQnDYSlIr8C9Mv8DMt9MqfcR
iUeuxC1P7HJS5HhaaH9OaHtBYHWJb1nIs7zGtbjOsbjJsSh1m2f4G/8yVz6Y
C2Xk8INoTWOhGcajNUO4R9DwckPLhpCU598yfmzIfK7Xqxnp1fa/ep1hL8/m
rt0HSI8QEZDD0gNG2LC7viXuMtZlbhs7uWniMrIYgOLo0+Wal/qu2PyjoBMG
2WJgDyoFSQaNEfADIB+i9F19byxEn05adJKETnkAr+3VH5uSRFwSS1wSSVga
QfgpnGCgP+xmVThh9XxFEFZFEFdGEpdHEX+JJv6YQPxxJ+nHdNKP+0k/ZpF/
yiP/dJryUwHlpyLqT7epP92j/fSE9tNL+k9v6T+30X/uY/xMYvzMoBuwyCu5
hN+FA39Kev4e7tyoat2ibdw++sZootZ0+rn59BPrqXv2k6VOE8Vu45c9x856
6477jWQHaA8EanYHqxJDlNHhishoRXjCcOjO4eDd8sA9Mr/9Mp9DUq8sicdR
iWue2PmEyPGUcMdZoe15gVUB3/IKz+Iq16KYa17CMb+tZ/iP5prfh3lcj/F6
0vh3MwSSXxheLmgDwBVbWYml8K4p9/H2IQhf9euIzSs+6VWl1+vaIOYs+kLU
7/sR0gMiGofoR5ij3EnfEhNMRjIQdSxYrHzNxOOVumeY+a4obvkBBhm7/7tB
/NfzkgF+AOS/onz5lPLVA8rXpZRvrpO/vUz+9hx5Ub7+5JQs0mKwW4b+sJtd
xCXJxCWJxKUJxKXxC7UsgbgsibhsJ3FZKmlZOumHfaQfDpF+yCb/kEf+4RT5
hwuUHwopP9yg/lhG/fEB7centB9raT820H9so//YS/+RyPiJTv+ZSVnOIa7m
Y9eKe/+Udf2taNuobtoy8nb72GujyRqTmWqz6UfWU3ftJ286TVxzHS/wGD3t
rTvmO5Llr90XoE4NUsUHK6PCFBHRirD44ZBkeVCqPAD02if1Pij1zJK454hd
jyG9HPKFO84Ibc4JrC7yLS6DXjzzIq75DY75LcTw/4+55veoH0JrGgvNMBE9
QAGSn3/Vcf4F1UI9HFaYcCoX9CL8r17lVEzRIOYca3ku97eDCOk3x4sMwyTm
vlIbF7m9NWqJ0aba3Ua6w9sA7JHFbq6dur9q7MkKLeqKv8re/SRq/YH3STLy
5zDLuqifN1O/qKN8+ZzyVSXla+DG2+jzcd9eQV8qW3SajE66ySUtziYtPkz6
/hDp+wOk7/eTluz7WPtJSw+Qlh4iLc0iLc3RH3xzkrzsDHnZBcqyK5RlxZRl
t6nL7lKXPaIue0Zb9or2QwP9hzb6D730HwiMH2j0H4cov7KJK3m4NaK+P6Td
64fb/1E1b9S+2zJav2281mjqucn0E/Op+zaTZfYTN5zGC13HznuM5nvpjvqM
ZPpp9gaoUwJVsUHKSPQVOEVo3HBwkjxwl9w/XeabodfrsMQtW+ySK3Y6jvSy
O63X6wLf4hLPvJBnfo1rdp1jdnPBXJ82OZ/QY3wWWtNAsUvfDNP1b12h4eWP
nqGcdFJfsEevgd+yAJhH4atmA/XNH4Tm5QOder2wBlVEg7tUTPEg5jxreR5E
MN56QET9N/RghFm5y3bYoZYYZqZJNh7Zv33s2ILFpsp+m3z4sSvWo0EmalvG
617CWpDsCwL1sx7q563UL2Cc1VK+rKZ89Qip9g147Qb526vIbosukL87S0aH
E50kLT5OWpxHWnyM9P185aHziZacJC85RV5ylrzkAnnJJcrSq5Sl1ylLb1GW
llOXPqAufUJd+oK2tI62tJG2tJ2+tJe+jEBfRqMvG6T8wiIu5+JWCft/k3T/
Ie9Yr2z9R924ceTNlrHX2yZrDKerjacfWUzdtZm8ZT9R5DR+yXXsrPvoCc+R
bB/tQV9Nur86OUAZE6SMCFWERQ2HxA0HJckDdsn90mQ+GVKvA1KPTInbEbHL
UbFjnsj+pNDulNDmrMDyPN+8gG9+hWcGehVzzEr+a67z+gWovP+SRtwe1AzR
mqGe5BeGlx42LgIc2ojnYb4K6UUBvVqW93/U66ler+sMzAW0xAERDBBxQ7IQ
kAONME+getQSA83VcaYj6UYA9shiAIolf0xXrBpHXXG5uhYNMmnTj6J2JJne
Zd8AMZKon/Xrj+Foon5RT/2yhvLVU71q9yjf3KF8c4vy7Q10eMeiQvKiy+Tv
CsjfXUS1+IK+4A8F5O8vk7+/Qvn+GuX765Tvb1K+L6V8f5e65AF1SSV1yTPq
klrakje0Jc20JR30JX30JQT6Ehp96SDlJxbRgItbIehfLe75Xda5brj1L1XT
P9q3m0brtoy/3Db1zHD6icn0fYupMpvJEvuJq07jF11GT7nrjnmOZHlr9/tq
dvupEgOUUYGK8FBFaORwcOxwYKLcP0Xmmybz3iv9/+Zf+ty38pl3zVNPYHw1
PnFtAcWXQycovqz7HlpPfGA95b7V9HtWMxGZq+sluBkPGjCEF4aQMUPQsAZs
B3GTN2j7MPxwDFB8Gd/YrIscXzvA8bUY2He5IdsPGuIANunVi8FNjiRQFWYT
BGrVA1uJgbZv46w/ZFsAG/bQWmyK1o+5qpBS8eMGUEX2apfk8/3ij2FRBmwx
Avtll8H3cRy/ynHoKugWle1XuTZf4V4HLiGXX+EFRtzCK3zzroDuk5p9hX/W
Ff6ZV/hnXBGYCUazQBdLCc69Ijj/iuCiK4JLQXcVCa6+Krj+quDmq4I7rgnt
uSZ08JrQsWtCZ64LXbwudO2a8M0r4ncuSt87J/fwtOKTEyrPj6q9PKT5Zr/2
+916H3cYfNli9G2jyc+1Zj9XWP1YZPd9ruO36a5fJ3p86fb63Orzqd7/Y2XA
h6Kgdzkhb1ND38SFvY6Jfh0V/yoi+VVY+suQ7BdBeS8CQPH1zLfimXf1U4+6
p26NT1xaHju1geLLtvuhde9D6wkPrCbft5oGjC8A7LbqcQ==
           "], {{0, 100.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {144., 100.}, PlotRange -> {{0, 144.}, {0, 100.}}]], 
       EdgeForm[None], GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Py0=
         "]]]}, {}, {}, {}, {}}, LineBox[CompressedData["
1:eJwt0bdNgwEQBtAfTMY2OdsgWsIChJ7QURE6CrDJyYmcBAsQFoAFCAvAAoQF
YAHCAsCzRPGkK06nu+86p5fHlgqCIEhRSL7uYJApclxyzyvfVGnqZZQkp1zz
yDu/xA3rZ4IM59zyzCeRUBB0M8wsCZLMMc8CiyyxzAqrrLHOBinSZMiSY5Mt
ttlhlz32OeCQI46ZYYguwnzY64kbzkgzTh8xftz1xgNXnJBghB6ifMnnhTsu
yDLJAO3EidFGKy0000QjDdRTRy01VOczJ0qEMJVUUE4ZpZRQTBGh/3/+Ac0Z
Le4=
      "]]},
    VertexTextureCoordinates->CompressedData["
1:eJxd20topfUZx/FDRag7Zye2LrwgZyHURe1CORYXjggiGEEKXYgDxkUXveBu
FDQdjGAGJi6ymIAXnBDpInPULpKRFJupbRihYhTxcvDSOvE+RhRaoqBons8T
+K1evsNM5pz3w3nP+/7/Ty499Pupu38yGAyOnDcY/HAcDF645uCfD10/GDzw
43F8+/v3nlp+8td6cNm/3ltbfqZ7ePyS2YXDp/b7glMLa8t/7x7dePbj5QP/
7J568MLRwuEz3dPr1x07cvbf3ev3PffHteVXujcvvnlxPHm1e2v1nX8sH3i9
e3LHveceO/hG9/bXF1y0cPit7p1HH7/h6HjSvXv1Nb87cvad7pl77j4zOvpe
9+yvrr5zbfn97rnzv/nqlxv/6Z5/7cWHx5P/di88deySq/73Qffin3777PKB
7e4nbrjypsuv+rB76cIv337s4Efdf3n3+T9cfNfH3SdXHjp/4fAn3X+9/7bj
BxY+7V675ee/ODr+rPtvP/vw9E9f+rz79CfP/ObI2XPdZ9bu+/y7777Y9yvf
p8uVr+ar+XaXr+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv
5qv5ar6ar+bbfuX77aV7jnw1X823u3w1X81X89V8NV/NV/PVfDVfzVfz1Xw1
X81X89V8NV/NV/PVfDVfzVfz1Xw13/Yr3yvKja/mq/l2l6/mq/lqvpqv5qv5
ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/m237le2U58dV8Nd/u
Omq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+
7Ve+15YLX81X8+2un6P5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+
mq/mq/lqvpqv5qv5tl/53loOfDVfzbe7fDVfzVfz1Xw1X81X89V8NV/NV/PV
fDVfzVfz1Xw1X81X89V8NV/NV/PVfDXf9ivfQ3Xe+Wq+mm93+Wq+mq/mq/lq
vpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+7Ve+z9d55qv5
ar7d5av5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv
5qv5tl/5vljnla/mq/l2l6/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv
5qv5ar6ar+ar+Wq+mq/m237l+3KdR76ar+bbXb6ar+ar+Wq+mq/mq/lqvpqv
5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ab/uV75t13vhqvppvd/lqvpqv
5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvu1Xvh/U
eeKr+Wq+3eWr+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5
ar6ar+ar+bZf+Z6r88JX89V8u8tX89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8
NV/NV/PVfDVfzVfz1Xw1X81X822/8v1/nQe+mq/m212+mq/mq/lqvpqv5qv5
ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mm/7le+D9b75ar6ab3f5
ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar7t
V74P1fvkq/lqvt3lq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar6a
r+ar+Wq+mq/mq/m2X/k+Uu+Lr+ar+XaXr+ar+Wq+mq/mq/lqvpqv5qv5ar6a
r+ar+Wq+mq/mq/lqvpqv5qv5ar6ar+bbfuV7rN4HX81X8+0uX81X89V8NV/N
V/PVfDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz1Xw1X823/crX6x7HnAJf
PYx90GHsm41in2Uq1uWnYx13Pdb9NmOdaCvWFSbxHLodzy07cZ+7G/dFM/E9
OhvX3bn4nM6Hax75ar6ar+ar+Wq+mq/mq/lqvvtzRHu+x+t18tV8Nd/u8tV8
NV/NV/PVfDVfzVfz1Xw1X81X89V8Nd/j4aj5ar6ar+ar+Wq+mq/mq/lqvu1X
vl7XOOaI+OphzCkMY197FPugU7FvNh37LOuxLr8Z67hbse43iXWi7VhX2Inn
0N14bpmJ+9zZuC+ai+/R+bju5ud0MVzzyFfz1Xw1X81X89V8Nd/9Ob893xP1
Ovhqvppvd/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvprvibjOar4nwlHz1Xw1
X81X89V8NV/Nt/3K1/87jjk/vnoYc0TDmDsZxZzCVOxrT8c+6Hrsm23GPstW
rMtPYh13O9b9dmKdaDfWFWbiOXQ2nlvm4j53Pu6L8nt0Ma67+TldCtc88tV8
NV/NV/PVfPfncPd8V+r/4av5ar7d5av5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5
ar4rcR+k+a7EdVbzXQlHzVfz1Xw1X81X822/8vVzxzGHy1cPY85vGHNho5gj
moq5k+mYU1iPfe3N2Afdin2zSeyzbMe6/E6s4+7Gut9MrBPNxrrCXDyHzsdz
S97nLsZ9UX6PLsV1Nz+nJ8M1j3w1X81X892fk9/zXa2fw1fz1Xy7y1fz1Xw1
X81X89V8NV/NV/PVfDVfzVfz1XxX4zlF812N+yDNdzWus5rvajhqvpqv5qv5
tl/5+nfjmJPnq4cxhzuMuc1RzPlNxVzYdMwRrcfcyWbMKWzFvvYk9kG3Y99s
J/ZZdmNdfibWcWdj3W8u1onmY10hn0MX47kl73OX4r4ov0dPxnU3P6dr4ZpH
vprv/u+x7Plu1N/jq/lqvt3lq/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvhux
jqD5bsRziua7EfdBmu9GXGc1341w1Hw13/YrX38+jt9j4auHMSc/jLnqUczh
TsXc5nTM+a3HXNhmzBFtxdzJJOYUtmNfeyf2QXdj32wm9llmY11+LtZx52Pd
L9eJFmNdIZ9Dl+K5Je9zT8Z9UX6PrsV1Nz+np8M1j98DOLDiZA==
     "]], {}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImagePadding->All,
  Method->{
   "DefaultMeshStyle" -> Automatic, "GridLinesInFront" -> True, 
    "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.893933469123612*^9, 3.8939334807424717`*^9}, 
   3.894100588040464*^9, 3.894101962881427*^9, 3.8974620808208857`*^9, 
   3.8976319057943583`*^9, 3.9060421908723583`*^9},
 CellLabel->
  "Out[372]=",ExpressionUUID->"93d2aa06-b9a4-4e77-a5d0-f087f6b80239"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "Subsection",
 CellChangeTimes->{{3.894102023618561*^9, 
  3.894102036559133*^9}},ExpressionUUID->"aa1ef8e5-145b-4f3f-8704-\
589bccc9beeb"],

Cell[TextData[{
 "Beyond the beta function: theta integrals (leading-in-\[Eta] version of the \
Riemann-Wirtinger integrals)\n\n We need to be extra careful about the way \
Mathematica will draw branch cuts here. For the 2-variable case, it\
\[CloseCurlyQuote]s convenient to look at the product of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"\[Theta]1", 
       RowBox[{"(", "u", ")"}]}], 
      RowBox[{"\[Theta]1", "(", 
       RowBox[{"u", "-", "t2"}], ")"}]], ")"}], "c1"], TraditionalForm]],
  ExpressionUUID->"c36c2498-d50c-4ef1-ac64-7bd224d0a939"],
 " , for example, because Mathematica will automatically draw this with a \
short branch as expected. It\[CloseCurlyQuote]s a bit harder to force \
Mathematica to draw short branch cuts automatically when there are more \
punctures.\n \n Do note: once we have control over the theta integrals, \
placing the Kronecker-Eisenstein and the exponentials is trivial, because \
they don\[CloseCurlyQuote]t change the branching structure in a big way."
}], "Section",
 CellChangeTimes->{{3.894102563977064*^9, 3.894102577696574*^9}, {
  3.894103525186553*^9, 3.894103525607703*^9}, {3.897556300022881*^9, 
  3.897556345530944*^9}, {3.89755780849032*^9, 
  3.897557951320983*^9}},ExpressionUUID->"aa379a36-244f-48c3-a3c5-\
f2b1a1bdb22e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "IMPORTANT: Always check with ComplexPlot[] with the integrand  here to see \
that the branch cut Mathematica draws is a short branch cut between 0 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "2"], TraditionalForm]],ExpressionUUID->
  "bed545e9-3cfb-44b2-a103-91437ebad33d"],
 ". Otherwise, this will not give a satisfactory result."
}], "Title",
 CellChangeTimes->{{3.897558019260713*^9, 
  3.897558070469597*^9}},ExpressionUUID->"9a0e57cd-2ab0-4925-bf92-\
4aad7e155c11"],

Cell[CellGroupData[{

Cell["We define theta functions...", "Subsubsection",
 CellChangeTimes->{{3.894107258556727*^9, 3.894107261588475*^9}, 
   3.896247465297269*^9, 
   3.897560771853635*^9},ExpressionUUID->"29a50cb5-6a1f-4549-a37b-\
3c6d1ffeafd9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]1", "[", 
   RowBox[{"z_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{"EllipticTheta", "[", 
   RowBox[{"1", ",", 
    RowBox[{"\[Pi]", " ", "z"}], ",", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"I", " ", "\[Pi]", " ", "\[Tau]"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771936032003435*^9, 3.7719360901003084`*^9}, {
  3.7719361276634407`*^9, 3.7719361342038374`*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"6857992a-0d78-4e27-a7ad-6314512c59d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]1prime", "[", 
    RowBox[{"z_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"\[Pi]", " ", 
    RowBox[{"EllipticThetaPrime", "[", 
     RowBox[{"1", ",", 
      RowBox[{"\[Pi]", " ", "z"}], ",", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "t"}]]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.77398075968678*^9, 3.7739807785347567`*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"884a385b-b934-4fcf-a8f9-55b22a352591"],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"z_", ",", "alpha_", ",", "tau_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Theta]1prime", "[", 
     RowBox[{"0", ",", "tau"}], "]"}], 
    RowBox[{"\[Theta]1", "[", 
     RowBox[{
      RowBox[{"z", "+", "alpha"}], ",", "tau"}], "]"}]}], 
   RowBox[{" ", 
    RowBox[{
     RowBox[{"\[Theta]1", "[", 
      RowBox[{"z", ",", "tau"}], "]"}], 
     RowBox[{"\[Theta]1", "[", 
      RowBox[{"alpha", ",", "tau"}], "]"}]}]}]], "   "}]], "Input",
 CellChangeTimes->{{3.7733905479400826`*^9, 3.7733906937807555`*^9}, {
  3.773465809002386*^9, 3.773465827826071*^9}, {3.773465872432464*^9, 
  3.7734658751700573`*^9}, {3.7734659099696884`*^9, 3.7734659116807165`*^9}, {
  3.7734659425488167`*^9, 3.7734659498999944`*^9}, {3.77398080759728*^9, 
  3.773980810123867*^9}, {3.7739808729725885`*^9, 3.7739808803376226`*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"a63dcd24-a8bc-4641-9a97-5ee4e0c6650b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Now let\[CloseCurlyQuote]s look at the integral for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Gamma]", "0"], TraditionalForm]],ExpressionUUID->
  "4cb47982-9a0d-49cc-b856-72f17ec40db4"],
 ":[0,1] of the following product of theta functions (using ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "1"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "8a0582cb-4351-40b2-84da-881b0e7ad9a8"],
 "):\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Integral]", 
     SubscriptBox["\[Gamma]", "0"]], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"[", 
         RowBox[{
          SubscriptBox["\[Theta]", "1"], "(", 
          RowBox[{"u", ",", "\[Tau]"}], ")"}], "]"}], "c1"], "[", 
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "(", 
        RowBox[{
         RowBox[{"u", "-", 
          SubscriptBox["t", "2"]}], ",", "\[Tau]"}], ")"}], "]"}], 
      RowBox[{"-", "c1"}]], 
     RowBox[{"\[DifferentialD]", "u"}]}]}], TraditionalForm]],ExpressionUUID->
  "9182f50d-9038-4a34-a6bf-0676d3c22142"],
 "\n\nThis is the easiest integral to check numerically, and before \
regularization it converges for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "1"}], "<", 
    RowBox[{"Re", "(", 
     SubscriptBox["c", "1"], ")"}], "<", "1"}], TraditionalForm]],
  ExpressionUUID->"b6d8b961-fd5d-4e84-8981-b917ad49bebc"],
 " and if we group the theta functions under one power, Mathematica treats \
this as a short branch cut, e.g.:\n\n",
 Cell[BoxData[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "=", 
        RowBox[{"3", "/", "5"}]}], ",", 
       RowBox[{"t2", "=", 
        RowBox[{"0.3", "+", 
         RowBox[{"0.3", "I"}]}]}], ",", 
       RowBox[{"\[Tau]", "=", "I"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ComplexPlot", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", 
         RowBox[{
          RowBox[{"-", "0.5"}], "-", 
          RowBox[{"0.5", "\[Tau]"}]}], ",", 
         RowBox[{"1", "+", "\[Tau]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}]], "Input",
  CellChangeTimes->{{3.897560663030458*^9, 3.89756067567365*^9}},
  ExpressionUUID->"47a1b253-f778-4179-b614-4eaa925d8407"],
 "\n",
 Cell[BoxData[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx12z+IX0UUR/FFm7QpTSe2lrYSEBS7iFXaCBZWgp3EwiKthYLBSrHSUhsh
jRILERQhJoiiyCj+QdTwOlt3X/hMmPNImuEQ8tvdHGbmzvfeffSFl59/8aGT
k5NrD5+cnK33/ozPrHfOffXkGx/9NPnD89evXrjyw+TXLly58cH57yY/99jj
/z3x+beTn71896Vrv38zeTuld5/5cvI7V88+4Obk1/fP+2Tye/vfvz/52s5v
XsRv7fzx5Kf2r/fp5Ff3z/ti8q395/l68tv7v781+eYrl05/gjuT/92/3+8n
P3L2cdd/nPz0/vV+nnz2t1cv/DL50v7/8evk0w87/Re/Td6//Pk/Ju//vTf+
nLx/3JW/Jp/JuH3u78m395/nn8n7t3v57uR76xa+77Urv5hfzC/mF/OL+cX8
Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzO+6L7eLD9qn
9dqVX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+
Mb+YX8zves5uFx907naf1mtXfjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5
xfxifjG/mF/ML+YX84v5xfxiftd7cwuPwznbfVmPuCu/mF/ML+YX84v5xfxi
fjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5xfxiftc6aAuPw73Zc7b7sh5x
V34xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+V3r
2i08DnVQ782es92X9Yi78ov5xfxifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX
84v5xfxifjG/mN/1nbKFx6GubR3Ue7PnbPdlPeKu/GJ+Mb+YX8wv5hfzi/nF
/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8zv+u7cwuPwTmld2zqo92bP2e7LesRd
+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv2uOsIXH4d3Z
d0rr2tZBvTd7znZf1iPuyi/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hf
zC/mF/O75kJbeBxyhL47+05pXds6qPdmz9nuy3rEXfnF/GJ+Mb+YX8wv5hfz
i/nF/GJ+Mb+YX8wv5hfzi/nF/K453xYeh1yoOULfnX2ntK5tHdR7s+ds92U9
4q78Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8rrntFh6HnK+5UHOE
vjv7Tmld2zqo92bP2e7LesRd+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/m
F/O75vBbeBxy2+Z8zYWaI/Td2XdK69rWQb03e852X9Yj7sov5hfzi/nF/GJ+
Mb+YX8wv5hfzi/nF/GJ+Mb9rX2ULj0MO39y2OV9zoeYIfXf2ndK6tnVQ782e
s92X9Yi78ov5xfxifjG/mF/ML+YX84v5xfxifjG/mN+1T7aFx6Gv0hy+uW1z
vuZCzRH67uw7pXVt66Demz1nuy/rEXflF/OL+cX8Yn4xv5hfzC/mF/OL+cX8
Yn7XvucWHoc+WfsqzeGb2zbnay7UHKHvzr5TWte2Duq92XO2+7IecVd+Mb+Y
X8wv5hfzi/nF/GJ+Mb+YX8zv2sfewuPQ92yfrH2V5vDNbZvzNRdqjtB3Z98p
rWtbB/Xe7DnbfVmPuCu/mF/ML+YX84v5xfxifjG/mF/M7zqXsIXHoY/dvmf7
ZO2rNIdvbtucr7lQc4S+O/tOaV3bOqj3Zs/Z7st6xF35xfxifjG/mF/ML+YX
84v5xfyucyZbeBzmEtrHbt+zfbL2VZrDN7dtztdcqDlC3519p7SubR3Ue7Pn
bPdlPeKu/GJ+Mb+YX8wv5hfzi/nF/K5zQ1t4HOZMcOcU2tduH7R9s/ZZmss3
x23u15youULfoX23tM5tXdR7tOdu92m9duUX84v5xfxifjG/mF/ML+Z35XGY
G+qcSecS2sdu37N9svZVmsM3t23O11yoOULfnX2ntK5tHdR7s+ds92U94q78
Yn4xv5hfzC/mF/O7zvVt4XGYA8OdI+rcSecU2tduH7R9s/ZZmss3x23u15yo
uULfoX23tM5tXdR7tOdu92m9duUX84v5xfxifjG/mN+V789tds6vc2GdI+rc
SecU2tduH7R9s/ZZmss3x23u15youULfoX23tM5tXdR7tOdu92m9duUX84v5
xfxifjG/K4/DnGbn+joH1rmhzpl0LqF97PY92ydrX6U5fHPb5nzNhZoj9N3Z
d0rr2tZBvTd7znZf1iPuyi/mF/OL+cX8rjwOc7ed0+xcX+fAOjfUOZPOJbSP
3b5n+2TtqzSHb27bnK+5UHOEvjv7Tmld2zqo92bP2e7LesRd+cX8Yn4xvyuP
wxx15247p9m5vs6BdW6ocyadS2gfu33P9snaV2kO39y2OV9zoeYIfXf2ndK6
tnVQ782es92X9Yi78ov5xfyuPA5z8Z2j7txt5zQ719c5sM4Ndc6kcwntY7fv
2T5Z+yrN4ZvbNudrLtQcoe/OvlNa17YO6r3Zc7b7sh5xV37X31vZwuPwew64
c/Kdq+4cbuc2O+fXubDOEXXupHMK7Wu3D9q+WfsszeWb4zb3a07UXKHv0L5b
Wue2Luo92nO3+7Reu/K78v3fS+rvsfT3Hjon37nqzuF2brNzfp0L6xxR5046
p9C+dvug7Zu1z9Jcvjluc7/mRM0V+g7tu6V1buui3qM9d7tP67Xr/9oslyo=

     "], {{
       {Opacity[1.], Texture[
         GraphicsBox[
          TagBox[
           RasterBox[CompressedData["
1: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
XvZ9fUBW9GfCaV6H44Fw9h9mhU9V4nMdzg0+N/o0QSIwYZhb+jRAfI0bvup7
fVw1uc/7KsnZlFHihHGBMG4YSZbsq8L4K6IvRvIVrO74qim+6htf7MZX/MO+
tuL2ZN3kE9njc8NXY4/PTTjuXwRH4cPGm2xMSbT5QV8NUOZGH8ZbB2Wk7PbZ
q1TdZq+P0uqarNt9VYCsra8qkCX7qoHIvupyZGUNduMr/pOyQACTTT4MZ+ur
scfHt+trH477w3Bu8tmBI/qK3agUuearwYQa1/vIleqirBu+anKfbaXqXiXH
DV8OKdf/cNFAVoXxwHgrsi9Rlr8qytrxVdvxVQfZ+mpIvtif7WtP1k8/zD8N
h/nb4NzwtQ/nPX0abFjJLZXqIL769UpiGSl7laq3+HpfnEpcMKKs676qQJbi
iwnWWDFbX/V9X40bvpogH/D1PlnXH+YtHPZnwvG8H87P5APJ7PdpgEQa7/FV
ZwIw1yvVGLHMps+2UvUX9NnK2vNVZbwwW181kK2vOsjWF/yN7PtiJVm/zNc1
OLf4eh+c+nvg7Mj6m33B31S0cYsv0KfOiAnWb6tUA7Ku+ZJM7cr65b6qjBhP
dd9XDWTrqy423PfVuM1X86d9xW/19X44gA/41X8SDrPnq/pBPj8BZ/ubuv78
QAI3+4BKkJivdpuv6i/ss+dL+X9wg2x9Sb/inq/6vi+l/J6vPQV/g69Y4zqc
PV8ynBu+boHDbOD8Yj7XfO31gU/pji9W7gMR7fbZVgJIf6rP+03JlZR/eEeW
4gv+Knu+IBxYDPqCDK/7Uv42+1t8QWXwj+Ttvm7AkX3VbuFzE86tfH7ySZZ9
gX94v8/Ol4BtJfA14j19lL+mPuQL/lo/IWtf7t6fL/n5lH/vwBf8C2frC/6l
vetr843TDV8/8cVLVtZ4j69b4dT34OzxuQ2O++bD/DPg7PBR+ijfU+32CcMv
5bf4gl9H9vvs+4JffZw7+XCZ230pf+FvfcGvC1tf8jdmO77gN2/XfO3+4frJ
H76Ub/v3fe3Difw8OLf6cil8fhacW/js9dn6Ur5D3qsEv4WWvj276csNvp0D
2Xy38Iv6KL5q+76U77VkX8o3z7Iv5aehXV/bP1zbTyp+xg/LO77iiqzrvv52
OJ73w/k5D/Oer/q+r9r1PiHwMykTrN5WCf5MJP18dM3XL+0DfirZfMcr+6rv
+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
fMDE+Yycx8g6Daxdz1p1jEnHGLSMXstotbRGS6u1tEpLX2ipMx11qqOOdeSR
jjzQke/0xBs98VpPvDTgz434UyP+xIQ9MmMPLOgPVvSubfmdffmNA/mra/G1
Z/6Vf/ZVcPplZPJlfPxlavRldvhVcfBVpf91o/vXdufbfvvuqHl/3Hg8rT2f
V18hlXfL0hFWPMULKjKvoXJ6Jmdis1YuuDyOL08z6HkRU9UwdQvX9nD9iDDM
CBNCmnHSQpJWCncwmJNFXdzSzS/cwtyzmnpWE/d67L4auq/6rquu66rtWjdd
67pzXXWuyo5V0bHK21dZu5C2CUmrELfyUQsfNvNBE+c3iXA4l4F16FmbnjXr
GCOEo1PgXEI45xDOiY46Ane1i3DItzIc4oUBfybBMWEPzOgPFvR76/KObfmt
CMcJ4Hztm38VmH0Vnn4Zm3yZHH2ZGX6VH3xV7n9dEzJWIWUREmYhZuYjJj5k
5ANGzmfgPHrOqWPtOtaqZUwaxqBhdGpGo6bVavpSTV+o6XMNdaqhTjTUkYY8
1JDvNORbLfFaS7zUEi90+DMd/kSPPTJgD4zYD0b0e9PyO/PyGyvytQ350rH4
wjX/3Dv73D/9LDT5LDr6LDn8LDP4rND/vNz9ot75st3+qt/8dlj/flx9OK08
mZdeIMU3y8IBljsmsmdk5pJOa5mU2HHxJoS8SywPs+BT49M6dt7GVH1cPcY1
M0K3JPQ4YSAJE4VZaNTGLu0c4uDnDmHmEKbO1dixHjmuBo6rvv2q67hqO9ZN
+7puX1ftq7JtVbSt8tZV1iqkLULSIsTNfNTEh018UIHj0rMOHWvTsmYtY4Rw
tGpaA+GoRDhq6gzCOYZwDgAc8o2WeKXAearHH+uxhwbsPoCD3jEvv7UsARz7
4gvn/AvP7HPf9LPg5LPI+LPE6LP04LN8//NS7/PaKmMWUiYhYRJiRj5i4EMG
PqDnfDrOo+OcWtauYa0a1qRmDJeMVsVoVPSlilap6HMVdXZJnV5Sx5fU4SV5
cEm+vSTfqIlXauKFmnimwZ9q8Mda7KEO+0GHfq9H7xiW3xqXX5uQLyyLz2zz
vzhmf3ZNP/VOPg2MP4mMPokPPkn3P8l3Py13/lxv/aXd/Lxf/3pYvTMu/zAt
PpoXniG5l2j2LZ4+JFInVPKCTqhZ2/yZd/EijLxKIm9yy4MyelRHT9rYaR87
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
e+8JgiTovUsy6b2Du+YYdMTecy5Ak5lSVUxHPJ8UJdXL57245pzfcWdUuNIq
XdZKl6XKaa66NVbf6mtutLXXqroref2VpPEisvk8vP00tPs4uP8waGT/7cTu
29ntt8ubQVtrobtLksM55cm09nzScGU339isruF0z2A205/HNZ1qus50g+fx
YxfGqQvz/GXSylXyxlXqznX6/k3m0U322U3O5W3ezW2+86bIdV3quSr3XlYy
F9XseQ13Vsuf1oGTenhcjw4b0EED3m/w7TX43jf8+06j712jb7PJt9HkW2vC
K014qQkvNGFBzmwjmm5EjgY40QDt9dBWD0bqwFAdGKjl+6iczmquvYprqeKa
Ktn6CraGyqkkchhBTkm5t6jcK8rJrXBnEzluQU5KpSu50plY5Uyovo2vvtHV
3KhrrxX1VzENl5FN5+FtZ6GdJyG9R8FDB0H23bfTO28Xt4I28HwDmqtHM/Vo
qh5N1sHxOjhWB0drwXAtGKwB/dV8r/C0qOI7Krm2Sq6lgmssZ+vK2ZoyprKU
KS9lykq9JaXeolJvYaknv9STW+rJLnVnlrnTy9ypZa7kMldSudNUfmuouI2r
vNFUXiurrmQ1l1G1F2H158HNp2/bj193H74a3Hsx9v7F9LsXS+svt5aDducj
D6dlJxOq87G4q5GE28Ekd1+qtyeTrT2RtZ4qes9Uw2fa8fO4mQvD4mXC2mXi
1pXl/bX14Dr1+Cb9/Cbz6ibr5ibXeV3guiryXJZ4L8qY8wr2rJI7reJPqsFx
DTyqhYe1aL8O79X5dut87+v+fbvO967et1nvW2/wrTbglQa81IAXGvCdHEc9
nKiD9jpoqwUjtWCoBgzU8H1UTmcV107lNFWw9eVsbRlTVcpUEDlMaam3mMjx
CnLySj05pe6sMncGlWMtc1nKneZyp7HiVl9xo628UVVdy6uvJLWX4fXnIU1n
Qa0nb7qOXvXvvxzdfTG5/WJ+48U6nq/Ds3VouhZN1aLJWjheA8dq4GgNGK4G
g1Wgv4rvreS7K/mOCq6tnGsp5xrL2PpStqaEqSxhyouZ0mJvcbG3qNhbUOzJ
K/bkFHuyit0Zxe60YndKsctS4koscSaU3MaX3upKb9Rl14ryq5iKy8iqi5Dq
89d1py+bjp+3Hz7r3Xs6vPP95Ob3C6tPNxde7U6HHk5ITmyKiyHtdb/B2WP2
dFqZ8qOIxuOozhPhti63ncU6zjVzF7rli/j1S+P2lXn3KunwOvn0OuXiOu36
Jv32Ost5leu6LPBcFHnPS5izUva0nDup4I8rwVEVPKyCB9Vovxrv1uD3Nb6d
mn/frvFt1fo2an3rdb7VOrxchxfr8EIdnqtDM3dyaqG9Btpq4Eg1GKoGA1Wg
r4rI6azg2yu41nKuqYxtKGVrS9kqKqesmCnxy/HmF3tyiz3ZxZ7MYnc6lZNc
7EoqcZpKnIaS27jSG03ZjbL8WlZxFVV5GVZ98ab27FXjyfPWo2fd+z8Mvn9q
3/p+dv3pGp6vwbM1aLoGOarRZDUcr4ZjVXC0Cg5XgsFK0F8Beiv47nK+s5xv
K+NaSrmmEra+hK0pZquKmPJCpqTQW1zoLSz05hd6cgs82QWezAJ3eoE7tcBt
LXRZCl3mQqex8FZfeKstulEVXcuLryUlVxGlF8Hl5y8rT5/VHn/fdPhdx943
/dtf2ze+mlv+enP2x/cTQYejkacDssse9W2n3t1mYooO39QcBbceh/WcRA6f
SsbPZNNnyoVz9eqFdvNSv3Np2L9KOL4yn10nXV4nX1+l3l5lOC+zXRe5nvN8
71khc1rMnpRwx6X8URk4LAcHFXC/Eu1V4t1KvFPl267693dVvq1q30a1b63G
t1KDl2vwYg2RM1eDZmrQVI0gBxE51dBWBUeqwFAlGKgEfQE57cJrkCCnlGso
YWuL2eoipqKIKS1kBDlFhd6CQm9egSenwJNV4MkocKcVuFMKiJzEQmdCoTO+
8FZXdKMuulEUX0tLriJLL0PKLl5XnP1YffK04ehJ2/63vTtfj25+Nb369Sqe
q8KzVWi6Cjmq0EQVHK+EY5VwtAIOV4DBctBfDnrL+O4yvrOUby/lWkq4pmKu
voitLWKrCpmKAqY031uU5y3I8+bneXPzPNl5nsw8d3qeOzXPnZznSspzmfKc
xjynPu9Wm3cTm3cjy7+OLrgKL7wMKjp/UXL2pPzkm5rDvzTtftH17vORtc9m
Fj/fdHz/fvT1UX/YeVfMdVusq0nnzd3/oeLgRePR687joIGTsLHTSMepZO5M
tnyuWD9XvbvQ7l7GHV7Gn1wZz69MV1dJN5fW24s053mm+zzbc5brPc1nTgrY
4yLuqJg/LAEHpWC/DO6Vod1y/L4c71T4tit8WxW+zQrfeqVvrcq3UoWXqvBi
FZ4PyJmqQpNVyC+nEo5UgKEKMFAO+sr5noCc1hKuuZhrKGbrithqKqcsnynO
8xY+kJOV5xHlWPNcljyXOc+ZkOeMz7vV5d2q8m4U+dcx+VcRBZchRRevis9+
KDv5turoq4b9L9p3Ph/Y+Gxy+bMVPFeBZyrQdAVyVKCJCmivgGPlcLQcDpeB
wTLQXwZ6S/nuEr6zhG8v5lqLuKYirqGQrS1gq/OZijymNI8pyvUW5Hjzcrw5
OZ6sbE9Gtict252S7U7OdiVmu0zZTkOWMy7rVpN1G5t9I8u+js6+Cs+5DMq9
eJF/9qTw5MuSo8+r9/7Q/O53fau/ccz9bsP+zW7/i+OOkMum6Ns6hSdj76uS
/e/qDp62Hz7vO3o1ehw0cRI6exqxeBa9dibdOle8v4jdv9AcX+rOLvWXl8ar
S/PNheX2PMV5luY+zfScZHtPcpjjPPYonzss5A+K+P1isFcCd0vQ+1K0U4q3
y3zvynxbZb6NMt96uW+1wrdSgZcq8EIFnq/AswE5kxVo/E5OORgqAwNloK+U
7ynlu0Q5xVxzEddYyNYVsDUFbGU+U5bHFFM5+Tne3BxPdrYnM9uTnu1OzXZb
s11J2S5ztsuY5dRn3WqzblVZN/Lsa0n2VUTOZXDuxau88x8KTr8qPv5zxf4f
G3Z+17X+27HF3y7juXI8U46mypGjHE2UIXsZtJXB0VI4XAoGS0F/Cegt4buL
+c4ivr2Iay3kmgu4hgK2Lp+tzmMrc5myHKY421uQ5c3N9OZkerIyPRmZnrQM
d0qG25LhSsxwmdJdhnRnXPqtJv02Nu1GlnYdnX4Vnn4ZlH7xIuP8+6zTL3OP
f1+4/+uq7V+2r/yzfepX64N/2Wv/8aw++KYyypP6/g9Fe5/X7v+l7eDb3sOn
I0fPx49fzZwELZyGrp5GbJ5F75xL987lRxexpxfqi0vd5UX89XnCzVmi8yzZ
dZriPkn3HGd6j7KYoxz2MJc7yOf3C/i9QrBbCN8XoZ1itF2M35X4tkp8myW+
jRLfWqlvtcy3XIYXy/BCOZEzW46mqZzJMjReBscEOWWCHDhUCgZKQF8J6Cnm
u4r5jiK+TZBTyDUWcPX5bE0eW5XLlOcwJTlMYbY3L8svJzPTk55J5CRnuJOo
HGO6U5/u1KbfqtJv5Gk3krTriPSr4PTLVxnnP2SefZ1z8sf8g9+Uv//XpvV/
GZr75yU8W4pnStFUKZosRROlyF4KbSVwtAQOl4DBYtBfDHqLQHcR31nItxfw
rQVccz7XmMfV5bI1uWxVDlOezZRkMYWZ3rwMb3a6JzPNk57mSU1zW1PdllR3
YqorIcVlSHHGWZ0a621s8o0s+SY6+TrcchVsuXyZfPE0+eyrlJM/pB/+S+7O
L6pX/mFw/J/WO748rP7xqijYnbLzy6L3v67d+0Pb/ue9B1+NHH43fvTDzPHz
hZPXq6dBG6eh22cRe2fRh+fSkwv5+UXs5bnm6lx/fWa8PTU7T5JcJ1b3carn
KN17mMEcZrEH2dx+Lr+Xx+/mg/f5cKcAbReid4V4q8i3WeTbKPKtF/vWin0r
Jb7lErxYiudL8RyVM12KHFTOeCkc88uBQ8VgoBj0FYGeIr6rkO8o5NsKuBYq
pz6PrSVy2IpspjSLKcr05md4c9I9WWmejDRPWpo7JdWdnOpOSnWZUlzGFKfe
6tRab1XWW3nyTUzydaTlKsRy+dpy8Sz5/Bvr6WdpR/+atff/lW38j46Zf1jE
s8V4uhhNFaPJYjRRjOzF0FYMR4vgcBEcLAL9haC3EHQX8F0FfEc+35rHNedx
jblcfQ5bm81WZbEVWUxpJlOc4S1I8+amerNSPOlWT6rVbbW6LcnuxGRXgsVl
SHLGJTk1ibex5lu56UZiuolIuA4xXr02Xj4zXHxrOPvcePIr8/7/k77+X5oG
f7FR9pcL5eZ/TX/392U7v2jY/WXn3m8G9v9oO/jz5OHXs0dPFo9/WD15sXny
evs0eO8s7PAs4uQ8+uxcenGmvDxTX5/qbk7ib08SnMeJriOL+8jqOUz1HqQx
+xnsfia3l83v5oD3uWAnD27noe189C4fbxXgzQLfRoFvvdC3WuRbKfItFePF
YjxfjOeK8QyV4wjIGRPkFBM5Q0VgoBD0FYKegJy2fL5F+D7M5RpyuNoctjqb
rcxiyogcpjDdm5fmzU71ZKR40qyeFKs7OdmdlOwyWVxGi0uf5NQmOlXmW4X5
JsZ0E5VwHWq8emu8fG64eGI4/9J48lvT4T9a3/3XMsffzePZIjxdhKaK0GQR
Gi9C9iJoK4QjhXC4EA4WgP4C0JsPevL5rjy+I49vy+VbcrimHK4hm6vNYqsz
2coMpiydKUljClO9eSnebKsnI9mTmuSxJrktie7ERLfJ7DKYXPoEp9boVBlu
FfG3MfqbKN1NmPb6rfrqperyqfLia/n5n6Snv5Qe/Gdtwb+dpW38HxVb/6lp
+791vv+H/t3/Obr3q4n9300f/Gn+8Mvlo2/Wjr/fOn62c/Jy7/TN4WnwyVnY
2VnU+WnM5ani6kR1faK9OdY7j4yuI5P7MNFzYPEeWJn9VGYvjd3L4HYz+fdZ
YCcb7OTA7Rz0Lhdt5eHNPLyR51vP963l+1YLfMsFvqVCvFCI54uInBkqx1GE
JogcNFYIR6mcoQIwUAD6CgQ5QJTTnsu35vrl1GWxNZlsVSZbnsGUpjNFad78
FG+O1ZuZ7EmzeFKS3MmJ7iQqx0jl6IxOtcGpjL+V6m+i427CtdfBmqtXqstn
yotv5ed/lp3+Wnr09wr7/z6LZwrwdAFyFKDJAjRegOwF0FYARwrgcD4czAf9
+aAvD/Tkga5cviOHb8vhW7K5piyuIYury2RrMtiqdLY8jSlNZYpSmAKrNzfZ
m5XkSU/0pJjdlgR3YoLbZHQZDC59vEsb51TrnErtrUx9Gx17E6G4CZFev4m+
fhF+9UPw1bcvrr76yhX+r1fD/+fau/9tevv/cuz8neP9/z29+4u5vX9Z3P/1
ysEf1g7/vHn01fbxd7vHTw9Onh+dvjo5DTo7CTs/ibw4jrk6ll8fx94caW6P
4pyH8a6DBPeB2bOf5N23MHtWdjeF3U3j3qfzOxlgOxNsZ8F32WgrG23m4I0c
vJ7rW8v1reb6VvJ8y/m+xXy8UIDnCvAskYOnqJwJIgeNFcBRKmcoHw4E5HTn
8p25fHsO35rNN2dzjVlcfSZXS+VUpDFlqUxxClNo9eYle7MtnowkT6rZk2xy
JyW4zUa30eCKj3fp9E5NnDNW65RrbmNUt5HKmzDZdZDk+mXk1bOQqyevrr5+
cvPD72Ddf8Iz+Xg6Hzny0WQ+Gs9H9nxky4cjeXA4Dw7mwYFc0JcLenJAVw7f
mc23Z/GtWXxzJteYwdVncLXpbHUaW5HKlqUwJVamMJnJt3hzEr1ZZk+6yZNi
9FgMbrPebdS54rUuncalUTljlU653CmV3kZH34ZH3ISE3Lx9dfP6h9vQb9yK
z7jMXzJd/+1s5u/21//zzvZ/ebf73zf3/nFr/5+39v9t++D37w8/2zv68uDo
m6Pj74+Pfzw5fnV2HHR+FHZxFHl5FHN9KL85VN4eqp0HOteB3r1v8OwnePbM
3t0kZtfCvrdy71O4nVR+Ow1sp4N3GXArE21moY0svJGN17N9a9m+1Rzfcq5v
Kde3mIfn8/BcHp4lcvAUlTNB5Yzlw1EqZyggpzcHdOcAIiebyGnJ5JoyuYaA
nMpUtjyFKbUyRclMgcWbm0TkZJg8qQmeZIM7Ue9OiHMZdK44jUurdqpinQqF
Uya7lUhuIyJvQ0Nvgt7cvP7xNug7l+QLJvE3qOm/45lcPJWLHHloIg+N5yJ7
LrLlwpFcOJwLB3PgQA7oywY92aA7C3Rm8e2ZfGsm35zBNaVzDWlcXRpXk8pW
prDlVrY0mSm2MIWJTJ7Zm2PyZho96QZPit5jiXObte4EtTs+1qVTuNQyV6zE
KY9yysKdMcHOmDcu6QuX8qkn7mvG+hko/Te+6x9vx/7hfO7vj1f/x+Hm/3uw
/T/33//yYO/XB/u/Pzz4/OjgL8cH354cPj09fH52+Pr8MOjiIOzyIPLqQHJ9
ILvZV97uq5z7WtdenHsv3rNr9O6amPdm5n0Su2Phdqzcdgr/LhW8SwNb6XAz
A20IZOL1TLyW5VvN8q1k+ZazfUs5voUcPJ+L53KJnOlc7MhFk4IfKmcsF45S
OUNUTn8O6BXkZIOuLL4jk2/L5FsyeCIn3S+nKoWtsLJlyUyJICeJyU8kcrIS
vOlGT2q8JznOnahzmzRug8oVp3Rp5C5VjFMR7ZRFOKWhzpi3TulLl/yZW/Ot
1/wFl/9b1PILPJ2Dp3KQIwdN5KDxHDSWg2w5cDQHDmfDwWw4kA36skBvFujO
BJ2ZfEcG35bOt6TzTWlcQypXn8LVprDVVrYymS2zsCWJTJGZKTAxeQnebIM3
M96bHudJ0XmSNZ4kldusdBvl7nipWy9x6yLd2jC3Ntite+3Rv/CanjIp33B5
fwY1vwVd/+IZ+acbxz9dLvzz2covTzd+dbL1m+PtP5zsfHby/svT3a9P956c
7T0733txsf/mcj/4aj/sei/yek9ysye73VM491SuXY17V+fZ1XveG7zvE5gd
E7uTyG4ncdsW/l0yv5UCtlLgZircSEMb6Wg9Ha9l4NUMn8BKpm8py7eY5VvI
xvPZeDYHz+QQP4KcSSrHHpAzkg2HiBzYT+X0ZIKuTEDkZPCt6XxzGtcoyEkV
5HCinHILW5rEFCcyhWYmP8GbY/RmxXsz9J5Unceq9VjUbnOsO0HhNsiInLgo
ty7crQ1x69664156jM8Yy3ds1peg/A+o7Zd4OhtPZWNHNprIRuPZaCwb2bLh
aBYczoJDWXAgE/Zngt5M0J0ButJBRzrflsa3pvHNqXxjCldv5eqSuZpktsrC
ViSxZWa2xMQUJTAFRiYv3puj92bFeTO03jS1JyXWk6z0JMk9iTEec7THFOEx
hXlMwd7E197kF0zaD1zut3zZl7Dhj7D71+zwv7nHf3Uz829XC7+5WPnd+fof
zjc/O9/64nz7q/Od7853nl68//Hy/cvL92+udoOvd8NudiNvdiW3u1Lne4Xr
faz7vdr9XuvZifPuxDM7BmY7gd02ce8SuXdJ/JaF30oGm1a4kQI3UtF6KlpL
wwKr6b6VdN9yum8pw7eY6ZvPxHNZeDYLz2T55UxSOXYiBwlyRqicwSy/nB5B
TgboTOfbqZyWVL4phWtI4eqsghxOlFOeyJaamWITUyjIMTA58VSOzpum8aSo
PFalxyLIkXrMEo8p0mMK95hCPOa3XstLJvUZm/2EL/oK1HyGOn6DpzPxVCae
zEQTWWg8C41lIlsmGs2Ew5lwKBMOZMD+DNCbDnrSQVca6Ezj21P51hS+JYVv
snINyVy9hatN4qqT2MpEttzEliWwJUamyMAUxDN5cUyOzput8Waqvemx3jSF
N1XmTYnxWqO91givNcybEsykvWEzX7B5z/jiJ6D6K9j8Oer5PTf0O+/Y71yO
39/O/eF68U9XK59frX1xufHV5ea3l1vfX7774Wr7+dX2q+udt9c7ITc7Ybc7
kbc7EueO1LUjd+8o3Tsqz7bGu63zbuuZd/HsOyP7LoHbMnNbifxmEti0gI1k
uGGF61a0loLWUvFqKl5J9S2nERbTfQsZvvkMPJeBZzP9chyZaJLKsQfkjFA5
g1ROXwaR050uyAEdqXxbKpHTbOUbrVx9Mldr4WqSuKpEtsLMlpnYkgQipzCe
ydczuTomW+vNUnszBDlKb6rcmyKlciKpnBAm7S2T8YrN+ZEr/J6v+AY2fIE6
/4inM7AjA09moIkMNJ6BxjKQLQONZsDhDDiUDgfTYX867EsDPWmgOxV0poKO
FL7NyrdY+eZkvtHCNSRxdYlcTSJXbWYrTWy5kS0zsCXxbJGeKdQx+VomT83k
qJhsJZMlZzKlTIaEyYhiMiKYzDAmK5jNecPmv+SKf+Qrvgf138LWL1HvZ/zQ
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
ye3/H1MrvM8=
            "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
           
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
           False], DefaultBaseStyle -> "ImageGraphics", 
          ImageSizeRaw -> {144., 144.}, PlotRange -> {{0, 144.}, {0, 144.}}]],
         EdgeForm[None], GraphicsGroupBox[
         TagBox[PolygonBox[CompressedData["
1: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
Py0=
           "]],
          Annotation[#, "Charting`Private`Tag$81714#1"]& ]]}, {}, {}, {}, {}},
       LineBox[CompressedData["
1:eJwt0bdNgwEQBtAfTMY2OdsgWsIChJ7QURE6CrDJyYmcBAsQFoAFCAvAAoQF
YAHCAsCzRPGkK06nu+86p5fHlgqCIEhRSL7uYJApclxyzyvfVGnqZZQkp1zz
yDu/xA3rZ4IM59zyzCeRUBB0M8wsCZLMMc8CiyyxzAqrrLHOBinSZMiSY5Mt
ttlhlz32OeCQI46ZYYguwnzY64kbzkgzTh8xftz1xgNXnJBghB6ifMnnhTsu
yDLJAO3EidFGKy0000QjDdRTRy01VOczJ0qEMJVUUE4ZpZRQTBGh/3/+Ac0Z
Le4=
       "]]},
     VertexTextureCoordinates->CompressedData["
1:eJx1my2oJlUchy9arFttYjVulU0aFUxGFQwmwajVqE0Xk2CyatS2BsMIC6Mw
yCCDOn6O4/I2q3vv8vyG3zPslsPDvu+8Z3g45/w/zn3mjbdfefOJq6ur95+8
uroe/e+T955+/avPP7sDf3TDX4Zf++rzW3ff+zr88c3/3wu/e423vtXnh/AL
rz546/3f7+v7Y/ip757/8IufftDzpvC/D7/96Ys/6vlz+PtHD9DvLeGffrj+
wM/huze//0v4pWef++/2N79qPmv4m3defviJ38I3X7/1R/j2zQf+DD+4me9f
4evZPv3635r/Fr553N1/9D57+IMvrt/g3/CLN+/3IPzo30V8ePWIXxi/MH5h
/PbnhzB++/tjGL/9vCmM337+HMZv/94Sxi+MXxi/PZ81jF8YvzB+YfzC+O35
b2H89vvsYfzC+O11ebnzuHVqrx7xC+MXxm9/fgjjt78/hvHbz5vC+O3nz2H8
9u8tYfzC+IXx2/NZw/iF8QvjF8YvjN+e/xbGb7/PHsYvjN/eZy93Hrfvep3a
q0f8wvjtzw1h/Pb3xzB++3lTGL/9/DmM3/69JYxfGL8wfns+axi/MH5h/ML4
hfHb89/C+O332cP4hfHb5+ZFfJyj3ne9Tu3VI37780MYv/29MYzfft4Uxm8/
fw7jt39vCeMXxi+M357PGsYvjF8YvzB+Yfz2/Lcwfvt99jB+Yfx2HHQRH3GR
z1Hvu16n9uoRvzB++/tjGL/9nCmM337+HMZv/94Sxi+MXxi/PZ81jF8YvzB+
YfzC+O35b2H89vvsYfzC+O249iI+4lzHRT5Hve96ndqrx96fh/iFe38e4hfu
/XmIX7j350H786D9edD+PGh/HrQ/D9qfB+3Pg/bnQfvzoP15iF+49+dB+/Og
/XnQ/jxofz7nLY5zHRf5HPW+63Vqrx7xC+O3nzeF8dvPn8P47d9ZwviF8Qvj
t+ezhvEL4xfGL4xfGL89/y2M336fPYxfGL+dd17ERx7qvMVxruMin6Ped71O
7dVjn79j/MJ9/o7xC/f5O8Yv3OfvqPN31Pk76vwddf6OOn9Hnb+jzt9R5+8Y
v3Cfv6PO31Hn76jzd9T5e64rOA913uI413GRz1Hvu16n9uoRvzB++/lzGL/9
e0sYvzB+Yfz2PNYwfmH8wviF8Qvjt+e/hfHb77OH8Qvjt+tCF/FRJ3JdwXmo
8xbHuY6LfI563/U6tVePHV9N8Qt3fDXFL9zx1aT4alJ8NcUv3PHVpPhqUnw1
Kb6aFF9N8Qt3fDUpvpoUX02KrybFV+e6n+tEris4D3Xe4jjXcZHPUe+7Xqf2
6hG/MH7795YwfmH8wvjt+axh/ML4hfEL4xfGb89/C+O332cP4xfGb9dtL+Kj
juu6n+tEris4D3Xe4jjXcZHPUe+7Xqf26rHj5zl+4Y6fZ8XPs+LnOX7hjp9n
xc+z4udZ8fOs+HmOX7jj51nx86z4eVb8PCt+PtflXcd13c91ItcVnIc6b3Gc
67jI56j3Xa9Te/WIXxi/MH5h/PZ81jB+YfzC+IXxC+O357+F8dvvsYfxC+O3
+yoX8dFncV3edVzX/Vwncl3BeajzFse5jot8jnrf9Tq1V4+dHy3KjxblR0v8
wp0fLcqPFuVHi/KjRfnREr9w50dL/MKdHy3KjxblR+e+mfssrsu7juu6n+tE
ris4D3Xe4jjXcZHPUe+7Xqf26hG/MH57PmsYvzB+YfzC+IXx2/Pfwvjt99nD
+IXx233Pi/jog7pv5j6L6/Ku47ru5zqR6wrOQ523OM51XORz1Puu16m9esRv
z2cN4xfGL4xfGL8wfnv+Wxi//T57GL8wfruPfREffW33Qd03c5/FdXnXcV33
c53IdQXnoc5bHOc6LvI56n3X69RePeIXxi+MXxi/MH5h/Pb8tzB++332MH5h
/Pa9hIv4uKfgvrb7oF3fWFXfOOrw/flB59h9ff+oE7mu4DzUeYvjXMdFPke9
73qd2qvHrm+sqm+sqm+sqm+sqm+s8Qvjt99nD3d9Y1V9Y1V943zvxPcU3NfG
r/tk7qu4Du+6ret8rgu5juC803mK41rHQT43vc96Xdoj7BG/MH5h/ML47flv
Yfz2++xh/ML47XtDF/Fxj8j3TnxPAb9dd7136pP154dTHb6/P57qfK4LuY7g
vNN5iuNax0E+N73Pel3aI+wRvzB+Yfz2/Lcwfvt99jB+YfzC+G0+7oX5HpHv
neDXfWz3Pd0nc1/FdXjXbV3nc13IdQTnnc5THNc6DvK56X3W69IeYY/4hfHb
89/C+O332cP4hfHb9/ou4uOen++F+R4Rfrsvcu/Ux3bf030y91Vch3fd1nU+
14VcR3De6TzFca3jIJ+b3me9Lu0R9ojfnv8Wxm+/zx7GL4xfGL/Nx71N3/Pz
vTD8dp/r3uleQn9+OPU93SdzX8V1eNdtXedzXch1BOedzlMc1zoO8rnpfdbr
0h5hj/iF8dvvs4fxC+MXxm/zcQ/X9zZ9z6/rz5vqz5vqz8e9BPex3fd0n8x9
FdfhXbd1nc91IdcRnHc6T3Fc6zjI56b3Wa9Le+z5HyN++332cNefN9WfN9Wf
z/eqfQ/X9zbxC/temO8R4Rf2PQX3tfHbz5tOfZV+/nyq2/bvLae6EOy6gvNQ
5y2Ocx0X+Rz1vut1aq8e8QvjF8YvjN/m456871X7Hm73F3b1F3b1F457Q75n
4nsJ7mO77+k+mfsqrsO7bus6n+tCriM473Se4rjWcZDPTe+zXpf22O9zjN1f
2NVf2NVfOP/dg+/J+141fn1P0/f6fA/M94Z8z8T3EtzHdt/TfTL3VVyHd93W
dT7XhVxHcN7pPMVxreMgn5veZ70u7RH2iN/+u5WL+Pg7Fv/dg+/J49f3bn1P
0/f6fA/M94Z8z8T3EtzHdt/TfTL3VVyHd93WdT7XhVxHcN7pPMVxreMgn5ve
Z70u7RH2iN/H/V2S/47Ff/eAX9j3qn0PF7+w7/n5Xhh++3nHvRPfU3Bf231Q
983cZ3Fd3nVc1/1cJ3JdwXmo8xbHuY6LfI563/U6tVeP/wOqhcgn
      "]], {}},
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{Automatic, Automatic},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{
    "GridLinesInFront" -> True, "ScalingFunctions" -> None, 
     "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}},
   Ticks->{Automatic, Automatic}]], "Output",
  CellChangeTimes->{{3.897560667557129*^9, 3.897560676455546*^9}},
  ExpressionUUID->"523d19f0-3b49-4ab6-8884-d65c61b15260"],
 "\n"
}], "Subsection",
 CellChangeTimes->{{3.8941025449408207`*^9, 3.894102559079155*^9}, {
  3.894103530203926*^9, 3.894103563467602*^9}, {3.894103815414472*^9, 
  3.894103965637241*^9}, {3.8943441488686666`*^9, 3.894344151927012*^9}, {
  3.8944413549951143`*^9, 3.894441387483404*^9}, {3.894441744010173*^9, 
  3.8944418324445667`*^9}, {3.894441958710456*^9, 3.894441966550427*^9}, {
  3.8944420103700733`*^9, 3.894442056387733*^9}, {3.897560540327875*^9, 
  3.897560599221826*^9}, {3.897560688937193*^9, 
  3.897560744975504*^9}},ExpressionUUID->"accba59d-9739-43e6-bbdf-\
c6e851cb1d9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"z", ",", "\[Alpha]", ",", "\[Tau]\[Tau]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.839995372612607*^9, 3.839995413125361*^9}, {
  3.839995458937697*^9, 3.839995459490139*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"ca91c7dd-a40c-4e31-a740-833480d496b0"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", 
   RowBox[{"EllipticTheta", "[", 
    RowBox[{"1", ",", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{"z", "+", "\[Alpha]"}], ")"}]}], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Tau]\[Tau]"}]]}], "]"}], 
   " ", 
   RowBox[{"EllipticThetaPrime", "[", 
    RowBox[{"1", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Tau]\[Tau]"}]]}], 
    "]"}]}], 
  RowBox[{
   RowBox[{"EllipticTheta", "[", 
    RowBox[{"1", ",", 
     RowBox[{"\[Pi]", " ", "z"}], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Tau]\[Tau]"}]]}], "]"}], 
   " ", 
   RowBox[{"EllipticTheta", "[", 
    RowBox[{"1", ",", 
     RowBox[{"\[Pi]", " ", "\[Alpha]"}], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Tau]\[Tau]"}]]}], 
    "]"}]}]]], "Output",
 CellChangeTimes->{{3.8399953665620604`*^9, 3.8399954140376463`*^9}, 
   3.839995460126328*^9, 3.840016208742558*^9, 3.840031441158516*^9, 
   3.841908603722426*^9, 3.842343833359708*^9, 3.854809542577928*^9, 
   3.884683121948247*^9, 3.884693013681031*^9, 3.8873772141470957`*^9, 
   3.889154643634354*^9, 3.892874454517454*^9, 3.893933700343068*^9, 
   3.897462085994684*^9, 3.8976319059378138`*^9, 3.9060299923729277`*^9, 
   3.90604219098838*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"592b7bfe-03c3-417f-b9c7-3c253011ff12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"coefList\[Alpha]", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"F", "[", 
          RowBox[{"z", ",", "\[Alpha]", ",", "\[Tau]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "0", ",", "6"}], "}"}]}], "]"}], "-", 
       FractionBox["1", "\[Alpha]"]}], "//", "Normal"}], ",", 
     RowBox[{"{", "\[Alpha]", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.773390695603199*^9, 3.773390814231336*^9}, {
   3.7734658846328893`*^9, 3.773465885631502*^9}, {3.7739841649179564`*^9, 
   3.773984167305295*^9}, 3.890813935289703*^9},
 CellLabel->
  "In[377]:=",ExpressionUUID->"d275f46f-fb1f-4b49-9969-43977d975b19"],

Cell[BoxData[
 TemplateBox[{
  "CoefficientList", "poly", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \\\"\[Alpha]\
\\\"]}], \\\"+\\\", FractionBox[RowBox[{\\\"\[Pi]\\\", \\\" \\\", \
RowBox[{\\\"EllipticTheta\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"\[Pi]\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"z\\\", \\\"+\
\\\", \\\"\[Alpha]\\\"}], \\\")\\\"}]}], \\\",\\\", SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \
\\\" \\\", \\\"\[Tau]\\\"}]]}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"EllipticThetaPrime\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"\
\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \\\"\[Tau]\\\"}]]}], \
\\\"]\\\"}]}], RowBox[{RowBox[{\\\"EllipticTheta\\\", \\\"[\\\", \
RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \\\"z\\\"}], \
\\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \
\\\"\[Tau]\\\"}]]}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"EllipticTheta\\\", \
\\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \\\
\"\[Alpha]\\\"}], \\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\
\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \
\\\"\[Tau]\\\"}]]}], \\\"]\\\"}]}]]}]\\) is not a polynomial.\"", 2, 377, 58, 
   33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906029678172573*^9, 3.906042191012994*^9},
 CellLabel->
  "During evaluation of \
In[377]:=",ExpressionUUID->"78b21913-0975-40a1-9062-9072c4ff624d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g0", "[", 
   RowBox[{"z_", ",", "\[Tau]_"}], "]"}], ":=", 
  "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g1", "[", 
    RowBox[{"z_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"coefList\[Alpha]", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g2", "[", 
    RowBox[{"z_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"coefList\[Alpha]", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g3", "[", 
    RowBox[{"z_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"coefList\[Alpha]", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g4", "[", 
    RowBox[{"z_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"coefList\[Alpha]", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7739841748767166`*^9, 3.7739842087543626`*^9}, {
   3.7739845429764924`*^9, 3.7739845571275177`*^9}, {3.839504163758627*^9, 
   3.839504185034381*^9}, {3.839995344180578*^9, 3.839995345834429*^9}, {
   3.8846831262494497`*^9, 3.884683126893476*^9}, 3.887701588056466*^9},
 CellLabel->
  "In[378]:=",ExpressionUUID->"6de61124-9be8-4592-92b3-135521a437c2"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \\\"\[Alpha]\\\"]}], \
\\\"+\\\", FractionBox[RowBox[{\\\"\[Pi]\\\", \\\" \\\", \
RowBox[{\\\"EllipticTheta\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"\[Pi]\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"z\\\", \\\"+\
\\\", \\\"\[Alpha]\\\"}], \\\")\\\"}]}], \\\",\\\", SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \
\\\" \\\", \\\"\[Tau]\\\"}]]}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"EllipticThetaPrime\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"\
\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \\\"\[Tau]\\\"}]]}], \
\\\"]\\\"}]}], RowBox[{RowBox[{\\\"EllipticTheta\\\", \\\"[\\\", \
RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \\\"z\\\"}], \
\\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \
\\\"\[Tau]\\\"}]]}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"EllipticTheta\\\", \
\\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \\\
\"\[Alpha]\\\"}], \\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\
\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \
\\\"\[Tau]\\\"}]]}], \\\"]\\\"}]}]]}], \\\"}\\\"}]\\) does not exist.\"", 2, 
   380, 59, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906029675192453*^9, 3.9060421910322647`*^9},
 CellLabel->
  "During evaluation of \
In[378]:=",ExpressionUUID->"0df88eb1-574e-4349-8b7a-b8244a17b1d0"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \\\"\[Alpha]\\\"]}], \
\\\"+\\\", FractionBox[RowBox[{\\\"\[Pi]\\\", \\\" \\\", \
RowBox[{\\\"EllipticTheta\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"\[Pi]\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"z\\\", \\\"+\
\\\", \\\"\[Alpha]\\\"}], \\\")\\\"}]}], \\\",\\\", SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \
\\\" \\\", \\\"\[Tau]\\\"}]]}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"EllipticThetaPrime\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"\
\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \\\"\[Tau]\\\"}]]}], \
\\\"]\\\"}]}], RowBox[{RowBox[{\\\"EllipticTheta\\\", \\\"[\\\", \
RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \\\"z\\\"}], \
\\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \
\\\"\[Tau]\\\"}]]}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"EllipticTheta\\\", \
\\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \\\
\"\[Alpha]\\\"}], \\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\
\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \
\\\"\[Tau]\\\"}]]}], \\\"]\\\"}]}]]}], \\\"}\\\"}]\\) does not exist.\"", 2, 
   381, 60, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906029675192453*^9, 3.906042191038548*^9},
 CellLabel->
  "During evaluation of \
In[378]:=",ExpressionUUID->"deff902b-e251-4677-ab58-ff14a5363599"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \\\"\[Alpha]\\\"]}], \
\\\"+\\\", FractionBox[RowBox[{\\\"\[Pi]\\\", \\\" \\\", \
RowBox[{\\\"EllipticTheta\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"\[Pi]\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"z\\\", \\\"+\
\\\", \\\"\[Alpha]\\\"}], \\\")\\\"}]}], \\\",\\\", SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \
\\\" \\\", \\\"\[Tau]\\\"}]]}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"EllipticThetaPrime\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"\
\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \\\"\[Tau]\\\"}]]}], \
\\\"]\\\"}]}], RowBox[{RowBox[{\\\"EllipticTheta\\\", \\\"[\\\", \
RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \\\"z\\\"}], \
\\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \
\\\"\[Tau]\\\"}]]}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"EllipticTheta\\\", \
\\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \\\
\"\[Alpha]\\\"}], \\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\
\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \
\\\"\[Tau]\\\"}]]}], \\\"]\\\"}]}]]}], \\\"}\\\"}]\\) does not exist.\"", 2, 
   382, 61, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906029675192453*^9, 3.906042191043557*^9},
 CellLabel->
  "During evaluation of \
In[378]:=",ExpressionUUID->"0f8c80a9-3c1c-4c94-ae4c-02c3a82b9c24"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalGamma]1sum", "[", 
   RowBox[{"z_", ",", "\[Tau]_", ",", "accuracy_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "z"}]]}], "]"}], "-", 
   RowBox[{"\[Pi]", " ", "I", " ", "z"}], "+", 
   RowBox[{"4", "\[Pi]", " ", 
    RowBox[{"NSum", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", "\[Pi]", " ", "k"}]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Pi]", " ", "k", " ", "z"}], "]"}]}], ")"}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
        "2", " ", "\[Pi]", " ", "I", " ", "\[Tau]", " ", "k", " ", "l"}]]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}]}]}]], "Input",\

 CellLabel->
  "In[383]:=",ExpressionUUID->"9386c3a7-c9cf-476e-ab46-b2be627a435f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g1opt", "[", 
   RowBox[{"z_", ",", "t_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"g1", "[", 
    RowBox[{"z", ",", "t"}], "]"}], "/.", 
   RowBox[{
    RowBox[{
     SuperscriptBox["EllipticThetaPrime", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"1", ",", "0", ",", "any_"}], "]"}], "\[RuleDelayed]", 
    "0"}]}]}]], "Input",
 CellChangeTimes->{{3.888054655157249*^9, 3.888054677412512*^9}},
 CellLabel->
  "In[384]:=",ExpressionUUID->"d2d45ba0-8406-480e-9f86-463de937956c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "\[Alpha]"]}], "+", 
  FractionBox[
   RowBox[{"\[Pi]", " ", 
    RowBox[{"EllipticTheta", "[", 
     RowBox[{"1", ",", 
      RowBox[{"\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"z", "+", "\[Alpha]"}], ")"}]}], ",", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "t"}]]}], "]"}], " ", 
    RowBox[{"EllipticThetaPrime", "[", 
     RowBox[{"1", ",", "0", ",", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "t"}]]}], "]"}]}], 
   RowBox[{
    RowBox[{"EllipticTheta", "[", 
     RowBox[{"1", ",", 
      RowBox[{"\[Pi]", " ", "z"}], ",", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "t"}]]}], "]"}], " ", 
    RowBox[{"EllipticTheta", "[", 
     RowBox[{"1", ",", 
      RowBox[{"\[Pi]", " ", "\[Alpha]"}], ",", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "t"}]]}], 
     "]"}]}]]}]], "Output",
 CellChangeTimes->{3.8891546906489*^9, 3.8928746443189917`*^9, 
  3.893933700406345*^9, 3.897462086055744*^9, 3.8976319060157022`*^9, 
  3.906029682738743*^9, 3.906042191062682*^9},
 CellLabel->
  "Out[384]=",ExpressionUUID->"a45b92e0-1bd7-46cc-b741-c027ac34474a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g2opt", "[", 
    RowBox[{"z_", ",", "t_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"g2", "[", 
     RowBox[{"z", ",", "t"}], "]"}], "/.", 
    RowBox[{
     RowBox[{
      SuperscriptBox["EllipticThetaPrime", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"1", ",", "0", ",", "any_"}], "]"}], "\[RuleDelayed]", 
     "0"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8880548969477158`*^9, 3.888054900151162*^9}},
 CellLabel->
  "In[385]:=",ExpressionUUID->"912d8be2-9255-4a34-a6ae-053d25ed3181"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", FractionBox[\\\"1\\\", \\\"\[Alpha]\\\"]}], \
\\\"+\\\", FractionBox[RowBox[{\\\"\[Pi]\\\", \\\" \\\", \
RowBox[{\\\"EllipticTheta\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
RowBox[{\\\"\[Pi]\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"z\\\", \\\"+\
\\\", \\\"\[Alpha]\\\"}], \\\")\\\"}]}], \\\",\\\", SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \
\\\" \\\", \\\"t\\\"}]]}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"EllipticThetaPrime\\\", \\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\\\"\
\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \\\"t\\\"}]]}], \\\"]\
\\\"}]}], RowBox[{RowBox[{\\\"EllipticTheta\\\", \\\"[\\\", \
RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \\\"z\\\"}], \
\\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \
\\\"t\\\"}]]}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"EllipticTheta\\\", \
\\\"[\\\", RowBox[{\\\"1\\\", \\\",\\\", RowBox[{\\\"\[Pi]\\\", \\\" \\\", \\\
\"\[Alpha]\\\"}], \\\",\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{\
\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Pi]\\\", \\\" \\\", \\\"t\\\"}]]}], \
\\\"]\\\"}]}]]}], \\\"}\\\"}]\\) does not exist.\"", 2, 385, 62, 
   33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9060421910694838`*^9},
 CellLabel->
  "During evaluation of \
In[385]:=",ExpressionUUID->"01329c9a-f125-4ad8-8b25-06a79b2e1ba8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalGamma]1int", "[", 
    RowBox[{"z_", ",", "t_", ",", "accuracy_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"g1opt", "[", 
       RowBox[{
        RowBox[{"zz", "-", "0"}], ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"zz", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "accuracy"}]], ",", "z"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", " ", "accuracy"}]}], "]"}], "+", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[Pi]", " ", "I", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "accuracy"}]]}]]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.888054317588071*^9, 3.8880544286823463`*^9}, {
   3.8880545452537003`*^9, 3.888054647522287*^9}, 3.888054719757921*^9},
 CellLabel->
  "In[386]:=",ExpressionUUID->"73175c1c-7e74-448c-8260-3613229f5f46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "To characterize this branch cut, we would like to know the precise \
coordinates, from the points ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "1"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "0dc50e6e-c2cf-480d-a67b-3076243489ba"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "2"], TraditionalForm]],ExpressionUUID->
  "df2271da-1bda-47a2-9707-74cbfee964e3"],
 ", at which the branch cut is drawn."
}], "Section",
 CellChangeTimes->{{3.897560763456283*^9, 
  3.8975608327051764`*^9}},ExpressionUUID->"83573429-6e1e-42ff-b209-\
0ed8de6d7282"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c1", "=", 
       RowBox[{"3", "/", "5"}]}], ",", 
      RowBox[{"t2", "=", 
       RowBox[{"0.3", "+", 
        RowBox[{"0.3", "I"}]}]}], ",", 
      RowBox[{"\[Tau]", "=", "I"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ComplexPlot", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Theta]1", "[", 
          RowBox[{"u", ",", "\[Tau]"}], "]"}], 
         RowBox[{"\[Theta]1", "[", 
          RowBox[{
           RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
      ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", 
        RowBox[{
         RowBox[{"-", "0.5"}], "-", 
         RowBox[{"0.5", "\[Tau]"}]}], ",", 
        RowBox[{"1", "+", "\[Tau]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.897560663030458*^9, 3.89756067567365*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"708bddfd-c1be-435c-9410-a405aaf7d603"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx120vIp2MYx/E3SmNW3kRjYiHJFEqSDZlsprBxrLGaZqTJiiLlVBavhfTW
GDWJcs4/NmYWNK8cJ0mNRg7JKacMZkwjpdiN1PO5F996Vnff7f3tvp/r/l3X
c+6OO2+8/aSlpaWVk5eW/l+3XXzvRydO/PCu9fr3zli/uve7wVff9Pp1G7d/
PfjSX29eXSx/Ofi8+/4+dNmBzwZv2rDp3JXDhwavv2rnS89s+WjwsdtevmBt
8f7gp08/eMti+Y3Bb72ze//+xfODH7zpp3veXDy+GZ996pt71hb7Bt/69hW7
Vg6/M/jg/u8/WCx/OPjo7mevXt378eCVyy/Ztrb4dPATL+4656J/vhj8wml/
ffvMlq8G73vohqeW93w7+L2j+7auHP5+8O8XPvrYAxt/GnzXjrWjlx34efC/
Tx655vgdvwx++JOzXlks/zp43SnXrtu+9tvgXVfev3Pj9iODN9z96oefr/tj
8HOvfHP+6t5jgzf9uP6RLVuPD37tzCt+OXHiz81zXrvyi/nF/GJ+Mb+YX8wv
5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/kd+z35xfzOndN6
7cov5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+Y
X8zv2O/JL+Z37t7tOa3XrvxifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5
xfxifjG/mF/ML+YX84v5Hfs9+cX8zn1He+/2nNZrV34xv5hfzC/mF/OL+cX8
Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+R37PfnF/M7VRf2O9t7tOa3X
rvxifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5xfxifjG/mF/ML+Z37PPk
F/M7V+e2Lup3tPduz2m9duUX84v5xfxifjG/mF/ML+YX84v5xfxifjG/mF/M
L+YX84v5xfxifsd+T34xv3Pvlta5rYv6He2923Nar135xfxifjG/mF/ML+YX
84v5xfxifjG/mF/ML+YX84v5xfxifjG/Y78nv5jfuXdo3y2tc1sX9Tvae7fn
tF678ov5xfxifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5xfyO/Z78Yn7n
coW+Q/tuaZ3buqjf0d67Paf12pVfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8
Yn4xv5hfzO/Y78kv5ncuJ2qu0Hdo3y2tc1sX9Tvae7fntF678ov5xfxifjG/
mF/ML+YX84v5xfxifjG/mF/ML+YX8zv2e/KL+Z3L/ZoTNVfoO7Tvlta5rYv6
He2923Nar135xfxifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX8zv2e/KL+Z3L
cZv7NSdqrtB3aN8trXNbF/U72nu357Reu/KL+cX8Yn4xv5hfzC/mF/OL+cX8
Yn4xv5hfzO/Y78kv5ncul2+O29yvOVFzhb5D+25pndu6qN/R3rs9p/XalV/M
L+YX84v5xfxifjG/mF/ML+YX84v5xfyO/Z78Yn7n+izN5ZvjNvdrTtRcoe/Q
vlta57Yu6ne0927Pab125Rfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+x35PfjG/
c32z9lmayzfHbe7XnKi5Qt+hfbe0zm1d1O9o792e03rtyi/mF/OL+cX8Yn4x
v5hfzC/mF/OL+R37PfnF/M71Qds3a5+luXxz3OZ+zYmaK/Qd2ndL69zWRf2O
9t7tOa3XrvxifjG/mF/ML+YX84v5xfxifjG/Y78nv5jfub52+6Dtm7XP0ly+
OW5zv+ZEzRX6Du27pXVu66J+R3vv9pzWa1d+Mb+YX8wv5hfzi/nF/GJ+Mb9j
vye/mN+5OYX2tdsHbd+sfZbm8s1xm/s1J2qu0Hdo3y2tc1sX9Tvae7fntF67
8ov5xfxifjG/mF/ML+YX8zv2e/KL+Z2bO+mcQvva7YO2b9Y+S3P55rjN/ZoT
NVfoO7Tvlta5rYv6He2923Nar135xfxifjG/mF/ML+YX8zv2e/KL+Z2bI+rc
SecU2tduH7R9s/ZZmss3x23u15youULfoX23tM5tXdTvaO/dntN67cov5hfz
i/nF/GJ+Mb9jvye/mN+5ubDOEXXupHMK7Wu3D9q+WfsszeWb4zb3a07UXKHv
0L5bWue2Lup3tPduz2m9duUX84v5xfxifjG/Y78nv5jfuTm/zoV1jqhzJ51T
aF+7fdD2zdpnaS7fHLe5X3Oi5gp9h/bd0jq3dVG/o713e07rtSu/mF/ML+YX
8zv2e/KL+Z2b2+ycX+fCOkfUuZPOKbSv3T5o+2btszSXb47b3K85UXOFvkP7
bmmd27qo39Heuz2n9dqVX8wv5hfzO/Z78ov5nZvD7dxm5/w6F9Y5os6ddE6h
fe32Qds3a5+luXxz3OZ+zYmaK/Qd2ndL69zWRf2O9t7tOa3XrvxifjG/Y78n
v5jfubnqzuF2brNzfp0L6xxR5046p9C+dvug7Zu1z9Jcvjluc7/mRM0V+g7t
u6V1buuifkd77/ac1mtXfjG/Y78nv5jfuTn5zlV3Drdzm53z61xY54g6d9I5
hfa12wdt36x9lubyzXGb+zUnaq7Qd2jfLa1zWxf1O9p7t+e0XrvyO/Z78ov5
nfvvoXPynavuHG7nNjvn17mwzhF17qRzCu1rtw/avln7LM3lm+M292tO1Fyh
79C+W1rnti7qd7T3bs9pvXblF/M79x9L/3vonHznqjuH27nNzvl1LqxzRJ07
6ZxC+9rtg7Zv1j5Lc/nmuM39mhM1V+g7tO+W1rmti/od7b3bc1qvXcd87Mx/
Sf2Ppf89dE6+c9Wdw+3cZuf8OhfWOaLOnXROoX3t9kHbN2ufpbl8c9zmfs2J
miv0Hdp3S+vc1kX9jvbe7Tmt167/AfC0/Cw=
    "], {{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJykvVePbdeZrtewb3zpv+B/4TvDl4bvjmHAwAEMn4bbBweG+0jqlropHUpN
SowiuTc3d86hctWqlXPOOeec85pr5rhW0Z5jzDlXqKq9SdHAK0ESCPHl88za
VbXm+L7x3/39f/53/9d/9Xd/93f/9N+I//bv/sO//I+/+c1/+Oh/+W/F//K/
/uM//af/+I//8H/+T//4z//wH//hN//93//X4v94V/4X+M98ecKXp1xJSXEG
UpixYvJi5mxuzojJwmTmdHoBklpQyQWVWFDxBRlbkNEFEUGIMEKEEDyI4H4E
8yGoB0HdyNKJIHZkYUXmJmRmQKZaZHKJjM4Xg+N57+2s/WLaeDipfDvOfzpM
/qbn+9+a7LP/mbv4f3jTJ7zzLu97JoQOhOi5kNAKKZOQsQtZt5DzCfmgUIgI
xZhQSgillFDOCOWcUM4L5YJQLgmVslCtCtWaUKsLtaZQawn1tlDvwHSFek+o
92EGMEOQ2kgKXx2DVMRMIBkAh78GpwjhFCCc/AfhJBakzAcBfCQ4AQQT+Xgh
HBeCOBDEhizMyNyIzHTIRI2MLxbDk0X/YN55NWs+ntbujoufD9P/2g/9ffvx
/zDgSxMxnJjiFKQAworJQ185ECY7E8uApMVKczo1p5NzKjGn4iBkbC76IiML
IrQgggs8sMD9C8y7wDwL1LVYOhZL2xyxzBfG+Vw/n2nm04vZ5GQ2OpgOX076
j0fdu4P2F93mH+qN/zvd/ff6+X/6Av/yY/rNV6z6Pmd5ybkOed8FH9LyUZMQ
twtJl5D2CZmAkAsLuaiQTwiFlFBIC8WsUMwJxYJQKgrlslCpCJWaUK0L1YZQ
hcpqbaHWEWpdmJ5Q68MMYIZCVYwoC6YCfZVhtnD2+VyDI/HZgbPhs4UTBnxk
OD4Ix71AnYulfYFY5wvTfG6Yz7TzqWo2OZuND6fD15P+03Hvh2Hn617rT83G
rwut/8M9+d/v88WxGNhnwhVg8mKfKZtTAsrApEHo1IxOzujEjBIj+gJ95mRk
TobnRGhOBOe4f4775ph3jrlnqHOG2mdL6wwxzxDjdKGbztWT2cV4ejKavBuO
X/aHj7uD71uDr6r9f8sOfxeY/GfN4qMX2Jf3iQc/UAdPGfUb1nzCOVWcV8cH
zHzYzsdcfMLLJwNCOixkokI2LmSTQi4t5DNCPicUCkKxKJTKQqkilKtCpS5U
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
/PHCvi/4wZH0CdKerN28R1aisf8lVt/3VbuFzy+A87c+zDd9yZWu9alKsti9
PsqHQr7KLZV+cR+HIsu5Kwt+JgB/34S+lA95ZF/NfV/Kx7C3+rrxCfx7fW2V
1W+HI/Op/gSfn/Mw/5zvXHu+Np9jKx9ry32qN/rAj+z8lff1Ydzg4yP5c6TN
Z4DgU5SdAtc/Zrnmq7bvq77jC3xqupXlVz55ln3JrzZ+lqy9V5Ob9yk3fdX3
fdX2ff2tfHbg7PGp/Fw+ysPMSbL2fFX3+8CPwa/3UT4w98DAT2Vv67OTWz7m
/YCvnU9HPcorAOBLeVsBfMG3TvD1084XF3z5K70Llt4Lw9fE8P3+zVf/+y8u
d99pKi/ObjzM1X0+t8Kp3ALn9of5A3CuPc8yHFhp46u636ci99lWgu+epJdQ
7/N1ex8pN3zZd/o4Nr6UNzLAV0PxBd79Kb5asizZFzy3IL2g3/iKb30BWduD
NB9QtvG186Jz72H+/w3H9QE4t/G5xVdNqVTd8QXfsG8rgZe5TODWPvIrRdql
RHrVeEuZm5WqO8o2vuCLPNlXQ/HVlHzRvpYsC/iCh1tC8omXrS/pyJl0/Ayc
Rts/ogYOre0eY9v3lVR8ycpq3O7DHN34quz7UuD8JB8JjvNWWe/hs/8wS5W4
WHXHV2XHFzwjIfmS+8CX8tJRCuk1/S19lNfE4BX2Thn57TZ4eUrZpSgvwZXX
4ju+lLfnHuUIhHTWCPiCZ8aCyqmkMDgECE4DSscC92Rtj+nunwjdV5ba8ZVU
jlRJJ+JkZRs+FZnPNTi7fG7AYW6F4/glcGAlcABMrrTpE1aOHsE+bACecvGX
tr5+so99JztHETbnE0A2lexSpbp0akg6QQR9NRVfsizar8gKwvOZ0lnNXVm7
vraypEBZ8lF5eBJ74wtk31di40uBE63s+CrvP8z7cD7wMDtu8NmDU34/nBq1
4wt+iW36lHd8yYfHtpWkc2UeGOnwkgscZJJPNEmnm7ZlNtn02VV2w5esDJzQ
k07rwZNF8AifTzmEGZCPPUNf8gl2cJpdOtYujSTACQUwrSCPmezMnqT3laV3
fKUa8mFg6Sz3NTgyn304wX04vp8BZ0/Wls8tcGwKHLsMRz5qDipVlEplxVdp
0wdWgmc1fcWtL6UPc72PcowQHHGU+8Bzj5szdfCI3bZSbbeSfDDYBc/BupvS
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
qxvcw2V2MyY3bXDTejetc9NaN6V2U5fw+qcLD3nuJU+95ImPOPYRR35wOdS7
AP42iL8J4a/C2MsI9jKKvoyjLxPLl6nly8zyZRZ5lUdeFRevy4vX1fmb+vxt
c/auPTvoTo8G0+PR9HQyOZ9NLhYTDTLWL8cmdGzFxg585CZGPmoUpEcRZpxg
x2lunOPHRWFcWY3rqz6Tn7AlhKvifJ3mGzzfFLj2mmldUc0rovEjVvsRqV7N
y1eT0tWocDXIr7vZdTuzbqZW9eSqmliV40IxKuQiIhxBghML8BE/F/JxAQCH
E+F4IB+nB8CxQz4bOEbIR4KjEfnswDmDfCQ4hyIfCU4Qfx3CAJ8o9jImwkFf
Jpcv0wDOSxFOYfGqtHhdmb+piXCETFBIBfiEn4/5+IiXC3k4v4fzulmPm3W7
WKeLdbhYu4uxuRiLkzE7GZOTNjppvZPWOWmti9a4KLWLUrmoCxd57ibP3OSJ
hzz2EEde4sBLvPPhb/346wD+KoC9DGIvwtjzCPo8hj6PL58nl8/TyPPs4nlu
8aI4f1Gev6zOXtVnr5vTN+3p297k3WByOJocT8Yns/H5YqRGRrrl0IgOLfjQ
Tgxc5MBLDQL0IMwMYuwgyQ0y/CAvDEqrNp0cMJkpm0PYIs6VaK7CcRWBra3o
2pqsXuGVK6z847L447xwNc1fjXJXg+y6l153UutmclVPrKqxVTm6KkaEfFjI
hoR0kE8G+Jifj/i4kJcLeDifm5PguCAfCY7VCfiYnIwIxwD5bOBcAjiUBOfU
DeF4iEMJjg9/41fghLDnYfR5FMJJLJ+nkOcZBMApLF6U5i8r85e12asGuMs4
5ecTPj7m5SMeLuTmAi7O62LdTtblZJ0O1u5gbQ7G6mAsDsbkYIwO2uCg9fDm
O42DUoNb8KgLJ3XuJM+c5ImLPHYRR27iwE288xBvPfhrL/7Kh73wY88D2NMg
+jSMPo0sn8aWTxLIkxTyNLN4mps/LcyflWbPKrPn9emL5uRle/KqN34zGL8d
jw6mo+P58GwxUCED7bJvwPpmvG8jek6y56F6froXYntRrpfgu2mhm1vVqXCH
jg3pxJRJIWwGZ3M0m+fYAs8UBaq0IotrvHiFFq6Q3I/z7NU0ezXOXA1S615y
3UmsW/F1PbaqRlflyKoYArdyZwNC2s8nfXzcy0c94GEOuDmfi/MocByAjwzH
DPjIcHSQjwRHpcA5BXDIIxdxqMB5A+DgLyGcZyKcEIQTXT6JI0+SyNP04ml2
8TQ/f1qEcGrTF6Ivv5DygUuNYx4+4uZCLi7g5HwO1m1nnXbWYWftNtZqYyw2
xmxjTDbGYKP1NlpnozU2Wm2jLu2Uyk6d26kzO3nqII8d5JGTOHAS71zEWxf+
2o2/8uAvvNhzH/bUjz4OoI+Dy0fh5aMo8iiOPEouHqXnj7Lzx/nZ4+L0SWX6
pAZu+H3WHr/ojV4ORq/HwzfTweG8f7roXyA9NdrVYV0T3rUSHQfVcdMdH9MO
su0w147xraRQJr0NKtAFZzsiUyaGMAmcSVJsimXSHJ3lyeyKyK2w7BrNXCHp
H+epq2nqapy8GiSuevF1J7ZuRdeNyKoaXpVDq2JQyAeErB9cz5308nEPH3Xz
YQmOk/M4WJcEx87abIxVgWNU4GgBHxnOhQLnRITjIA5FOE4A540Ix42/9GDP
vdhTH/ZE5BNEH4eWjyLIoxjyKLF4lFo8yswf5UQ4s8fl6ZPq5GlDyHqFlEdI
uMFV1BEXH3JyAQfns3NuG+u0snYra7MyVitjtjImC2O0MHoLrbPQWiutsdKX
VkplpS6s1JmVPLWRxzbyyEYe2ol3duKtg3jtxF858Rcu7Jkbe+rBHnvRhz70
YWD5IIg8CCMPoov78fn91Px+ZvYgN31QnD4sTx7Vxo+boydtcFX0s+Hgxbj/
eto7mPeOF92zZecSbWuxtgFvmcmWjWo66aaHafrZRohviN9tCEeFcDVJT5fy
DanAlA4hdARnohQTY+g4RyV5MingqRWWXC+T60Xiah7/cRq7GsWuBtGrXnTd
iaxb4XUjtKoFV+XAquhf5X0ATtojJD183M1HXXzYyQUhHI+NddlYB4DDinAs
Ih8Ix2Ch9QoctQLn3EqJcE4UOAcQzhsHgPPShT+HcJ540UciHL8IZ6nAWdxP
zu+nZw+ysweF6cPS5GF1/Ej05RbSbiHh4mNOPuLgQ3YuYON8Ns5jZZ0W1m5m
rWbGYmbMZsZoZgxmRm+mtWZaY6bVZkplpi7M1LmZOrWQJxbyyEIeWol3VuKt
jXhtw1/Z8RcO/JkDe+rEHrvQh270vmf5g2/5QwC5F1rciyzuxeb3ErN76em9
7PReYfJDeXy/NrrfGD5sDx71Bo+H/aeT3stp9+28c7hony5bF2hTjTV0RMNI
1i1U3c7UXGzNy1UDfAo35XFLhbA1wWkP94jyzCgfQvtxOkjRQYYKs2SUI6I8
FhPQ2AqJrRfRq1nkahK+GoWvBuGrXmjdCa5bwXUjsK75V2Xfquhd5b1C1gPg
JF183MlHHXzYwQXtMhyXhXVYWJuZleCYFDg6GQ59qcA5g3COARzyQIRjJd7Y
CBHOSzv+HMJ54sIeudEHHvQH7/IHP3IviNwLL+5FIZzU7F5mei8/+aE0/qE6
ul8Xsi4h5RQSDj5m5yN2PmTjAlbOZ+E8ZtZpZu0m1mpkzEbGZGQMRkZvpHVG
WmOk1Ub60khdGKlzI3Vmok5M5LGJPDSRB2birZl4bSFeWfAXVvy5DXtqxx7b
sYcO9L4Lvedefu9B7vqQu4HFndD8TnR2Jz67k5reyUzu5Md3S6O71eH3jcG9
dv9+r/dg1H086Tyftl/Pm+8WjeNl4wytq/CahqgayIqZrtiYsoMtu7mST0hj
ugJurOLmFmHtkfYR6ZhRLoRy45SHor006WeJIIeHeDQkLEOrRWg9D62nwatJ
8GoUuBoErnqBq45/3fKtG7511bsqe1ZFzyrvBnDSTiHp4OMOPmrnwzYuaOX8
Vs5jYV1m1rEDxwj5iHC0kM+lkVYpcE4hnCMI552ZeAPhvBThWPGnNuyJHXvk
QB840R9cIpzlXS9y1w/hROZ3YrM7yemd9ORObnynOLpbGX5fFzIOIWUXEnY+
ZuMjVj5k4QIWzmfmPCbWaWTtRtZqYEx6xqhnDHpGp6e1elqjpy/1tEpPneup
MwN1YqCODeSRgTwwkm+NxBsj8cpEvDThz834Uwv22Io9tKH37eg9x/Kuc/md
C/nWs/jWt/gmOP8mPPsmNv0mMfkmPf4mN/qmOPy2Oviu0b/T7t3td++N2g8n
rafTxst5/c2idrisnmCVc7ysJko6qmSkixa2YOfyTj6GqjKYuohpa7i+hRt7
hHlEWmakDSHtOOUgKSdNuBncy2I+DvXziF9Y+Fcz/3rquxr7rkbeq4H3que9
anvXTc+67llX3auya1V0rfJOIesQ0g4haRfiNj5q5cNWPmjh/AAO5zKxDgjH
rMDRK3DUEM4FhHMK+Mhw3kE4rxU4zyzYEwv2yIo9sKE/2NHvHcs7LuQ7DwLg
BObfhGbfRKffxCffpMbfZEffFIbfVgbfib5sQsomJKxCzMJHLHzIzAdMnM/I
eYys08Da9axVx5h0jEHL6LWMVktrtLRaS6u09IWWOtNRpzrqWEce6cgDHflO
T7zRE6/1xEsD/tyIPzXiT0zYIzP2wIL+YEXv2pbf2ZffOJC/uhZfe+Zf+Wdf
BadfRiZfxsdfpkZfZodfFQdfVfpfN7p/bXe+7bfvjpr3x43H09rzefUVUnm3
LB1hxVO8oCLzGiqnZ3ImNmvlgsvj+PI0g54XMVUNU7dwbQ/XjwjDjDAhpBkn
LSRppXAHgzlZ1MUt3fzCLcw9q6lnNXGvx+6rofuq77rquq7arnXTta4711Xn
quxYFR2rvH2VtQtpm5C0CnErH7XwYTMfNHF+kwiHcxlYh5616VmzjjFCODoF
ziWEcw7hnOioI3BXuwiHfCvDIV4Y8GcSHBP2wIz+YEG/ty7v2JbfinCcAM7X
vvlXgdlX4emXscmXydGXmeFX+cFX5f7XtVXGKqQsQsIsxMx8xMSHjHzAyPkM
nEfPOXWsXcdatYxJwxg0jE7NaNS0Wk1fqukLNX2uoU411ImGOtKQhxrynYZ8
qyVea4mXWuKFDn+mw5/osUcG7IER+8GIfm9afmdefmNFvrYhXzoWX7jmn3tn
n/unn4Umn0VHnyWHn2UGnxX6n5e7X9Q7X7bbX/Wb3w7r34+rD6eVJ/PSC6T4
Zlk4wHLHRPaMzFzSaS2TEjsu3oSQd4nlYRZ8anxax87bmKqPq8e4ZkboloQe
JwwkYaIwC43a2KWdQxz83CHMHMLUuRo71iPH1cBx1bdfdR1Xbce6aV/X7euq
fVW2rYq2Vd66ylqFtEVIWoS4mY+a+LCJDypwXHrWoWNtWtasZYwQjlZNayAc
lQhHTZ1BOMcQzgGAQ77REq8UOE/1+GM99tCA3Qdw0Dvm5beWJYBjX3zhnH/h
mX3um34WnHwWGX+WGH2WHnyW739e6n0u+jILKZOQMAkxIx8x8CEDH9BzPh3n
0XFOLWvXsFYNa1IzhktGq2I0KvpSRatU9LmKOrukTi+p40vq8JI8uCTfXpJv
1MQrNfFCTTzT4E81+GMt9lCH/aBDv9ejdwzLb43Lr03IF5bFZ7b5XxyzP7um
n3onnwbGn0RGn8QHn6T7n+S7n5Y7f663/tJuft6vfz2s3hmXf5gWH80Lz5Dc
SzT7Fk8fEqkTKnlBJ9Ssbf7Mu3gRRl4lkTe55UEZPaqjJ23stI+dj3HVDL9c
4mqc0BC4jkKN9NLEIGZ2YeHmVn5qFSa21ci2HlrXA+tVz3rVsV61rOuGdV23
rqvWddmyKlpWefMqaxbSJiFpEuJGPmrkwwY+KMLRAzguLevQsjYNa1YzxktG
dwngqCGcCxUtwTm5pI4gnHcQzms18VJNPN/A0WL3ddg9PXoXwvmrCfnSjHxm
XfzFPv+za/Znz/RT//iT0OiT2PCTVP+TbO/TYudT0ZdRSBmEhEGI6fmIng/p
+ICO82k5t4Zzali7mrVesiYVY1Ax2gtafU6rzumLc/r8nDq9oE4uqKML6vCC
fHdBvrkgX6uIlyriuYp4eok/vsQfqrH7auyeBr2rRb/VLf+qR740IJ8ZF5+a
559YZ//mmP7JPfmjb/TH0PDjaP/jZO/jXOePpfaf6s1/a9f/3K98OSx9My7c
nebuz7OPkfRzNPkKT7wjY0dU9JSJqDjH/JF//iSyeJZCXuaXryvLtw30oIMe
DrDjMXY6x86W+DmOqwhMTS21NKJnFgZ2buRmJn5iEsbm1ci8GpjXffNVz3TV
MV21zOuGeV0zryumdcm0KphWOROEYxSSBiFu4KMyHF6E49FwLg3rEB+aS9Z8
yRhVjO6C0VzQlzIc+gzCOVbgvBXhXAA4L1TEMxX+5BJ/dIk9UGM/iHA06Hfa
5Te65VcG5HPj4s8mCMc+/ZNr8kfv+I+B4ceRwceJ3seZ7h+L7T9WVxm9kNIL
CZ0Q0/ERLR/S8gEN51NzbjXnvGTtKtaqYk0XjOGc0Z0z6jNadUqfn9Jnp9TJ
KXV8Rh2eUQdn5Nsz8vUZ+eqMeHFOPDvHn5zjjy7wBxfYDyrs+0v0u0v0G/Xy
Kw3yuRb5s37xb4b5H82zj63TPzjGv/eMfu8ffBTpf5TofpRpf1Rs/r5W/0O7
+m+90mfDwlfj7HfT9L1F8uEy/hSLvSAib8jwAR08Zs3T712zHwLzB7HF4/Ti
aQF5Xlm+bC5fd9G3A/TdBDucY0dL7BjHzgj0gkQu6YWGmWvZmY6b6vmxnh8Z
hKFhNTCse4Z113DVNly1DOuGYV0zrCuGdcmwKhhWOcMuHEGBw/s0nEfNuS45
xyVrU7HmC8Z4AeBoIJwLCOcUwjlS4LxR4Dw/J56e448v8IcX2H0Rjgq9c4l+
q15+rVl+oUX+olt8IsIxzT62TP+LffIH9+j3vuFHof5Hse5H6c5Hhdbvq6u0
VkhqhbhGiGr4sJoPqXn/Je+95Nwqzqni7Bes9Zw1nTOGM0Z3yqhP6IsT+uyY
Pj2mjo+poxPq4IR6d0K+OSFfnZAvT4jnJ8TTU/zxKf7wFL9/ht07w+6co99e
LL9WLb+4RP6iXnyiWfxRN/+DYfaRafKvtvG/OIe/8w5+G+z9Ntb5bbr120L9
d7Xqv7RLH/fynw6zX4xTf50l7ixiPywjj7DQMyLwivK/ZbSTr63Tb92zO8HZ
9+Kv3JnFw+LicRV52lw+7y5fDtHXU/TNAn2HYgcYekwgp+TinJpf0LNLZqpm
JxpurOGHWmGgXfW165523dFetbVXTd26rltXdeuybl3SrQq6VU63ymiFlFZI
aIWYRohoAJyAmvddch4V5xK/wi9Y2zlrPmeNEI7mlFad0OcQzokI55g6hHDe
npCvt3CIJ6f4IwXO3XP0u3P0rxfLL1XIZ5fIp5rFn7TzP+hnvzdO/9Uy/hfH
6HeewW8Dvd9GOv+cbP023/htZZVWC0m1EFcL0UshfMkHVbxfxXsvOPcF5zzn
7Ges9Yw1nTKGE0Z3wqiPadURfXZInxxSR4fU4SH17pB8e0S+PiJfHpEvjohn
R8STI/zRMf7gGP/hGLt7gn13gv71dPnV2fLzc+TPF4s/qRb/RT3/V830d/rJ
P5vG/2Qb/sbV/7W/+6tI+1fJxq/ytV9Xy//ULnzUy/5pmPrLOP7lLPItEvoe
DTzAfU9Iz3P6fPwX/fhz++Qr7/Sv4dl3ifnd7PxeaXG/hjxsIY97y6ej5fPp
8sUCfYUu32DIAbE4Iucn1OyUnp4zkwt2rOJGl/zgUuirVz31qqtet9VXLfVV
U72ua9ZVzbqsWRc1q7xmldWsMupVSi0k1ELsUohc8iEVH1DxvgvOc8G5zjnH
OWs7Y82nrPGU0Z8wGgjn/AjAOYZwDg4pEc6bI/LVFg7xWIHz/Ql25wT95hT9
+nT5xRnyl3PkE9Xi48v5R5rZ73TT3xrH/2Qd/sY5+LW396tQ+1eJ5q+y9V+X
V2mVkFQJcZUQVQnhCz54wfvPee855z7jnGec/ZS1nrDmE9ZwzOiOGPURrTqk
zw7o43fU0Tvq4B317h355h356h354oB4fkA8PSAe/3+tu+dzY0menvu36JN0
I/RBEVqFFLra1Wqudnd2vOme7mlfXV2e3oDwjiBAgARB77333nuCIAl674qs
Iovewx2TBhtxT+YBaKqqezoUing+TczUvHzeg2Myf1npya70ZFZ60qvctiq3
tdplqb4x1dwYaq91dVfq+kt5w6Wk6Ty65Syy4yS85yh04CBkdP/V5NtXczuv
VrZCttfD3y5LDuaVxzO6synjpcNybbe5RzK8QznMQD7XfKLtPtUPnSWMn5um
zy0LF8mrlymbl2m7Vxn711mH1zmn17kXN/nXNwWu62L3VZn3ssJ3UcWc17Bn
tdxpHX9SD44b4FEDOmhE7xrxfqN/r9H/pvHfdpv8r5v8W83+zWb/ejNebcbL
zXixGQty5prQTBNyNsLJRuhogPYGMFoPhuvBYB3fT+V01XAd1VxrNddcxTZU
srVUThWRwwhySit8xRU+UU5epTcnKCe1yp1S5UqqdiXW3CTUXOtrrzV1V4qG
y7jGi+jms8j20/Cu47C+w9DhdyGOt69mdl8tbYds4oVGNN+AZhvQdAOaqocT
9XC8Ho7VgZE6MFQLBmr4PuFpUc13VnHtVVxrJddUwdZXsLXlTFUZU1HGlJf5
Sst8xWW+ojJvQZk3r8ybU+bJKvdklHvSyt0p5e7kCpe54sZYeRNfda2tulJW
X8pqL2LqziMazkJbTl51HL3oOXg+tPd0/M3TmddPlzeeba+EvF2IPpiRHU+q
z8bjL0cTb4aSPf1pvt4stu5Y1nai6DtVj5zqJs7iZ8+NSxeJ6xdJ25fWN1e2
d1dpR9cZZ9dZl9fZ19d5rqtC92Wx96LUd17OnFWyp1XcSTV/XAOOauFhHTyo
Q/v1eK/e/7be/6b+33bq/a8b/FsN/o1G/1ojXm3Ey414sRHfynE2wMl66KiH
9jowWgeGa8FgLd9P5XRVcx1UTnMl21DB1pUz1WVMJZHDlJX5SogcnyAnv8yb
W+bJLvdkUjm2cre1wmWpcJkqbwyV17qqa3X1lbzmUlJ3EdlwFtZ8GtJ2/LL7
8PnA/rOxt0+ndp4ubD7dwAv1eK4ezdSh6To0VQcnauF4LRyrBSM1YKgaDFTz
fVV8TxXfWcm1V3CtFVxTOdtQxtaWMlWlTEUJU1biKynxFZf4Cku8+SXe3BJv
dokns8STXuJJLXFbS91Jpa7E0puEsht92bWm/EpRcRlXeRFdfR5Wc/ai/uRZ
89GTjoPHfXuPRna/m9r6bnHt0dbi87cz4QeTkmO74nxYdzVgdPVavF02puIw
qukoputYuK3L7acq55l2/ly/cp6wcWHaubS8vUw+uEo5uUo9v0q/us64ucp2
Xea5Lwq958W+s1LmtIw9qeCOK/mjKnBYDQ+q4bsatF+D39biN7X+3dp/26n1
b9f5N+v8G/X+tXq8Uo+X6vFiPZ6vR7O3cuqgoxbaa+FoDRiuAYPVoL+ayOmq
5DsqubYKrrmcbSxj68rYaiqnvIQpDcjxFZR480q8OSXerBJPBpWTUuJOLnWZ
S13G0pv4smtt+bWy4kpWeRlTdRFRc/6y7vR50/GTtsPHPfvfD7155Nj+bm7j
0TpeqMVztWimFjlr0FQNnKiB49VwrBqOVIGhKjBQCfoq+Z4KvquCby/nWsu4
5lK2oZStLWGri5mKIqa0yFdS5Csq8hUU+fIKvTmF3qxCT0ahJ63QYytyW4vc
liKXqchlKLrRFV+ri6/kJVeS0suosvPQirNnVSeP646+az74pnPvq4GdLx2b
X8yvfLk198ObyZCDseiTQdlFr+amy+BpNzPFBy9rD0PbjiJ6j6NHTiQTp7KZ
U+XimWbtXLd1Ydi9MO5fJh5dWk6vki+uUq4u024uM10XOe7zPO9Zge+0iDkp
YY9LuaMy/rAcHFSAd5VwvwrtVeG3VXi32r9T/W+vq/3bNf7NGv96rX+1Fq/U
4qVaIme+Fs3WoulaQQ4icmqgvRqOVoPhKjBYBfqDcjqE1yBBThnXWMrWlbA1
xUxlMVNWxAhyiot8hUW+/EJvbqE3u9CbWehJL/SkFhI5SUWuxCJXQtGNvvha
U3ytKLmSll5Gl12ElZ+/qDz9oeb4UePht+37X/ftfjm29cXM2pdreL4az1Wj
mWrkrEaT1XCiCo5XwbFKOFIJhirAQAXoK+d7yvmuMr6jjGst5ZpLuIZitq6Y
rS5iKguZsgJfcb6vMN9XkO/Ly/fm5Huz8j0Z+Z60fE9Kvjs5323Od5nyXYb8
G13+tSr/WlZwFVt4GVl0EVJ89rT09LuK469qD/7a/Paz7tefjq5/Mrv06Zbz
uzdjLw4HIs66467aVe5mvS9v//vKd0+bDl90HYUMHkeMn0Q7TyTzp7KVM8XG
mfr1ue7tRfzBRcLxpens0nx5mXx9Ybs5T3edZXnOcryneb6TAua4kD0q5g5L
+INS8K4M7JfDvXL0tgK/qcC7lf6dSv92pX+r0r9R5V+v9q9W4+VqvFSNF4Jy
pqvRVDUKyKmCo5VguBIMVoD+Cr43KKetlGsp4RpL2PpitobKKS9gSvJ9Rffk
ZOd7RTm2fLc1323JdyXmuxLyb/T5N+r8a0XBVVzBZVThRVjx+fOS0+/Lj7+u
Pvyicf+zjt1PBzc/mVr5ZBXPV+LZSjRTiZyVaLISOSrheAUcq4Aj5WCoHAyU
g74yvqeU7yrlO0q4tmKuuZhrLGLrCtmaAqYynynLZ4rzfIW5vvxcX26uNzvH
m5njTc/xpOZ4UnLcSTluc47LmO2Kz77RZt+ocq5lOVexOZeRuRcheedPC06/
LTr+vPTw05q9P7a8/n3/2m+d87/fdHz1duDpUWfYRXPsTb3Cm7n3Ren+N/Xv
HnUcPOk/fD52FDJ5HD53ErV0Grt+Kt0+U7w5V+2fa48u9KcXhosL0+WF5frc
enOW6jpN95xkeY9zfMe5zFE+e1jAHRTx74r5/RKwVwrflqI3ZWi3DO+U+1+X
+7fL/Zvl/o0K/1qlf7USL1fixUq8UInngnKmKtHErZwKMFwOBstBfxnoLeO7
RTklXEsx11TE1heytYVsVQFTns+UUDkFub68XG9Ojjcrx5uR40nL8dhy3Mk5
bkuO25TtMmTf6LJv1NnX8pwrSc5lVO5FaN758/yz7wtPvig5+kvl/p8ad3/f
vfG78aXfreD5CjxbgaYrkLMCTZYjRzm0l8OxMjhSBobKwEAp6Cvle0r4rmK+
o5hvK+JaCrnGQra+gK3JZ6vymPJcpiTHV5jty8vy5WZ5s7O8mVne9ExPaqbH
mulOynSbM9zGDFd8xo0240aVfi1Lv4rNuIzMuAjJOH+aefZd9snneUd/KNr/
TfXOLztW/9kx/auNob/udfxw2hB6XRXjTXvzx+K9T+v2/9r+7uu+g0ejh08m
jp7PHocsnoSvnURtncbunkn3zuSH56qTc835hf7iPOHqLPH6NMl1muI+SfUc
Z3iPsnyH2cxhLnuQx70r4PcL+b0i8LYIvilGuyVopwS/LvVvl/q3Sv2bZf71
Mv9auX+lHC+V48UKImeuAs1QOVPlaKIcjgtyygU5cLgMDJaC/lLQW8J3l/Cd
xXy7IKeIayrkGgrY2ny2Oo+pyGVKc5miHF9+dkBOVpY3I4vIScn0JFM5pgyX
IcOly7hRZ1zL068l6VdRGZehGRfPM8++zzr9Mvf4TwXvflvx5l+bN/5leP6f
l/FcGZ4tQ9NlaKoMTZYhRxm0l8KxUjhSCoZKwEAJ6CsGPcV8VxHfUci3FXIt
BVxTPlefx9bmsdW5TEUOU5rNFGX58jN9ORnerHRvRro3Ld1jS/NY0zxJae7E
VLcx1RVvc2ltN6qUa1nKdWzKVaT1MtR68Szl/FHK6Repx3/MOPiXvN1f1Kz+
w9DEP210fn5Q88NlcagndfeXxW9+U7f3x/b9T/vefTF68M3E4fezR08Wj1+s
nYRsnoTvnEbtncYenEmPz+Vn56qLM+3lmeHq1HRzYnEdJ7uPbZ6jNO9hhu8g
kznIZt/lcPt5/F4+/7YAvCmAu4Vopwi9LsLbxf6tYv9msX+jxL9e4l8t9a+U
4qUyvFCG56mcmTLkpHImyuB4QA4cLgGDJaC/GPQW891FfGcR317ItVI5Dfls
HZHDVuYwZdlMcZavMNOXm+HNTvdmpnvT0z2paZ6UNE9ymtuc6jalugw2l852
o7bdyFOu41Kuoq2XYdaLF9bzxylnX9lOPkk//Nfsvf+vfPN/ds7+wxKeK8Ez
JWi6BE2VoMkS5CiB9hI4VgxHiuFQMRgoAn1FoKeQ7y7kOwv4tnyuJZ9ryuMa
ctm6HLY6m63MZsqymJJMX2G6Ly/Nl53qzbB502wem81jTfEkpbgTrW5jsis+
2aVNulFZbuTma4n5OirxKsx0+cJ08dh4/rXx9FPT8a8s+/8jY+O/NA/9YrP8
r+fKrf+a8frvy3d/0fj2l117vx3c/5P93V+mDr6cO/x26ej7teOnW8cvdk5C
904jDk6jjs9iT8+k56fKi1PN1Yn++jjh5jjRdZTkPrR6Dm3egzTfu3RmP5Pd
z+L2cvi3ueBNHtjNhzv5aKcAvS7A24V4q9C/WejfKPKvFftXi/3LJXipBC+U
4PkSPEvlOINyxgU5JUTOcDEYLAL9RaA3KKe9gG8Vvg/zuMZcri6Xrclhq7KZ
ciKHKcrw5af7ctK8manedJs31eZJSfEkp7jNVrfJ6jYku3RJLrXlRmG5jjNf
xyRehZsuX5kunhjPvzWefW46/p354B9tr/9rufPvFvBcMZ4pRtPFaKoYTRQj
RzG0F8HRIjhSBIcKwUAh6CsAvQV8dz7fmc+35/GtuVxzLteYw9VlszVZbFUm
U57BlKYzRWm+/FRfjs2bmeJNS/bakj3WJE9SksdscRvNbkOiS2dyqY03ioSb
OMN1jP46Qnf1SnP5TH3xSHn+pfzsz9KTX0rf/Wdd4a9P0zf/Q+X2f2re+W9d
b/5h4O3/Htv71eT+72fe/Xnh4POVw6/Wj77bPnq8e/xs7+TlwUno8WnE6WnM
2UncxYni8lh9day7PjK4Dk3uQ7PnIMn7zup7Z2P205i9dHYvk3ubxb/JBrs5
YDcX7uSi13loOx9v5ePNfP9GgX+9wL9W6F8p9C8X4cUivFBM5MxSOc5iNEnk
oPEiOEblDBeCwULQXyjIAaKcjjy+LS8gpz6brc1iq7PYikymLIMpTvcVpPpy
bb6sFG+61Zua7ElJ8iRTOSYqR29yaYwuZcKN1HAdG38dqbsK1V4+V188Vp5/
LT/7i+zkN9LDv1c4/v0cni3EM4XIWYimCtFEIXIUQnshHC2EIwVwqAAMFID+
fNCbD7rz+M5cvj2Xb83hmrO5xmyuPoutzWSrM9iKdKYsjSlOZQptvrwUX3ay
NyPJm2rxWBM9SYkes8ltMroNCW5dvEujdyl1NzLNTazqOkpxHSa9ehl79TTy
8vvQy6+fXn7xhTvyXy9H/p/11/9uZuc/Onf/zvnm/515+4v5vX9Z2v/N6rs/
rh/8Zevwi52jb94ePXp3/OTw5PnxScjpccTZcfT5UdzlkfzqSHV9qL05jHcd
JLjfJXreWbz7yb59K7NnY9+msm/TuTcZ/G4m2MkCO9nwdQ7azkFbuXgzF2/k
+dfz/Gt5/tV8/0qBf6kALxbi+UI8R+TgaSpnkshB44VwjMoZLoCDQTk9eXxX
Ht+Ry7fl8C05XFM215DF1VE5lelMeRpTksoU2Xz5Kb4cqzcz2Ztm8aaYPcmJ
HovJI8hJSHDrDS5tvEulc8m1N3Hqm2jldYTsKkRy9Sz68nHY5bfPL7/89vr7
38P6/4RnC/BMAXIWoKkCNFGAHAXIXgBH8+FIPhzKh4N5oD8P9OaC7ly+K4fv
yObbsvmWLK4pk2vI5Ooy2Jp0tjKNLU9lSm1MUQpTYPXlJvmyLd4MszfV5LUa
PRaDx6R3J+jceq1bq3aplC653CWV3sTG3kRG3YSFXb96fv3i+5vwrzyKT7is
XzLd/+109u/2N/7z7s5/ef32v2/t/eP2/j9v7/96590f3hx8snf4+bvDrw6P
vjs6+uH46PnpUcjZYcT5YfTFYdzVgfz6QHVzoHG907vfGTz7Ru9+onfP4nub
zLy1sm9s3JtUbjeN38kAAq8z4XYW2spGm9l4Mwdv5PjXc/xruf6VPP9ynn8p
Hy/k4/l8PEfk4GkqZ5LKGS+AY1TOcFBOXy7oyQVETg6R05rFNWdxjUE5VWls
RSpTZmOKU5hCqy8vWZDjyzR70xK9KUZPksGTGO826t3xWrdO41KrXAqFSya7
kUhuoqJvwsOvQ15ev/jhJuQbt+QzJum3qPm/49k8PJ2HnPloMh9N5CFHHrLn
wdE8OJIHh3LhYC7ozwG9OaAnG3Rl8x1ZfFsW35LJNWdwjelcfTpXm8ZWpbIV
NrYshSmxMkVJTL7Fl2v2ZZm8GUZvqsFrjfdYdJ5EjSdB5dYr3BqZWyVxKWJc
skhXXKgr7qVb+tStfOSN/5KxfQLKfs13/+PN+D+czf/90dr/PNj6X+92/vf+
m1++2/vNu/0/HLz79PDdX4/efX188Ojk4MnpwYuzg5DzdxEX76Iv30mu3smu
95U3+2rXvs69F+/ZS/C+Nfnempk3FuZNMrtr5XZt3E4q/zoNvE4H2xlwKxNt
CmThjSy8nu1fy/avZvtXcvzLuf7FXLyQh+fziJyZPOzMQ1OCHypnPA+OUTnD
VM5ALugT5OSA7my+M4tvz+JbM3kiJyMgpzqVrbSx5SlMqSAnmSlIInKyE30Z
Jm9agjcl3pOk95i1HqPaHa90a+VudZxLEeuSRbmk4a64Vy7pM7f8sUf7tc/y
GVfwO9T6CzyTi6dzkTMXTeaiiVw0novsuXAsF47kwKEcOJgD+rNBXzboyQJd
WXxnJt+ewbdm8M3pXGMa15DK1aWyNTa2KoUtt7KlSUyxhSk0M/mJvhyjLyvB
lxHvTdV7U7TeZLXHovSY5J4Eqccg8eijPboIjy7Uo3/hNTz1mR8xqV9x+X8B
tb8D3f/iHf2na+c/XSz+8+nqL082f3W8/dujnT8e735y/Obzk7dfnux9e7r3
+Gzv6fn+y4v90Mv9iKu96Ks9yfWe7GZP4dpTu99qPW/13rcG7xuj700is2tm
d5PYnWRux8q/TuG3U8F2KtxKg5vpaDMDbWTg9Uy8lukXWM3yL2f7l7L9izl4
IQfP5eLZXOJHkDNF5TiCckZz4DCRAweonN4s0J0FiJxMvi2Db0nnmgQ5aYIc
TpRTYWXLkpmSJKbIwhQk+nJNvuwEX6bBm6b32nReq8ZjUXkSFR6jjMiJj/Ho
Iz26MI/+lSf+mdf0mLF+w2Z/Dir+iNp/iWdy8HQOduagyRw0kYPGc5A9B45l
w5FsOJwNB7PgQBboywI9maA7A3Rm8O3pfFs635LGN6VyDTauPoWrTWGrrWxl
MltuYUvNTHEiU2hi8hN8uQZfdrwvU+dL13hTVd4UpTdZ7k2K81piveYorznC
aw71Jb3wpTxl0r/n8r7myz+HjX+CPb9hR37tmfjV9eyvLxd/e776+7ONP55t
fXK2/dnZzhdnu9+c7T46f/PDxZtnF29eXr4NvXobcf02+vqt5Oat1PVG4X6j
8rzReN7ovLvxvt0EZtfI7CSyO2budRL3OpnftvLbKWDLBjdT4WYa2khD6+lY
YC3Dv5rhX8nwL2f6l7L8C1l4PhvPZePZ7ICcKSrHQeQgQc4olTOUHZDTK8jJ
BF0ZfAeV05rGN6dyjalcvU2Qw4lyKpLYMgtTYmaKBDlGJjeBytH70rXeVLXX
pvRaBTlSr0XiNUd7zZFec5jX8spnfcakPWZzvuWLvwC1n6DO3+KZLDydhaey
0GQ2mshG41nInoXGsuBIFhzOgoOZcCAT9GWA3gzQnQ660vmONL4tlW9N5Ztt
XGMK12Dl6pK5mmS2KomtMLPliWypiSk2MoUJTH48k6v35Wh9WRpfhsqXrvCl
yXypcT5brM8W5bNF+FJDmfSXbNZTNv8xX/ItqPkCtnyKev/ADf/eN/57t/MP
N/N/vFr68+Xqp5frn11sfnGx9fXF9ncXr7+/3HlyufP8avfV1W7Y9W7EzW70
za7EtSt178o9u0rPrtq7o/Xt6H07BuZ1AvvaxL5O5LYt3HYSv5UMtqxgMwVu
2uCGDa2novU0vJaGV9P8K+mEpQz/YqZ/IRPPZ+K5rIAcZxaaonIcQTmjVM4Q
ldOfSeT0ZAhyQGca355G5LTY+CYb15DC1Vm52mSuOomttLDlZrY0kcgpSmAK
DEyensnR+bI1vkxBjtKXJvelSqmcaConjEl/xWQ+Z3N/4Iq+4yu/go2foa4/
4ZlM7MzEU5loMhNNZKLxTGTPRGOZcCQTDmfAoQw4kAH700FvOuhJA11poDOV
b7fxrTa+JYVvsnKNyVx9ElebxNVY2CozW2Fiy41saQJbbGCK9EyBjsnXMLlq
JkfJZMuZLCmTKWEyY5jMKCYrgskOZXNfsgXPuJIf+MrvQMPXsO1z1PcJP/xn
1v5n79QnnplPXfN/uVn6/Hrli6u1r642vr3afHS19cPV9rPr7RfXr0NuXofd
vI507US7dmLdO1LPjtyzo/S+Vvtea32vdczreGY7gd02ctsmbsvMb1n4zSSw
mQw2rFBgPQWt29CaDa+mCvhXUv3Laf6ldP9iun8hA89n4NlMImea+AnIcQTl
jAblDFI5fVRON5XTkcq3UTnNVr7RytUnc3VEDifIqUxky01ETokgJ54pFORo
mTxBjorJVjBZMiYzjsmMZTKjqZwwNucVm/+cK37CV3wPar+BLV+g7k/xdAZ2
ZuCpDDSZgSYy0HgGsmegsQw4kg6H0+FQOhxIh/1poC8N9KSC7lTQaQMdKXxb
Ct9q5ZuT+aYkriGJq7NwtWauOpGrMrEVCWy5gS2NZ0v0bLGWKdQwBSomX8nk
yZk8KZMrYXJj2LwoNj+CLQjlil5xpc/5yieg9nvY9C3q+BL1fQ6GP+PsnzET
n3mnP/fM/dW98KVr6eublW9v1h7drD++2Xhys/n8ZvOlayvEtRXu2o50b0e7
t2M921LPtty7rfBtq3zbGmZbx2zr2S0Du5XAbRm5zUR+08xvWsBGEthIhuvJ
cM2K1lLQagpeteEVm39ZINW/mOpfSMPz6XguHc+m45kM4udWjiMgB41SP4Kc
waCcXiqnS5Bj49upnBZBTjLfmMTVUzk1VE6lkS1PYMtEOTq2SJCjJnLyFUye
jMmNY3JjmbxoNi+SLQhjC0O4khd8+VO+5jFo/A62fY16/oqn07EzHU+lo8l0
NJGOxtORPR2NpaPRNDicBofS4GAq7E+Ffamg1wa6baArBXRYQbuVb03mW5L4
ZgvfaOEazFxdIldr4qqNXFUCV2lgy/VsmY4t1bIlarZYxRYp2EI5WyhlCyVs
YQxbFMUWR3AlYVzZK77yBV/zFDT8AFsfoa5vUP+XcPgLfuwL1vEFM/Wlb+Yr
79zXnoVv3UuP3CuP3atPXGvPXOsv3Buv3Buh7s1w92akZyvasyXxbsV5t2S+
LYVvS8VsaZgtLbulZzfjuU0Dt2nkN0z8RiLYMIN1CxRYS0JryWhVwIpXrHg5
xS+wZPMv2vwLqXg+Fc+l4dk0PJP2QI6D+hHljIhy0uBAUE4PldOZQuS0JRM/
zUl8k4UX5NRTOTVBORXxQTkaKkfJFoly4tjCWLYomi2K5ErCubIQvuIlX/0M
1D+Bzd/Djm9R71d4OhU70/BUGppMQxNpaDwN2dPQWCoaTYXDqXAoFQ7a4IAN
9tlAbwroSQFdVtCZDDqS+bYkvtXCt1j4JjPfmMjXm7g6I1ebwNUYuKp4rlLP
VWjZcg1bpmZLlWypgi2RsSVStkTClcZwpVFcWQRXEcZXhfA1L0H9c9D8BLY/
Rt3fof5v0PDXYOxr3vE1O/kNM/2tb/Y77/wj7+Jjz9IPnuWnnpXnntWXnrUQ
z3qYZz3CsxHl3Yjxbki8m3G+TZlvU8FsqphNNbupZTd13Iae2zDwGwn8hpFf
N4H1RLBuhmtCXxa0mkRYScYCy1b/kkCKfzHFv2DD8zY8l4pnUm/lYFGOg/oZ
SyNyRqgf4WIW5PTboCinW5BjFeSAdkFOEpHTTOU0mLj6oJzqeK5KkKPjygU/
arZMReSUyqmcOK4kliuN5soiufJwvjKUr3kF6p6Dpqew9QfU+Qj1fYunbdiZ
iqdS0WQqmkhF46nInorGbGjUBkdscNgGB1PgQArsT4F9VtBjBd3JoCsJdCSB
dgvfZuZbzXxzIt9k4huNfEMCV2fgauO5Gj1XreOqtFylhqtQcRVKrlzBlcu4
cilXLuEqYriKaL4qkq8O52tDQf0r0PQCtj6DHU9Qz2M08B0a/haOfcuPf8tN
fMc6HzEz3zNzj33zP/gWn3qXnnuXX3hXXnlXQ72r4d61CO9alG89xrcu8a3H
MRsyZkPBbCjZDTW7oeE2tNy6nluP59cN/HoCWDOCNRNcS4SrZgG0YkErSVhg
OQkvJfsFFq3+Bat/PgXPpeBZG56xUTk2QQ4W5TioHyoHiXKG7snpFeUkg07B
jwW0WYicFlGOiW8w8vXUT018QE6VhqtUEzkVghw5lRPHlccKcrjKSL4qnK8J
A3UhoPElbHkG25+g7seo7xGeTsHOFDxlw5M2NGFD4zZkt6GxFDSagkZS4HAK
HLLCASvst8K+ZNibDHqSSF+dFtBhBu1CX4l8i4lvNvJNCXxjAt9g4OvjuTo9
V6vjajRctZqrVnFVSq5KzlXJuCopVyXhq2L46mi+JpKvCwf1YaApBLS8hO3P
YddT1PsEDTxGw4/g6CMw/j0/8T039Zid/oGdecLMPWXmn/kWX/iWXvqWQ3zL
Yb6VcN9qpG812rcWw6xJmLU4Zk3GrivYdSW7ruLWNdy60JeOX9Pza/FgzQDW
EsCqEa6a4GoiXElEK2a0bMECS0JfSf5FgWT/QrJ/3ornrHg2Bc+kvC/HIfp5
KGeQ+rmV0y34sZC+2s2gLZFvNRE/TcZbOXxAjpar1gTlKIJy4riqWConiq+N
IHIaQ0DzK9j2AnY+Qz1PUP9jPG3FTiueSsGTKWgiBTlSSJ4xKxq1ohErHLbC
oWQ4mAwHkmF/EuxNAj0W0G0BXWbQmQg6EkGbCbQa+RYj35zANxn4xni+Qc/X
6/g6LV+n4WvVfK2Kr1HwNXK+RsbXxPE1Er42lq+L5uujQEMEaAoDLaGw7RXs
eIm6n6O+p2jgCR5+jEYfQ/sPwPEDP/mEcz7hpp+ys8/ZuRfM/Etm4RWzGMos
hTHLEcxKFLMSzazEMqsSdlXKrsrYNTm7puTWVNyamlvT8mu0r9V4sGoAqwlQ
6GtFwISEvpYFzHhJwIIXLX6BhST/vEAynkvGs1Y8Y/2InHHBjzXgh8ix3snp
E/zcyjETOe0mwQ/f+lBOg46vvy9HSf0IcqTEjyCnNoaviwL1kaAxHDSHwtYQ
2P4Sdr1Avc9Q/xPsTMZTVsKkFU1YkcOKxq3InoxGk9FIMhpOhkNJcDAJDiTB
fgvss8BeM+gxg+5E2pcJtBtBmxG0JvAtBr45nm/S8006vlHHN2j5eg1fr+Lr
lHydgq+T83Uyvi6Or5Pw9bF8QzRojAJNkaA5HLaGwfYQ2PkK9bxAfc/R4DM8
/ASNPoH2J9DxFEw+5aee8dPPuZkX3OxLdu4VOx/KLoSxi+HsUiS7FMUuR7PL
seyKhF2RsisyblXOrSq5VRW/quZXNfyqll/VgVU9WIkHKwa4kkD6WjaiZRPp
aykRCyyaBfwCCxb/vMU/l4RnBZLxTDKeTg74eSBH6CvgB4p+7uRYoCinS/Bj
CvpJAK2GOz+inAZBjjroR5QjJX4EOfUxQPBD5EQAIidUkAO7X6LeF2jgGXYm
4alkPElAE8nIkYzGk0lfY0loNAmNJMHhJDhkgYMW2G+GfWahL9iTCLpNoMsE
Oo2gwwjaE0CbAbTGg5Z4vkXPN+v4Ji3fqOEb1XyDim9Q8g0KvkHON8j4Binf
IAGNsaApBjRHg5ZI0BoB28NhRyjsCkG9r1D/SzT4HA8/w6PPkP0ZdDwDE8/B
1Ave+YKffsnNvOJmQ7i5MG4+nFuIYBcj2cVobimGW4rlluO4ZSm3LONW5NyK
kl9R8StqfkXDr2jBig6skL6g0NeyQAIifRnRkkkALyaK+BfM/nkz7ctC+ppJ
wtMU0hf18zE56FbOwK2fxKAfI/WTANoNQT9BOU1UTuOHcuKInMYY0BQNmqOI
nDZBThiR0/MK9b1EAy9oX0l4kjKRhBxJaDwJ2ZPQmAWNWtCIBQ1b4JAZDprh
gBn2J8K+RNhrgj0m0G2kkRJAh4FGigdtetCqAy1a0KzlmzV8k5pvUvFNSr5R
wTfKQaMMNElBkwQ0x4LmGNASDVqjYHsk7AiHXWGwOxT1hqD+V2jwJR5+gUef
I/tzNP4CTrwAky/B1CvgfMXPhPCzobzQ11wENx/JLURxC9HcYgy3KOGW4rgl
Kb8s45fl/LKSX1bxy2qwrAHLWrCsE4DLergcT/syoKUEtCT0ZcSLpgALQl+J
/vlE/5wZC8xa8IwFT1uInFs/D+Qk3ZNj+VAOvC+H+BHl6EEL8UPkNAflNBE5
fEBOXMCPKKctErZHwM5w2B12J8dpwVMWPEmZsCCHBY1bkN1C+zKjETMaNiPS
VyIcSIT9JkKfEfYaYU8C6E4AXQbQKUSKB+16QpsOtGpBqwa0qEGLCjQLKEGz
AjTLQbMMNEtBSxxokYDWGNAWDdujYEck7IyA3eGoJwz1haKBEDT4Cg+/wqMv
sf0lGn+JHK/g5Cs4FQKcoWA6FMyE8bPh/FwEPxfJz0fzCzH8Qiy/KOEX4/hF
Kb8k45fk/JISLKnAktgXqQwu6eCSHi7FC6Al2teigNAXZUHoy+SfN9G+EvGs
mTBjpn1Z7vy8J2fMfOsHDiXe+ekzUTlGeF9Ox3tyqJ8P5TSLcmIFP1D00xkJ
uyJgTzjqDUP9oWgwBDvNeMqMJykTZuQwo3EzspsDeUYT0UgiGk6EQyY4aIID
Ql9G2leC0BfsMcBuA+iKB516EqlDB9q1oE1DaFWDVhVoVYIWBWiRU2SgVQpa
40CrBLTFwvYY2BENO6NgVyTsjkC94agvDA2EoaFQPByCR0Ow/RUaf4UcIWgi
BE6Gwqkw4AwD0+FgJgLMRoK5KH4ump+P4edj+QUJv0D6AotysKgAi2JftLIl
DVy67UuPhL4WDZQELLAgIPRl9M8bSV9zJtpXIp5JpH2ZiZxbPxNmLMq58xOQ
g0hf9+T0JVA/t3JEP1ROwI8oRwVabv38pByhr75w1B+GBkOxMxFPUSYT8UQi
diSi8URkp4wl0kgmNGxCpC8jYSAB9ifQSAYaKR5260GXHnTqQKcWdAiRNKBd
TSK1qUCbErQpQJsctMkoUtAWB9olsD0WdsTAzmjYFQW7o2BPJOqNQP3haCAc
DYXh4VA8GorHQvB4CHKEoolQNBkGp8KhMxxOR4DpSDATBWajwWwMmIsF8xIw
HwfmpWBBBhbkYIH2RVDBRTVc1MBFLVzUCaBFPVqMp5DKaFmUebEvo39OwIRn
TbSvRDydSOQ4H8q59XNfzrAJDolyjHdyiJ944keQ06UjfgQ5HZqgn1s5t37e
kxMDu6Lv5PRFEDmDYR/va9yE7CY0ZkKjJhJpxIiGjYhESqB9GQh98bA3Hvbo
Cd06KETq0oJODYnUoQYdKtCupChAuxy0yyhS2B4HOySwIxZ2xsKuGNgdDXui
UG8U6otE/UKkCDQUjobD8WgYHgvD9jA8HoYcYWgiHE2Gw6kI6IyE01FwOhrO
REOhr9lYMCcBc7SveRmYJ33BBSVcUBHu+tKiQF96tBAvgBcMAeaFvhL8AnO0
r1kj7YsybcJO04O+JsS+7skZ/UDOgCjHQOXE38qBRI7oR5SjuidH9CMFATmS
gBzSF/VzK2cwnESaokya8IQJOwg0khGNUUaNaCQBDSegIQEDHDTQSPGkrz49
7BX60hG6tbBLQ+hUA4IKdCgpCtAhBx0ySJDCjjjYKSF0xcLuGEJPNO0rCvVH
osFINBSBhiPwSDgeC8f2cDwejh3haCICTUagqUg0FQWdtK/pGDgTC2clcDYO
zglI4ZwMzsvhvALOB/taUMMFDVzQIoKOoqcIfdHK5kXEviikLyOeMZKyAn3d
kzNxKyfoh8gxEjnUz52c/g/kBPyo4UfkyO/JiQvI6fpAzoDgJwI7jXiKMmnE
ExSHEY0bSR4SKQGNJpC+Rgxo2CD0hQbjocCAEElPIvXpYK8QSUvo1sBuNYnU
pYKdAkrYqaDIYaeMIiV5ugQksDuW0BMDe6NRXzTqj0IDUbSvSDQciUci8GgE
tkfg8QjsiMATkQJoMkroCzmjkTMGTceSvmZoX7NSOCsjfc0F+5pXCaB5NVrQ
UB70RcqaFwlU5p8zBPtKCPZFcRoDfiaDfkQ54/fkiH5EOeR6DsrpD8rpvZWj
CcjpEuUog3Lk78vpupUTg+77GYr8oK8E7EjA4wlIwJ5AIxkIpK94wlA8GtTD
AQEd7NeRSH1aGklDEPrqVhG6lBQF7JJTZBQpzRMHuyWEnliaJ4bmiUYD0WhQ
iBSFhqPwSCQejcRjkdgeiccjsUPoKwoLfU1Go6kY0pczFk1L0HQcmhGQolkZ
mpWjOQEFmlOiOaEs2te8hqKl6ATwvJ5yr7I5sS+Df9ZA+pqhTFPe74vKcdyT
M3Yrx3AnR/TTL/qhcnqpnB51wM+dHMVDOdIHckQ/fTH35WBnAp6iTFLuIhmQ
nUIixaMRyrAeDVEGdaSvAS3s15JIfRoSqVdNIvXQvrqVsFtBuN9XtxR2x1GE
PGJfsSQPiRRDI0WjoWg0HI1GovBoFB6LwvYoPB6FHVF4IpowGYOnBGKRU0IQ
+pqWkr5maF+zCoLYF+H9vvBdX7SyuQD3+jLgGcO9vhICfm7lBK7nh3JEP8NB
P4M6NED99It+HsrpEeWIft6TE/TTQ/0QObHvycFOA2HKgCcpExSHgUQaj0f2
eDRGGdWjET3JM6xDQzoSaVCLhL4GNLBfQyL1qUmkXhWhR0lRBCIRZBQaqSeO
IuQJRuqPpZFi0GBMsK9oPEoZi8b2aDwejR0xeCKG9DUZK/SFpyTYGSdA+pqW
oRk5gfSlpNCyCBqKFgvc72tORCyLMht/ry8Dnqbcypn6UI7hnpx4Ikf0MyT6
EeVoiZx+Kqfv/4qcmI9FiscOitiXXY/G9KSvUR0a0ZG+hrVoSEsiDWqQ0Bep
jObpUxF6lQQhD0FOkQWRUuJgbxzNI0F9kkCkAQqNhIYpIzF4NAaPxWB7DB4X
iMWOWDwRS/qalOCpOIJTip0yPC0gxzMKihLPCqjwrBrPCWgotK85XZAf64vw
U31N/oQcfVCOjsgZeiin/6Gcj/sJyrn1cyun/04OdsYTpiiTlEAkPR4n0Eg6
gtjXiDbQ15CGRBpUowEC7FcR+pSEXkWQD/L0SmkYSh/tq19yr69YNEQZjkUj
sXg0Fo9R7LG0LwlhQoIn4whTUoLQl1NO+poO9jWjCvRF0BB+tC/C/bJoX5Tp
ILd+buVMPJQj+hkV/VA5w7dyNB+Rc+dHTv08vJjfkyP6uScnkCcQSU+YoDgo
4zpkp5BIWoIQaUSDhjUk0pCa9DWoQgME2K8kkEgKgpiHIKNIg4h54hBB7EuI
RHnYFxqR4FEJHpNgO2U8DjsoE1I8SZmSEYS+nArS17Qy0BchWBZBS/jRvvT+
Wf3f7mtKf+cnKCfgh1zPD+UM38pRi3LQe3L63pPz0E+f6OcDOYOxeFqPnZQp
/b1IOoJDRyNpkZ1CImkIJJKaIEQaUpG+SGVKAkmlIAh5AvxEnjjUH/cwEmVI
goYpIxIk9DUah8fisJ0yLsUOyoQMTwrI8ZSAgvTlVJK+plUEoSzCvbIIOsLD
voJl3WNGj0Wm9X9DDvGjxR/KGfmbchQ/Lkd6J6fvI3LuIjl1eIoyqQtG0hLG
tbQyDRqjjKoJJJKKIEQaUqJByoCC0C8gh/3BPHdI73GbJ8h7fQ3FoeE4NEIh
fUkJdinpa1yGHQJyPCEnfU0qSF9TStKXk5Y1rfZPB/ua+aAvgv6W98v6sK+7
yoJyJt+XgwU59odyRD9DlICcn/bzQA78cTl4Wkdw6u71pSVMUBwawriGRlKj
McqoCo1QSGVK0hepTEEgkeRCniAfzSNFH+mLMkgZigv0RSqTEkZpX2MybJfh
cTlB6MuhwBMKPKkkCH1NqUhfTrXQF57WCPhnBLSEWQHdh319pCza173KflqO
NiCH+LmVE/TzcTn3/fz8i/nOTyASSaUlTFFIKg2e0AT7UhOESHYVGlORPCSS
kiBEGlagIQpJJSd5CDIhzx0PypK+n+dhJFqZlDBMGZGhUQLpa0yO7UJfCoLQ
l0OJJwRUeFKFp9QEoS+nhkAq02Kxrxmd0Nc9fqSpu8p0AnhG9zfkBPwE5NDK
gn7u5Cg/Jkf+nhz0s+UIfxH5u6a1wUiaACSSmuCgjKsIdhUmkZRolDKiIAxT
huSEQYpQlkggkjRA3y0fjSQlDAYhlcnQsIz0RSqTE8YUWMAu9KUkOFQEoS8h
56Q6kJz0Rf8W8ndR7dT/zysr+F+7q+xjfiYf+rmVY78vR/l/Kkf6vpx7foTL
L1iZJnBlkkj0z5+keSZUAS2CHztFiDSmQKMUEklOECMJhgcpgVTSuzzvBbsL
E/zPB6T3KpORf0rsS/jHRyji/+MYCUBiiJbEy4nkpA7FnwBxS29i4q+DmKc3
uo91dO9x9vBnSH+b78txagI/5PflBP0QOco7OSPyB35+ppy+H5VDU4l3D4qT
3lJIJHqTmRSvXiW584iXtJ1e3kJfpLKgSRIpaFiMNHjP/49W9gGB/0nwHxkK
/pnDisBvWbx06W2HXM/ijVq8aU9oAw8X8UET6Cv4zkCfRx9Whh/2dQ/61BPl
zHwoR/2+nICfh3Lu/Mge+vk/lyO+RJFH87T4pFbTp7aK9EUqo09zEok+L8QH
h50+RMbkwUj0fnUXKXhDez/SvV83uR9+NJjs7nYxGLyBiPd/8Vkg3GTEpyd9
uAtvQYHHvfi2NhF8fyOVBd/rfrqv+99iD/sikN+X6OdWjvojcu77sSsCcsZ+
Us5P+PlROeRKJl8oJBJ9ASaR6CsxqUx86VKSF+ZJ+iZGIskDr2ckEnkBEN8E
aKrg64H4qhCIFHxQvnc3vh/pLti9R7D4UCZ90Se1+JYlfkEIr17ia7P4fWEP
vlQ7xM+Q4FcS6Yt+6oqfvTMB7i1lkI+vh9/O9OvstiyCJvBREPDz43ImHsqx
/xw50h+XE/eBnICfwApA4ANT/H6hH57kc0b8tFGQz5wJCnmLlpEvIDuFfhYJ
L9uBt+5AJPo2Lr7mfbSv4Pvqey/5wmttsC/6uksqoy/A4veL+C0jfqcLXzfi
x+kY/VC1i9/1dM2BLM7QhSNxhe2Dyu76CizOf9AX4V5f9+XM/IicyYdyRD/k
eqZy7vsZivuZfj4ip++2L7rUFljGUQYiTYuLBnQBgUSSkSWFCfqtOk6/W+0U
oTISKfhtK340fRjpI3nei3T7JUK/JUll9NNSXBkQVwmG6KKBuNozQtd/Rula
EFkxowt64kqs2NckXaQVF2zFxVu6kEsX4QNrvPj9yu71Rbhdzvqgr/typh7K
Ef3cyhn7GXIGfr4cGU0lLo0G+5qheaZpHgJdoyOLP1KycDdBl4NIZXSBaIxA
Io3eRhIXKIKLFeK3+UfyBCMF1mHu9UWgizZ0zQ31i+uT4nIcXbcU11RHxFVW
ukJOlsrJmjnZ7BB3PUhfdOvKGdzMuuvL8HP7+gk50/fkTP2IHNHPrZyRH5Hz
cT/Se37u5AT2iWZViKxpi+uldKF7mi56k9VvWWAlnCyxxuGJ4KJrIBJdjx0l
C31kuW9E8iN9Bbnf1/1Fs8AyWnAVNLAoShdIyeK2GpKFbnHRW9wdoDsXI+Je
Bt2EspM9KSzgoLuKkwkf9JWAZxNoWQRMuN1lvt3EJHtkZHNzThvcOxPkBP18
VI7zVo6UyJkIyhkPyhH93Mr5CT8P5MR9IIf4Ce7rqWgkutk3o0AzciwwTbeW
yB6TNLDfRPqiOxoOCR6n3EUSV9Tp0vowXWMn68kf9iW5l+fDSGJf4nYD3ScS
t4361IGNvwGyD0h2S8m2oJ5s6Y7Ekx35MQPZnbeTnXrsoIMN4g7+FN3QF4cx
Zoy0L3G0hvZFhjceVCbODAT3o4N9ibvVd3IUVA71c9uXKEf04wj6sQf9CHJG
H8oZiv1YXxL0t+SQIYdAJHFnlm6pk+1aGdm3naZlOWlZUxKyUSgwQfcNHXRP
yk4Zi/2RSMGNrbs8ZBvubpcnsEknDe4Biftl4l6eMrAh2ytuhmoC2+tkq12P
BvVkWEJgmI5PjNJpCntgGIZMeU3QoaYpOuAkDjuRvsjEGumLjLHdzkeRvoKj
Uw/7IhMgwb7m7ssJ+MEf+pmQ3MkZD8oR/dxez7dyPvDzQE7vR+TQSHQ6hYw9
KAhkEILmIZGkZEaC7LxLSJ4pcXtX7Evc9qX7v2OUUbIpTBim28QCd3koYl+9
IuLGdzBSYE9c3B9XkPEGsmlOpx161HT+QUMHRegQS7+ezCANxpORJHGWbISO
lo3RSbNxE3bQccFJOjropJOf4kjhrCkwZ0jHDgl0ClEcSgz0RaAjcLd9BeQo
PyZHSuXQskhf9+Q4gnLsPy5n8L6c2A/kxH1EzoJanP4iY2BzCoqcjhvJ6BwL
7WuaDrc4Y4N90VEKAQedrLBTxsi4BRqJfhiJDh4IBCMF80gCech4iThnchtJ
EeiLoKIDRWo6XKSls2E6MkQnDvgNGOAgnYocNpKh1lETmbm103lXBx2fnqSj
1E4z7YsMWvtn6dD1vBEL3M733va1GPyJLWghQfPz5MSJwz90qoTKEf2QvoJ+
xgLjKAE5w0E5gw/k3PnpufXznhzaFxmtVNKxPZKHIqNDfVI6LSahfcUSpuh4
EolEp5XEvt6PRAdmhih3fcUE88QG80iCs1LiHJc40yUPTnkpA3N6ZGCPTu51
a+nspZ7MzZJRVQOZfB4gU9BoiA5FjySSgf8xOtzuIMcTyCGFKXpgYZqeX5g1
++foIZR5kzg2TyAHH8SJ+nhxAJgOb2vJYLDYlzh6KsqZ/1AOvZjv+7mVc+tH
lDN2T47oZzD6Tg71Q+XE/qQcORlaFvtaUAQjyci4LIkUB2cEhDyxBCcd/JuK
RkIeEimK4KDzZnY6ezZGhtDQCBkgDPZFB+cCecioIc1DI3XTSGQckUYKDJTK
gyOmSjpxKqCGnRrYpSUjzd0CejLkTKbTE8jJgn4jOWUwSE4ckHM0o/TkiN1C
Tv046CGgKXogaJqeD5q1+OfMpK+FRHImhZwkMiJCAj20Ek8PsOjJ4QixL8Kt
nGBf87KgnzjqRxLw46R+poifj8ixB+RgUY7oR5Qj+qFDfQ/lSAKzmg/kyMGi
iqIkJwUW5HQKneaZo3lmJXSMNhZOxyABZzTpayoKTdI8E3SSc5xOddrpeOdo
ZCDSEGUwiuahkDwxZGa1hw6vkjw0EplAppHITLKcjigr6Kyyio6aq8lAPpk8
15FTFV3xsNtAj8YkkGM7fSZy6mqAHE9DwxZygG40iZynGydn68ghuyl6QHI6
mRzBm0six/EWzAL0jJ4JkyN7RnocLAEuGe76IkdaNEBgUf1ATsCPNOhHQvu6
J0f0M0lGWwNybv0E5ESiWz+inIGAHHox/5gcaVCO/P8HS3S9UQ==
           "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {144., 144.}, PlotRange -> {{0, 144.}, {0, 144.}}]], 
       EdgeForm[None], GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Py0=
         "]]]}, {}, {}, {}, {}}, LineBox[CompressedData["
1:eJwt0bdNgwEQBtAfTMY2OdsgWsIChJ7QURE6CrDJyYmcBAsQFoAFCAvAAoQF
YAHCAsCzRPGkK06nu+86p5fHlgqCIEhRSL7uYJApclxyzyvfVGnqZZQkp1zz
yDu/xA3rZ4IM59zyzCeRUBB0M8wsCZLMMc8CiyyxzAqrrLHOBinSZMiSY5Mt
ttlhlz32OeCQI46ZYYguwnzY64kbzkgzTh8xftz1xgNXnJBghB6ifMnnhTsu
yDLJAO3EidFGKy0000QjDdRTRy01VOczJ0qEMJVUUE4ZpZRQTBGh/3/+Ac0Z
Le4=
      "]]},
    VertexTextureCoordinates->CompressedData["
1:eJx1202IkFUUh/GhEHLn7MJyIYUrIRfZojBxkRFEUEEELSJBWrToA3djkDRY
EIIEzcLAioiJFjFWi2Yk6EMLDKIoIkxMy8m0NKKgoKBo8XsXD9zV5Vk/3Pue
8z/n3bjr0Xt2XzEzMzN/5czM/+fMzFNbdz6961bn6/ee3bOy+Mp2/M/GT84s
Lx6Z+PpDG55ZmFuZeNPalYXlxQ8mvvm21QuLsx9PfNe+ddsW5k5MvOu9Ww7O
r3428dG9bz++vPjFxMfX3/Hi0qkvJ/783dPHFme/nvjkfXsuH975zcTn/lh7
9cLcyYkvP//SjgNLpyb+a8vWR+ZXT0+87+HdJ7YdODPx/pu2PLi8eHbi59b8
/fuNH34/8cGvjj+7dOqHiV949eCGzX+em/jQEw+8tTj748Qv79h0+3Wbz0/8
2rrfvj2886eJ3/ju6GPrH7ow8dKb+9cszF2c+J0n7z40u/DzxCt3XnvDgaVf
Jn7/mvMfXfXppYmPXTxy//zq5YlPLO+99O+/v24fee3JL+YX84v5xfxifjG/
mF/ML+YX84v5xfxifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5Hd3Teu3J
L+YX84v5xfxifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5xfxifjG/mF/M
L+YX8zt6d3tP67Unv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hf
zC/mF/OL+cX8Yn4xv5jf0Xe0727vab325Bfzi/nF/GJ+Mb+YX8wv5hfzi/nF
/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5ndUF/U72ne397Ree/KL+cX8Yn4x
v5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/md1Tnti7qd7Tv
bu9pvfbkF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4x
v5jfUd/SOrd1Ub+jfXd7T+u1J7+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF
/GJ+Mb+YX8wv5hfzi/kd9aHtW1rnti7qd7Tvbu9pvfbkF/OL+cX8Yn4xv5hf
zC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn5HuUL70PYtrXNbF/U72ne397Re
e/KL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn5HOVFzhfah
7Vta57Yu6ne0727vab325Bfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv
5hfzi/kd5X7NiZortA9t39I6t3VRv6N9d3tP67Unv5hfzC/mF/OL+cX8Yn4x
v5hfzC/mF/OL+cX8Yn4xv5jfUY7b3K85UXOF9qHtW1rnti7qd7Tvbu9pvfbk
F/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/md5TLN8dt7tecqLlC+9D2
La1zWxf1O9p3t/e0Xnvyi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5nc0
Z2ku3xy3uV9zouYK7UPbt7TObV3U72jf3d7Teu3JL+YX84v5xfxifjG/mF/M
L+YX84v5xfxifjG/o7lZ5yzN5ZvjNvdrTtRcoX1o+5bWua2L+h3tu9t7Wq89
+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzO9oDtq5WecszeWb4zb3a07UXKF9
aPuW1rmti/od7bvbe1qvPfnF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+Y39Fcu3PQ
zs06Z2ku3xy3uV9zouYK7UPbt7TObV3U72jf3d7Teu3JL+YX84v5xfxifjG/
mF/ML+YX84v5He0pdK7dOWjnZp2zNJdvjtvcrzlRc4X2oe1bWue2Lup3tO9u
72m99uQX84v5xfxifjG/mF/ML+YX84v5He2ddE+hc+3OQTs365yluXxz3OZ+
zYmaK7QPbd/SOrd1Ub+jfXd7T+u1J7+YX8wv5hfzi/nF/GJ+Mb+Y39EeUfdO
uqfQuXbnoJ2bdc7SXL45bnO/5kTNFdqHtm9pndu6qN/Rvru9p/Xak1/ML+YX
84v5xfxifjG/mN/RXlj3iLp30j2FzrU7B+3crHOW5vLNcZv7NSdqrtA+tH1L
69zWRf2O9t3tPa3XnvxifjG/mF/ML+YX84v5He35dS+se0TdO+meQufanYN2
btY5S3P55rjN/ZoTNVdoH9q+pXVu66J+R/vu9p7Wa09+Mb+YX8wv5hfzi/kd
7W12z697Yd0j6t5J9xQ61+4ctHOzzlmayzfHbe7XnKi5QvvQ9i2tc1sX9Tva
d7f3tF578ov5xfxifjG/mN/RHm73Nrvn172w7hF176R7Cp1rdw7auVnnLM3l
m+M292tO1FyhfWj7lta5rYv6He2723tarz35xfxifjG/mN/RXnX3cLu32T2/
7oV1j6h7J91T6Fy7c9DOzTpnaS7fHLe5X3Oi5grtQ9u3tM5tXdTvaN/d3tN6
7ckv5hfzi/kd7cl3r7p7uN3b7J5f98K6R9S9k+4pdK7dOWjnZp2zNJdvjtvc
rzlRc4X2oe1bWue2Lup3tO9u72m99uQX84v5Hf330D357lV3D7d7m93z615Y
94i6d9I9hc61Owft3KxzlubyzXGb+zUnaq7QPrR9S+vc1kX9jvbd7T2t1578
Yn5H/7H0v4fuyXevunu43dvsnl/3wrpH1L2T7il0rt05aOdmnbM0l2+O29yv
OVFzhfah7Vta57Yu6ne0727vab325Hf0X1L/Y+l/D92T715193C7t9k9v+6F
dY+oeyfdU+hcu3PQzs06Z2ku3xy3uV9zouYK7UPbt7TObV3U72jf3d7Teu35
Hw6B9Kw=
     "]], {}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImagePadding->All,
  Method->{
   "DefaultMeshStyle" -> Automatic, "GridLinesInFront" -> True, 
    "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.897560667557129*^9, 3.897560676455546*^9}, 
   3.897631906655548*^9, 3.9060421913344*^9},
 CellLabel->
  "Out[387]=",ExpressionUUID->"b93e424e-6edd-4e10-8e8c-ba247f068e22"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Mathematica draws a branch cut for complex powers ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "\[Alpha]"], TraditionalForm]],ExpressionUUID->
  "e0b9637f-5f1d-4688-a75a-26db068a6596"],
 " when the principal argument Arg[x] changes sign discontinuously from \
-\[Pi] to +\[Pi]. This can be traced to a (continuous) change of sign of \
Im[x] for a nonzero value of Re[x].\n\nThe function",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"\[Theta]1", "[", 
      RowBox[{"u", ",", "\[Tau]"}], "]"}], 
     RowBox[{"\[Theta]1", "[", 
      RowBox[{
       RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"]],
  CellChangeTimes->{{3.897556402060935*^9, 3.897556428817087*^9}, {
   3.89755693947651*^9, 3.897557009804041*^9}, {3.897557042958887*^9, 
   3.897557062175836*^9}, {3.897557575182281*^9, 3.8975576113000793`*^9}, {
   3.897557988140451*^9, 3.897557999983974*^9}, {3.897558090736024*^9, 
   3.897558167626039*^9}, {3.8975582276454268`*^9, 3.8975582353955173`*^9}, {
   3.897560461254599*^9, 3.897560467830408*^9}, {3.897560614883601*^9, 
   3.8975606538391314`*^9}},ExpressionUUID->
  "6f450dc6-138e-48c6-8e09-e7960ce91353"],
 " will have a short branch cut, and if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Re", "(", "t2", ")"}], "<", 
    FractionBox["1", "2"]}], TraditionalForm]],ExpressionUUID->
  "3cda0eea-550c-4247-b3d5-277bfc43f9cf"],
 " (approximately) this short branch cut, as drawn by Mathematica, stays in \
the fundamental parallelogram.\n"
}], "Section",
 CellChangeTimes->{{3.897560763456283*^9, 3.89756092987722*^9}, {
  3.897619179976281*^9, 3.897619233751864*^9}, {3.89761926548715*^9, 
  3.897619267565672*^9}, {3.897619336804937*^9, 3.897619348671844*^9}, {
  3.897619383633165*^9, 
  3.897619419653648*^9}},ExpressionUUID->"90aa37c9-5b8e-4354-9b51-\
2f92dcc02bd6"],

Cell[CellGroupData[{

Cell["\<\
Here is an example where the branch cut stays in the fundamental parallelogram\
\>", "Subsubsection",
 CellChangeTimes->{{3.897620048959592*^9, 
  3.897620068483589*^9}},ExpressionUUID->"9c284687-c1c5-4d99-b87b-\
c7b58d0d383d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c1", "=", 
       RowBox[{"3", "/", "5"}]}], ",", 
      RowBox[{"t2", "=", 
       RowBox[{"0.3", "+", 
        RowBox[{"0.9", "I"}]}]}], ",", 
      RowBox[{"\[Tau]", "=", 
       RowBox[{"I", "-", "0.2"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ComplexPlot", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"True", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[Theta]1", "[", 
            RowBox[{"u", ",", "\[Tau]"}], "]"}], 
           RowBox[{"\[Theta]1", "[", 
            RowBox[{
             RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
         "c1"]}], "]"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", 
        RowBox[{"1", "+", "\[Tau]"}]}], "}"}], ",", 
      RowBox[{"PlotPoints", "\[Rule]", "20"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.897556402060935*^9, 3.897556428817087*^9}, {
  3.89755693947651*^9, 3.897557009804041*^9}, {3.897557042958887*^9, 
  3.897557062175836*^9}, {3.897557575182281*^9, 3.8975576113000793`*^9}, {
  3.897557988140451*^9, 3.897557999983974*^9}, {3.897558090736024*^9, 
  3.897558167626039*^9}, {3.8975582276454268`*^9, 3.8975582353955173`*^9}, {
  3.897560461254599*^9, 3.897560467830408*^9}, {3.897560614883601*^9, 
  3.8975606538391314`*^9}, {3.897619237845399*^9, 3.897619315457747*^9}, {
  3.89761936120942*^9, 3.897619368434053*^9}, {3.8976194067338867`*^9, 
  3.89761940689263*^9}, {3.897620303254793*^9, 3.897620312071957*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"6c4b96e0-03be-4466-a8b4-62c7d5eb1aa5"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxF0E9oFnQcx/HHimxFQUl0GmR4CHYIoocIYpsEXgqZUS2SLEZ/PIS7RETd
QlYdevAwSPsHwjysGUnhRUaL0otB2GP51DJdW4/LYUmPMA+FxuD7+nj68b78
+HxfG8fGH3/xukajsWddo7H2rp+9OLj8wUuDN83M3LZ/8yuDP4z3v3qydWBI
zze3zLVbh9Pnfhlc7B/4On1m7/wL7dax9KnR15YnesfTL9/Sd7h/4ER6aeWp
1cun2+nnjk892G79lP51uvf6weGf06PvDh+Z6M2nT+5s/fv81G/pezft+qR/
YOHavg13zt28+/f01PWzZy+fXkyPXRprdJt/pO9e6tvYbnWv3dM+tHlu+Vz6
o29Gxw4O/5ne/sWVt/btO5/md/S7Tdve6X06xE/z0/w0P81P89P8ND/NT/PT
/DS/7Cs/zU/z0/xyT/lpfpqf5rf127vG3+4diZ/mp/lpfpqf5qf5aX6an+an
+Wl+2Vd+mp/mp/nlnvLT/DQ/ze/ZPd8/020ejZ/mp/lpfpqf5qf5aX6an+an
+Wl+2Vd+mp/mp/nlnvLT/DQ/zW/D0O1X1u7mp/lpfpqf5qf5aX6an+an+Wl+
ml/2lZ/mp/lpfrmn/DQ/zU/z665Oj0x2TsRP89P8ND/NT/PT/DQ/zU/z0/w0
v+wrP81P89P8ck/5aX6an+Y3vPXRe7rNH+On+Wl+mp/mp/lpfpqf5qf5aX6a
X/aVn+an+Wl+uaf8ND/NT/P78MCFS83JTvw0P81P89P8ND/NT/PT/DQ/zU/z
y77y0/w0P80v95Sf5qf5aX6r/713bG0nP81P89P8ND/NT/PT/DQ/zU/z0/yy
r/w0P81P88s95af5aX6a37Yn7nu/M3Imfpqf5qf5aX6an+an+Wl+mp/mp/ll
X/lpfpqf5pd7yk/z0/w0v1NP7nxgsrMQP81P89P8ND/NT/PT/DQ/zU/z0/yy
r/w0P81P88s95af5aX6a3+51D308O7EYP81P89P8ND/NT/PT/DQ/zU/z0/yy
r/w0P81P88s95af5aX6a3/2f9d249i8/zU/z0/w0P81P89P8ND/NT/PT/LKv
/DQ/zU/zyz3lp/lpfprfwtPzu27tduOn+Wl+mp/mp/lpfpqf5qf5aX6aX/aV
n+an+Wl+uaf8ND/NT/Nr3TDTaU4ux0/z0/w0P81P89P8ND/NT/PT/DS/7Cs/
zU/z0/xyT/lpfpqf5vfwoTeHdzxyPn6an+an+Wl+mp/mp/lpfpqf5qf5ZV/5
aX6an+aXe8pP89P8NL+V7Y9NT/RW4qf5aX6an+an+Wl+mp/mp/lpfppf9pWf
5qf5aX65p/w0P81P89u7vv+Oz/dfiJ/mp/lpfpqf5qf5aX6an+an+Wl+2Vd+
mp/mp/nlnvLT/DQ/zW/Ll3+90Rn5O36an+an+Wl+mp/mp/lpfpqf5qf5ZV/5
aX6an+aXe8pP89P8NL9/dny1dPXqxfhpfpqf5qf5aX6an+an+Wl+mp/ml33l
p/lpfppf7ik/zU/z0/8Drz15pg==
    "], {{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJx8u1dzm9uaoNdl3/jGVf4L/hW2r2yXXTUzdo1ruqd6uqu7p7vP6ZP32Ulb
e0vaylmiIsWcACIRRA4ECIIEQYIAiJxzzuHLOQMaA9hnt9vjKVc9VFG6ET48
73rDWuv773/59V/85r/6sz/7s+/+m9kff/GLW//rjRu/uPPv/7vZX/7yq+9+
/9uvfv2rf/PVzV//9tc3/sdf/tezfzTOfpZmP/PfGds5Y79gjnyM44pxBpjj
a8YVYlwR5iTKuGPMaYI5SzJnKcaTYc+zrDfHXuTZiwJ7WWR9Zfaqwl5VWX+N
DdTYYJ0NNtjrJhdqceE2F+lw0Q4X63LxHpfocck+lxpw6QGfHvKZIZ8d8bkR
n19QGAszigtKC8o/MRIqPzH8E+XBgr5QmtETij2h0J2T7wi5tpCd0eIzLT7d
5FNNPtngEw0+XudidS5S58I1LlTjrqtscPaBq/NP7qswFxXGW2Y8ZeasTJ+W
6ZMy7SpTx2XKWaKOSqS9RNpKhKVEmEu4qYwbypi+jB2WUW0Z1ZQRdRlWVmBF
BZJXwL0KuFsFtqvjzepovTZcrQ0/1QYf6/339d6bRud1o/2y2XrWbD5u1R+2
avfalTvt0q124ft27kY780079WUr/vtW5Net6180/X/XvPir5um/azj/VX0j
998y1nPGdsHYfYz9ijkKMI5rxhlijiOMK8qcxJiTBONOMqcp5izDeLKMJ8ec
5xlvgb0osZdl9nL2jLMnrbH+Ohto/GSHDbXYcJud2+lysd7CTp9LDhZ2htzc
zuhnO+M5hTH//1VT+Yk/CRIrwwUDobKwU/7JTndOoTO3k28LudbCTnNhp7Gw
U5/bida4SI0LV7lQdW4nUGH9s6Caffgyc1FmzkuMp8Sclmh3iT4p0sdFylmk
HEXqqEjaiqS1SFiKhKmIG4u4vojpipi2iB4UUXUJUZUQRQmWlyBZCdotgdtl
YLMMbJTHa5XRSmW4XBl8qPTfVntL1e6raud5rf201npUb9yv13+s1241Kjcb
5W8axS8b+T80cr+pZ35ZT/19LfnXlfifl+P/upD4X+K5/+G4+z89o83ntOWC
tvpo2xVtDzBH14wjxDgjjDPKHMcYV4I5STLuFHOaYU6zzFmO8eSZ8yLjLc2j
7qLCXlZZX429qrP+BhtossEWe91mQx023GEjXTba42J9Lt7nEgMuOeRSMzsj
bm5nzOd+UgPMKQJCaUF5QQWYq6mOxTmjBcM5lcGCvjgX1BNKP9sptH+20xTm
dhoLO3U+UePjNT5a5SJVLlzhQhXuusIGyqx/tupn0VWaxdj8WTxF5rRIuwu0
q0AfFyhHgToqUPYCaS2QlgJhLhDGAmEo4LoCfljADgqYpoCqCoiygOwXYFkB
3itCO0VwqwhuFIG14ni1OPpUGn4oDd+VBm9K/dfl3sty91m586Tcflhu3as0
7lTqP1Rq31WqX1fKfyyXflcu/qpU+Idi/m/zub/M5P5dPP9/BEv/u7v+P2t6
/9sSbTqnzRe0xUdbrmhrgLZd0/YQfRShHVHaGWeOE8xxknGlmZMM484ypznm
LM+cFefxdl5mvLPkUGUua4yvzlw1WH+TDfyznS4b6c3ssLE+Gx9wieHCzmhh
Z8zN7QB8/k9q+LkaUCiDP6sBhCogzqiNF4wWLARVF3YqPfEnO6WOUPzJTkvI
NRd2Ggs7dT5ZW9ipLuxUFnbKXLDMBUqsv8T6ivPk7C0y5wXmrMCcFuiTPO3K
0848fZSn7DnKliMtOdKcI005wpAj9Dn8MIdrc5gmh6lzqDKHKnKIPA/v5eHd
PLSdhzbz4HoeWM2PP+XHHwuj94Xh28JgqdB/Veg9L/SeFrqPC50HhfbdQut2
ofl9oXGjUPs6X/0iV/1dtvKrTPkfU+W/jZf/Klz+C3/1357W/42l/a/k/f/z
A23w0sYL2uSjzX7aEqCt17QtRNsjtD1KH8VpR4J2JunjNO3K0CdZ5iTHuGfP
UmTOSvN0fT7L21XmosZcNpirJuNvMYE2E+yw1x029JOdPhsbzOywczujhZ3x
wg6wsAPyBZAvgvxPaioLqnPEGvAn6uMFCztzBmJ1YWcuqCvO7bSFQutnO42Z
HSFd51O1hZ0qH6/w0QoXKXPhMhcqccESFyiyV7OiOSudBdZbmCfqWbyd5uiT
HH2co505+ihL2bKUNUuas6QpSxqzhD5L6LK4NosfZDF1FlNlUUUWlWcRWRbZ
zcLbWWgrC21kwbUssJIFlrPjD9nRu9zoTW74Ojd4mes/z/We5LqPct372c6P
2fbtbOv7TPNGpvF1uv5Fqv67RO1X8do/Rmp/d137a1/9L88af+5o/1/67r+V
Df58hdJ7Kf0FZfBRRj9tCtDma9oSoq0R2hal7XH6KEE7krQjTTsz9HGWds2e
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
3MjED0xC3yR2jWLHKLUMk6Z+WtdPqrpJWTcp6CY5nZTRSalDKX4oRrViWCsG
DwT/geDT8F4171HzbhXnUnIOJWtXsJZ91rTP6OWMVkZrZLRyj97fo+R71N4e
tSujdmTklozclJEbMnJNTqzKiRU5sSwnPsrxD/v4+3387T7+Zh9b2sdeK7BX
CuyFAn2uQJ8p0KdK9IkSeaxEHimRh0rkgQq5r4LvqeC7qrmauR01fFsN3VIv
7Gig7zULNXMWauYMHsQGD+P9R8n+41T/Sab/NNt7lu89L/ZelLovK91Xte7r
enep2XnT6rzttN/32h/67eVha2XUXBs3N8eNbaCxC9ZlUG0frimRqhqtHGCV
Q7ysx0sGomgiCxaqYKXzdibnYLNOLuPiUydCAFGHUU0cPUijBzlMW8K0Veyw
gR228cMefjjEDwH8EMIPUfwQxw8JVEciegrW06CeAQzs2MAN9fxAL/T0Qlcn
tnVS61BqHE7q2mlVOylrJwXtJHcgZQ6k1IEU14hRjRjWiEG14FcLPpXgVfEe
Je9WcC4F59jn7PusRc6aZIxexhzu0ZpdWrlLy3co2Q61t0vt7FLbu+TWLrmx
S67vkWt7xMoe8WmPWJYRH2X4exn+Toa/leNv5NhrOfZKjr3cx17so8/30Wf7
6NN99IkCfaxAHimQhwrkgRK5r4TvKeG7SvhHFXxnwU92fljw/ULQTc3CzkLQ
DW3/fqz/INF/mOw/SvceZ3pPcvPX6J4Vu8/L3ReVzsta51Wj87rZXmq333Tb
b3utd4Pmx2Hz06ixOm5sjOtbQG0HrO1BVTlcUSAVFVrWYKUDvHhIFPRkwUjm
TVTOQmetTMbOpo+4lJO/gBUBRBFGlHFElUJVufmhuLqCqRuYpo1puphmgGnG
uAbCNQiuxjANgR6QyAEFaWlQywBadnTIDrVcX8v3tEJHK7YPxOaB1NBMappJ
RT0pqScF9SSnljJqKamW4ioxqhLDSjGoFPxKwacQvAres8+79zmXnHPIOLuM
teyxpj1Gv8sc7jCaHVq5Te9vU3tb1O42tb1NbW2Tm9vkxg65tkOu7hAru8Ty
LvFxl/iwi7/fw9/t4W/28KU97LUMeyXDXsqwF3L0mRx9KkefyNHH++ijfeTh
PvJgH7mvQO4p4BlzO0r4jhK+rYJvqaAZczULbi7sfKeZ27lxMLdzL9a/n+g9
SPUepnsPs/MX6B4Xuk9KnaflzrNq53m9/aLRftlqv+q0XndbS/3mu0Hjw7Cx
PKqvjmvrQG0TqG6DlV2oIoPL+0hJgRZVWFGDF7RE/pDM6amskcqY6LSFSVnZ
pJ2LH83syPywPITIY8h+CtnPoooCqqigijqqbGHKLqYcYMoRpgQxBYIpMEyB
I0oCVpGQmgLU9FjNjDTsQMP11XxXzXfUQkslNlVSXSXVlJOKYlJSTAqKSU4h
ZRRSUiHFFWJUIYb2xeC+4N8XLuWCV857ZLxbxrv2OMceZ99lLbusaYfV7zCH
24xmi1Zt0fub1N4mtbNJbW9Sm5vkxha5vkWubZEr28SnbWJ5m/i4Tbzfwd/t
4G938De7+NIu9moXe7mHvdjDnu+hz2ToUxn6RIY+lqGP5MhDOfJAjtzfR+7t
w3f34R8V8J0Ft5XwLSX0g2rO9yropnrOXI0GvKGZ2/n2oHc3Pn8n616qez/T
fZDtPsx3HhU6j0udJ5X202r7Wb31vNl60Wq97DRf9ZpL/cbbQf39sP5xVFsZ
V9eA6gZQ2QLLO1BpFy7JkOI+WlBieTWe0xBZLZnRUWk9nTLSSROTsLBxKxe1
8RfQjh/eDcG7UWQvOT8alxUQWRmV1VBZE5V3UHkflY1QGYDJYEyGojIMkePw
PgkqKEBBjxX0UMkMlGxPyXUVfFshtBRCY1+s70tV+aQin5Rkk4J8kpNP0nIp
KZficikqE0MyMSgT/TLhck/w7vGeXd69y7t2OMcOZ99hLdusaZvVbzGHm4xm
k1Zt0Psb1N46tb1Oba1Tm+vk+ga5tkGubpIrm8TyJvFxi/iwRbzfwt9t42+2
8aVt/PUO9moHe7mDvdjFnu+iz3bRp3vo4z300R76UIbMeCBD7suRe/KFnX34
zj58WzHnlgL6QQl9r1zYUUHfzeyoF2o0MzVzOz/Guz8mu3dT3XuZzv1c50G+
87DYflRqP6q0H9daT+qtp83ms3bzebfxotd43a+/GdTeDWsfR9VP48oqUF4H
y5tgaQsq7sCFPSQvR3P7WE6JZ9VERkOmtVRKRyf0TNzAxkxs1MydQpteaPMK
2rqGt6LwdgLeziA7eWSnhOxUkZ0GstNGd3rozhDdAdAdCN1B0R0M3sWhPQKU
kWMZNZLRQznTl7M9OdeRc20Z35QJDZlY25Oqe1J5b1LanRR2J9ndSXpXSu5K
8V0psiuGdsXgrujfFS53BO8O79nm3du8a5tzbHH2Lc6yyZo2Wf0Gc7jBaNZp
1Tq9v0bvrVE7q9TmKrWxRq6vkatr5Mo6+WmdWN4gPm4Q7zeId5v42038zSa+
tIW/3sJebmMvtrHn29izHfTpDvpkB328iz7aRR/uIQ/2kPt7yD0ZclcG/yif
c0cO396Hb+3DP8zsKOZ2bioXdlTQjZkdNfitZs43B93bie6dZOfHdOdupnMv
175XaN8vth+UWw+rrUe15uNG80mr8bTdeNatv+jVX/VrS4Pq22Hlw6iyPC6v
AKVVsLgOFTahwjac30Vye2hWjmUUeFpJpNRkUkMltHT8kInp2YiBC5t4N7jm
hdavoPVraCMCbyTgjTS8mYM3S8hmFdlsIJttZLOHbA6QzTGyCSGbCLKJwlsY
tI0DO8R4hxztUINdur/LdHfZzi7X2uWbO0J9R6jtiJVtqbw9KW5PCluT7PYk
vS0lt6X4thTZFkPbYnBbvNoSLrcE75ZwtsW7N3nXJufY5OwbnGWDNa2z+nXm
cI3RrDGqVXp/lZatUjsr1OYKub5Crq2Qq6vkyiq5vEp8XCM+rBHv14l36/ib
DXxpA3+9gb/axF5uYi+2sOdb2LMt9Ok2+mQbfbyDPtpBH+4iD3aR+7vIvT3k
7h78owy+I4Nvy+fM7exD389QQDcV0HfKGeANFfites43Mzua7q1E53aqcyfd
uZNt/5ibv1B/r9S6X24+qDYf1psPG41HrcbjTv1pt/a8V3vZr74eVN4Oy+9H
pY/j0jJQXAELa1B+A8ptwdltJLOLZmRYWo4nFURCScbVVExDR7VM5JAN6Tkn
8MkNrpyDKz5wJQitRqDVOLSWhtdy8FoRXqvAa3V4rYWsdZG1AbI2QtZAZA1G
1lBoHQM3cGCTGG2Swy1qsEX3tpjuFtve4lpb3P9N012utbWAa9vetbWmtbPe
UtwhxN1dSEgICQkhaGkpdfeWFnd3l7gPHyNu88cHfdd3HNcenL+f+/EO5tyD
+fOBwtlA8WSgeNz/32H/f/v9/+32F7cHihsDxbWBwspAYWmgMN+fn+3PT/fn
J/pzY325n33Z733Zr73ZT72ZD72Ztz3p1z3pF870M2dqxJka7k4OdScHHIk+
R6LHkXB2J7q7Ew5n3O6M23rinT1xay9h6SU6+ghzH2Hqw439eFs/bhjA9QNY
6yCmG8S0DzDNA0z9AFUNocohVPEQlT9E5I8Q2SNEOoxIhhHxY/iiCx3hCCx4
chn/KcR7dhn3+WWcFwHx1uWNtmT38o5eduiTH/kUJ17FmVd57lG5PWqvW+N3
awOu1uC5IXRuDJ+ZI6eW6Eln7NgGHHWBR93QYQ980Ifs9yN7g+juELbzEN8e
JrYexzefJDaeJteep1ZfpFdeZZZeZ7+D9jGwawrqmoMci5BjFXZswt07cPc+
3H2EdJ8i3S6k24t0B5DuMNIdQ7ohxIEg3SjsxKAeHOglYr3xaF8i3JcM9aUC
fWl/X8bXl/X05dx9+fO+/Glf4aS3eNT732HPf/s9/+32Frd6ixu9xbXewkpv
YbG3MN+bn+3NT/XmJ3pzY7250Z7c957s157sJ2fmgzPz1pl53Z1+0Z1+1p0a
caSGHcmhruRAV7KvK+G0J7q7Eg5HvMsRt3fHbd1xqzNucRIdPYS5h2jvJUy9
uLEPb+vDDX24vh9r7cd0A5h2ANMMYupBVPUAVT5AFUOofAiRPUSkDxHJo8vE
w7DoMSx8/FtnBOZf6DyBeE8h7rPLOM8h9gu/aNsv2vGL93ySfZ/00Cs99spO
PPIzj8LlVnrcKq9L5Xdpgue64Jk+dGoMn7ZHTjqix9bYUSdwaAcPHNC+E97v
Qfb60N0BdGcQ2x7CNx8SG8Px9ceJtSfJ1aep5efppReZxZcXOp2/wM5J0DYL
2RYh2wpk34Ds27B9H7YfwfZT2O6C7V7EHkDsIcQeRewgYocROwp1YaADB7qJ
aHc84kyEncmgMxXoSft7Mt6erKcn63Lmzp35U2fh2Fk8chYPuv/b7/5vt7u4
5SxuOItrzsKKs7DoLMw787PO/JQzP+HMjTlzo925793Zr93ZT92ZD47MW0fm
tSP9oiv9rCs10pUatieH7MlBe7LPlnDaEt22RJc9brfHbV3xzq641UFYuomO
bqLdSZichLEHb+vBDb24vhdv7cN0fZi2H9P0Y+oBVDWAKgdRxSAqf3ARIhv6
rfMQET9CRI9g0TAsHIYFj2H+hc4IxHsCcS96CnGeQeyLnl8uGwh3faI9n/jA
Kz7ySo490lOP7Nwtc7nlHpfC51IGztXBM23oVB86aQufmCLH5uhRR+zQChzY
wP0uaK8b3nUiO73odh+2NYBtPsA3hoj1h/G14cTK4+Tyk9TS0/TCs8z8i+w3
oOMXYJkELbOgZQG0rkDWdci6DVn3IOsh3HkCd57DVg9s9cPWEGyNwlYAtsKw
FYE6UdCGxex41E5EuuKhrkTQkfQ7Uj5H2uvIuB1ZlyN35sifOvLHXYXDruJB
1397Xf/tdBW3uoobjuKao7jsKCw6CvOOwowjP+XITzhyY47cqCP3vSv7pSv7
qSvzoSvz1p55bU+/sKef2VMjttSwLTVkSw52Jvs6E87OhMOa6OqM223xTlvc
ao9b7ERHF2F2EO0OwtRNGLvxNiducOL6Hry1B9P1Yto+TNOHqftRVT+qHEAV
A6h8EJUNItIHiGQIEV/0EBE9hIWPYMHwZfzHMG8E4o5c6nCeQuyLnoGs5z7+
tk+w6xXue4UHl/st4hOP5NQtOXdJ3S6Z91zuO1cEzlTBU23opDV0bAgfGyNH
7dFDc+zAAux3gnt2aLcL3ulGtnvQrV5ssx/fGCDWHhCrQ/GVh4nl4eTi49TC
SHruaeZTzPQNaP8JtE8A7TOgeQE0L4PmddC8BXXsQh0HUMcx1HEOdbjhDh9s
DsLmCGwGYDMEm2GoAwUsWMyKRzuJcGc8ZEsEbEm/LeWzpT22jNuePbdlz2y5
E1v+2FY4tBX3bcW9zv92Ov/bshU3bMVVe3HZXli0F+bthRl7fsqen7Dnftlz
o/bcd3v2iz37yZb9YMu8tWVe29IvOtPPOlMjnanhztSQNTloTfZZE05LwmFJ
2C1xmzXe2Rm3dsY7bITZRrTbCVMXYewi2hy4wYHru/FWJ65zYtoeTNODqXsx
VR+q7EMV/ai8H5UN/NYZRCQPEPEDRDSECC90HsKCRzB/GOZd9PhShzMCsZ9c
6rCegsxnPt6Ol7/r5e97BIce4ZFbeOIWnbnE5y6J+1ziPZf6z+SBU1XwRBM6
1oWO9OHDtsihKXrQHtvvAPas4G4ntGOHtx3IVje60YOt9+Jr/cTqQHzlQWJp
KLH4MLkwnJp7nJ4dyXyMtX2Ltf0EjBOAcRowzoPGZdC0Bpo2QdMuaDqATMeQ
6QwyuSGTDzIFIWMYMsYgIwQZYdCEAO1o1IxFOvBwRzxoSQQsSb816bWmPNa0
y5o5t2ZPrbkTa/7IWji0FvYtxV3LfzuW/7YsxXVrcdVaXO4sLHYW5joLM535
qc78RGf+V2dutDP3vTP7pTP7qTP7vjPz1pp5bU2/sKafWdMjltSwJTVkSQ5a
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
Eiei5JEodShOHYjTe+LMrji7Lc5tivMb4sKauLgqLi5LiovS4ry0MCMrTMkL
E/L8mCI/qsh/V+a+KnOfldkPyuw7VfaNKvNSlXmuSj9VpR+r0o9UqQeq1IAq
2atKOlXJLlXCpkpYVHGzKm5UEXoV0aomdBpCq8U1Olzdiqv0uNKAKdowuRGT
mTBpOyppR8VmVNSBiiyo0IoIOhG+DeHZEW4XzHHA7G6Y7fw/HUYfRO+HaP0g
dQCkDoKUByB5CGh5CJAeXY4hkw5OWo5OWk6OyWdHZNchxX1A8+wzvHss3y7H
v8MLbAuCW6LQhji8Lo2syaKriuiKMrakBhY14IIOmmuFZ/XItAGdMmITJny8
nfhljo92JH5Yk986Uw+DzCdB5osQ802I+SHE/BJi/ggzx8LMyTBzNsxciDCX
I8z1CHMrwtiNMA4ijOMI4yzKcEfpvig9GKVHovRomBELMYEgG/JzYB8H8XJR
Nw9z8fAzPnHKj58IEkeC5KEwtS9M7wkzO8LstjC3KcxviAprosKKqLgsKi6K
ivPiwoykMCUtTEjzv2T5UVn+uzz3VZ77pMh9UGTfKbKvFZmXisxzZeaJMv1Y
mX6kTD1QpgaUyV5l0qlMdikTNmXCooyblXGjktArCZ2S0KoIjRpXa3CVFlfq
cEUrJtdjMgMmbcOkRlRiQsXtqMiMCjsQgQXhWxFeJ8K1IRw7zOmC2Q6Y1Q0z
nRCjB6L3QrS+/9OhDILkB2DLEEB6CDQ/Om3eO2k+OGk+ulwUJ50dtrgOye59
mmeP4d1l+XbY/m1uYIsf3BSGNkThNUlkVRpdkceWFbFFFbCgBuc10KwOnmlF
pvTopAEbN+K/TMTP9sQPc/JbR+qLJf0wSH8SpL8I0t8E6R9C9C8h+o8Q/VeY
Phmmz4TpC2H6cpi+FqFtRmg7EdpBhHYcoZ1FqO4I1RehBiLUcIQSDdNiIToQ
YIB+JuRjIR426uZg5xz8jEuccuPHvMQRL3nAT+3z07v8zA4/u8XPbQpy64L8
mqCwIiguC4qLwuKcsDAjKkyJCxOS/C9JflSa/y7NfZHlPslyH2TZd/Lsa3nm
pTzzXJ55Ik8/lqcfKlIPFKkBRbJXkXQqkl2KhE2RsCji7Yq4UUHoFYRWQWiU
uFqFq9S4UoMrtbhCh8lbMZkekxowSRsqNqIiEypsRwVmhN+B8CwIz4pwO2GO
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
yBw3OsOPTQuASSE4IYbGJPBPKTIqQ7/Lsa8K/LOK+KSOf9Ak3mmTXb7qXl/1
A1/1sK/6qb/6pb/6rb/6o7/qS6DqR6BqLFA1GaiaCVQtBKuWg5VrwcrNYOVu
sPIgWHEcrDgLVbhDFb5QeSBUHgpUhv1VEW91zFMDuGvB8zrorB4+aUCOG7Gj
Rvygidhviu82J3aak1uk1CYpvU7KrLVkVlqyyy25RXJ+gVyYIxdnycUpSmGC
WhijFX7S898Z+a/M/Gdm7iMr946dfcPOvuJkn3MyTzmZEW76ETc9xE0P8lJ9
vFQPL+ngJe38hJWf6OAnTPx4Gz/eyic0AkIpwOUCXCrEJSJMLMZEEkwowwRy
VKBA+UqUp0a5GoSjRdg6hNWKMPUwow2mG2GaCaa2Q1QzROn4rdMJkmxgsx1s
6gIau4EGJ1DfA9T1xmr7YjUDBxUHB5VH+5Une5WXOtt1rq0G9+aFTrN3rcW3
SvGvUANL9OAiI7TACs+xI7Pc6DQvNsUHJgTguAj6JYZHJcgPKfpNhn2R45+U
xAdV/J068UaT7PJW9voqB32Vw77Kp77Kl/7Kt/7KD/7KL/7KH4GKX4GKyUDF
TKBiPlCxHKxYC5ZvBst3guX7wfKjYNlpsMwVLPMGywLB0mCgPOyviHirop5q
wFUDntdCZ7XwSR1yXI8eNmAHDfheI7HbGN9uSmw1JTebUuvN6bXmzEpzdpmU
WyTl50mFOVJxpqU4RS5MUApj1MIoLf+dnv9Kz39m5D4wc++Y2Tes7EtW9jk7
85SdecxJP+KkhzjpAW6qj5vq4SYd3KSdl7DyEh28hIkXN/DirTxCwyeUfFzG
xyV8XCzERCJMJMaEUkwgQ/lylKdAuUqUo0bYGoSlRZg6hHGhY4DpbTDNCFNN
EKUdIndALRaIZAWbO8EmG9jYBTQ4gPpuoM4J1PbGavpi1f0H5Qf7FUd7FSe7
lWc71efbta6tevdGo2f9QofkWyH7lymBJVpwgR6aZ4ZnWZEZTnSKG5vkAeN8
cEwI/RTBP8TIdwn6VYp9luEf5cR7ZfytKvFafaFT0eutGPRVPPKVP/GVv/CV
v/GXf/CXf/GXf/eX/wqUTwTKZgJl84GypUDZWqB0M1C6EyzdD5YeBe+fBu+7
gve9wfuB4P1goDTkK4t4K6LuypirCjivhk5r4JNa5KgWPazDDurxvXpityG+
3ZDYakhuNKbWG9OrTZmVpuxSU26xKT/fXJhrLsw0F6dIhYmWwhi5MErJf6fm
v9Lyn+i5D/TcO0b2DSP7kpl9zsw8ZWUes9KP2OkhdnqAnerjpJycpIOTtHES
Vm7CzE2YuHEDN97KJTQ8QsnDZTxcwsPFfEwkxIQiTCDG+FKUJ0O5cpSjQNkq
hK1GWBqEqUUYrTBdD9MMMLUNphghcjvUYoZIHWCzBWzqBBttYIMdqO8C6hxA
rTNW0xOr7o1V9R2UHeyXHe2Vn+xWnG1XnW/VuDbr3BsNnrUm72qzb6XFv0QJ
LFKD8/TQHCM8w4xMs6OTnNgEFxjjg78E0KgQ/i5CvonRLxLskxT/ICPeyeNv
FIlXygudsh5v2aC37JGv7Imv7IWv7I2v9IO/9LO/9Lu/9Je/dMJfOh24Px+4
vxS4vxq4vxEo2QmU7AdKjoIlp8F7ruA9b/BeIHgv6C8J+UrDnrKouzzmqgDO
KsHTKvi4GjmqQQ9rsP1afK+W2KmLb9clNuuTG/WptYb0akNmuSG71JhbaMzP
N+ZnGwszTcWppsIEqfCrpTBKzn+n5L9S8p+ouQ+03Dt69jU9+5KRfc7IPGFm
HjPTj5jpB6z0ACvVx0452UkHO2ljJ6ychJmTMHHiBk5cxyE0XELJxWVcXMzF
RDxMKMAEQowvwngSlCdFuTKUI0fZSoSlQphqhKFB6DqY1gpT9TDFAJEvdExQ
SztEMv/WsYKNnWCD7f/X6Y7VOC91Kvv2Sw/2So92y052ys+2K8+3ql0bte71
es9ao3el2bdM8i+SAwuU4DwtNEsPzzAiU6zoJDs2zgF+8cCffOiHAP4mRL6K
0M9i7KMEfy8l3srir+UJi6e0y1va470/6L3/yHv/ie/+C9/9N7777333P/vv
f/eX/PSXTPhLpv0lc/6SpcC91cC9jcC97cC9vcDdw8Dd08BdV+CON3DHH7gT
9N8L+UrCnvsRd1nsvBw4qwBPK6DjSvioCj2oxvar8d0aYqcmvl2b2KxNbtSl
1urSq/WZ5frsUn12oSE335CfbShMNxSnGgvjTYVfzYVRUv57S/4LOf+JkvtA
zb2lZl/Tsi9p2ef0zBN65jEj84iRfsBMDzBTvcyUk5V0sJI2VsLKTpjZCSM7
bmDHdWxCzSGUHFzGwcUcTMjFhDxMIMD4QpQnQrkSlCNF2TKUpUCYSoShQuhq
mK6FaTqY2vpbpw1qMUIkE9RsBps6wEYL2GAF6m1AnR2o7QJqHLFqZ6yqJ1bZ
u3//YO/+0W7pyXb52Vbl+eZvnbU6z2qDd6XJt9TsX2wJzJODc9TQDC08zYhM
MqMTrNgYG/jJBUd50Hc+/FWAfBGin0TYBzH+TkK8kcZfyZIdnhK7p6THWzLg
LXnkLXniLXnhu/fad++9795n371vvns//ffG/Xen/Xfn/HcX/XdXA3c2Ane2
A3f2AncOA7dPArfPA7c9gdv+wO2A/07IezfsKYm47kfPS4GzMvCkHDqugA8r
kINKdL8K260idqrjW9WJzZrkek1qrTa9Uptersss1mUX6nJzdfnZ+sJ0fXGy
vjDeWPjVVBhtzn8j5b+05D+15D6Qc28pudfU7Etq9hkt84SWeUzPPKSnHzDS
A4xULyPlZCa7mEkbM2lhJcyshJEVN7DiOhahZhNKNi5j42I2JuRgAi7G52M8
AcoVohwxypagLCnCkiNMBcJQXurQNDBVC1N0MFkPtRggUhvUbISa2sFGM9jQ
AdZbgbpOoNYG1Nhj1Y5YVXes0hmt6N0rOdgtOdq5f7pddrZVcb5R5VqvudRZ
qfcuN/oWm/0LpEudWUpohhqeokcmGNFxZuzXhQ4H/MGFvvHgL3zkswD9KMTe
i/C3EuK1NPHyUuee3XO3x3N3wHv3offuiPfuc+/d17677313PvvufPPd+em7
M+6/M+2/Pee/vei/veK/veG/te2/tRe4dRi4dRK4eR646Qnc9AduBny3gt47
Yc/diOte9LwkdnofPCmFjsvgw3LkoALdq8B2K/HtSmKrKr5RlVivTq5Wp1Zq
0ks1mcWa7Hxtbq42P1NbmK4rTtYVxusLvxoKPxrz35ryX5rzn0i59y25t+Tc
a3L2BSX7jJp5Qs0M0zIPaekHtHQ/PdVLTzkZyS5G0sZIWhgJMzNhZMb1zLiO
SahZhIKFy1i4mIUJ2Bifg/F4GJePcgUoR4SyxShLgjBlCEOO0BUITQVT1TBF
A5O1cEsrRNJDzYYLHbDJBDa2/9axAHVWoLYTqLbHqrpilY5YhTNa3rN372D3
3vFOyclW6elm+dlG5flatWu11r1S71lq8C02+eebA3MtwRlyaJoanqRFJujR
MUbsJwsYZYPfOdBXLvyZh3ziox+E2DsR/kZMvJIkXkiTHe47ds8dp+fOgOfO
Q++dEe/t597br7233/tuf/Ld/ua7Peq7Ne67NeW/Nee/tei/ueK/ue6/ue2/
uee/cei/ceK/cR644Qlc9/mvB3w3g95bIfediOtu9Oxe7LQEOLkPHZXCh6XI
fhm6V47tlOPbFcRWZXyjMrFemVytSq1UpZeqM4vV2fnq3FxNfqamMFVTmKwt
jNcVftUXfjTkvzXmvzTlPzbn3pNyb0m51y3ZF+TsM3LmCSUzTMk8pKYfUNP9
tFQvLdVNT3bRk530pIWeaGckjIy4nvFbh0komLiUiYuYmICF8dkYj4NxeSiH
j7KFKEuEMsUIQ4rQZQhNjtCUMFUFU9QXOlCLDiK1Xuo0tYGNRrChHaw3A3Ud
QK0FqLnQscWq7Jc65d3RMufu3YOdu8fb90627p9ulJ+tX+hUuVZq3Mt1nqV6
70Ljpc4sKTjTEpqihCeokXFa9NeFDhP4wQK/saEvHPgTF/nIR98LsLdC/LUo
/lKceCa50Llt99x2em4NeG499Nwa8d567r312nvrnffmJ9/Nb76bo76b476b
U74bs74bi/4bK/4b6/7rW/7ru/7rh/7rJ/5r5/5rHv81n/9awHc96LkZct8K
u25Hz+7ETu8Cx/fAoxLo4D6yX4rulWI7Zfh2ObFZHt+oSKxVJFcrU8uV6aXK
zEJVdr4qN1uVn6nOT1UXJqsL4zWFn3WFH/X5bw35L435j0259025t825V6Ts
i5bss5bMCDkzTM48pKQHKel+aqqXmuqmJrtoyU5a0kJLtNMTRnpcT49rGYSa
QSgYuJSBixgYn4nxWBiXjXG4KJuHsgQoU4gyRQhDgtClCE2GUBUwRQmTVXCL
BiJpoWYd1KSHGg1gQxtYbwLr2oFaM1BjAaqtsarOWKU9VtEV/X86dw537lzq
bF7olJ2tV5yvXuhUu5dqPYv13vkG31xTYKY5ON0SmiSHJyiRMVr0Jz02ygC+
M8GvLOgz+1LnAw99x8feCIhXwvgLUeKp+ELnpt190+m52e+5+dBzc8Rz47n3
xivvjXfeG5+8N756r4/6ro/5rk/5rs/6ri/6rq34rq37r235r+36/z3w/3vs
//fMf9Xtv+rzX/V7rwU910Pum+HzW9Gz27GTO8DxXfDoHnRQAu+XoLv3sZ1S
fKuU2CyLr5cl1sqTq+Wp5Yr0UkVmoSI7X5mbrcxNV+anqgoTVYWx6sLPmsKP
2vy3uvzn+vzHhtz7xtybptyr5uyL5uwzUmakJTPcknlITg+S0/2UVA8l1U1J
dlGTndTfOrREGy2up8W1dEJNJxR0XEr/rcPAuEyMw0I5HJTNRVl8lClAGEKE
LkZoEoQqhSlymKyAW1QwSQ01a37rtEKN+t86RrDOdKlT3QFUWWKVnbEKW6y8
K1rmiJZ279w+3L59vHX3ZLPkdL30bK38fLXStXyhU+NZqPPO1/tmGwMzTcEp
UmiyJTxOjvyiRn/SYj/owDcG+IV5qfORg7znom95+Gs+8VIQfy5MtLlvdLhv
2Nw3nO4b/Z7rQ57rjz3Xn3muv/Jef+e99sl77av32qj32pjv2pTv31nfvwu+
f1d8/677rm75ru76rx74rxz7r5z5r7j9V3y+K37v1YDnWsh1PXx+I3J2K3Zy
Gzi+DR7egQ7uwnv3kN0SdKcE37pPbN6Pr5cm1kqTK2Wp5bL0YnlmoTwzV5Gd
rchNV+SnKgsTlYWxqsLP6sKPmvzX2vznuvzH+tz7htybxtyrpuyLpuzT5sxI
c2aYlBlqSQ+2pPvJqR5yqpuctFOSnZRkBzXRTk20UeN6alxLI1Q0QkHDpTRc
RMf4dIzLwDhMlM1GWRyUyUMZfIQuQGgihCb+rSODyXK4RQmTVFCzGmrSQo06
sEEP1hvAujaw1gTUtAPV5t861li5LVZmj5Z2Re9379w63L51vHXnZOPe6fr9
s9Wy85UK13KVe/FCp9Y7d6HT4J9uCk42hyZI4bELHUp0lBr7TgO+MsDPTOgT
C/7ARt5x0Ddc/BWPeMGPPxMk2lzXO9zXbe5rTve1fve1Ic+1x55rzzz/vvL8
+87770fvv1+9/456r455r076rs76ri74riz7rqz7rmz5ruz6/jnw/XPs++fM
/4/b/7fP94/feyXg/jfkuhY+vx45vRE9uQkc3QIPb0MHd+C9u8juXXT7HrZ1
D98oIdbvx1fvJ1ZKk0ulqcWy9HxZZq4sO1Oemy7PT5YXJioKYxWFn1WF79X5
rzX5z7X5j3W5d/W5Nw25Vw3Z543Zp02ZkabMo+bMECk9SEr3taR6WlLdLSk7
OdlJTnZQEu2URBsl3nqhQyVUVEJO/a1Dw/g0jEPH2AyUxUKZbJTJRRk8hM5H
aEKEKkIoEpgshVtkMEkBNyuhJjXUqIEatGB9K1inB2vbgBojUG0CqsxAZUes
whIr74yV2aL3u6Iljp2bh1s3jzdvX+qs/dZZLnctVboXqz3zNd7ZOt9MvX+q
MTjZFBonhX+1RH6Soz8osW804Asd/MyAPjLh9yzkLRt7zcFfconnvPhTfsLg
+tfs+tfm/tfp/rff/e+Q++pjz9VnnquvPFffea5+9F756r3yw3tlzHtl0vvP
rPefBd8/y75/1nx/b/n+3vX9feD7+9j315nvL7fvL6/vL7/3n4D7StD1b/js
WuT0evTkRuzoJnh4C9q/Be/dRnbuoNt3sc27+MY9Yv1efLUksVKSXLqfWryf
ni/NzJVmZ0pz02X5ybLCRFlhrLzws6LwvSr/tTr/uSb/oTb3ri73pi73qj77
vCH7tDEz0ph51JQZakoPNqf7SKkeUspBStlbktaWZAc5YSIn2sjxVkpcSyFU
FEJOwSVUXEjF+FSMQ8XYdJTFRJkslMFB6VyExkOoAoQiRMhiuEUCky505FCz
AmpSQY3q3zo6sK4VrDUANW1AlQmobI9VmGPllliZNVp6oWOPlnRt3zjcunGp
s373dK3kbKX0Umexwr1Q5Zm70Kn1TV/oNAQnGkNjzeFfpMhoS/Q7JfaVCnyh
gZ/o0AcG/I6JvGFhr9j4Cw7xjBt/wrvQuWp2XbW5rna7r/a7rwy5rzx2X3nm
ufLKc+Wt55+Pnn++ev/54f1nzPv3pPfvGe/fC96/l31/rfn+2vT9tev788D3
57HvzzPfn27fH17fn37PXwH3P8HzK6Gzq5HTa9Hj67Gj68DBDWj/Jrx3C9m5
jW7fxjbv4Bt3ibW78dV7ieV7yaWS1EJJer4kM3s/O3M/N1WanywtjJcWxsoK
o+WF7xX5r5X5z9X5DzW5dzW5N7W5l3XZ5/XZpw2Zxw2ZR42Zocb0QFO6rznV
05xyNKfspKSVlOxoSZhaEm0t8VZyXEMmVOTfOhRcSMF4FIxNxVg0lElHGUyU
zkZpHITGRah8hCJAyCK4RQyTpHCzDGpSQI1KqEEF1WvAOi1Y2wrW6IFqA1Bl
BCpNv3U6YqXW6P3OaIkteq9r+/qlzsatk/U7p6v3zlbuny+VXerMV3rmqr0z
Nb7pOv9kfXD8Qqcp/LM58qMl+o0c+0oBPlPBjzToPR1+y0BfM7GXbPw5h3jK
jY9wL3SumF1XbK5/ut3/9Lv/GXL/89j9zzP33688f7/1/P3R8/dXz18/vH+N
ef+a9P414/1zwfvnsvfPNe+fm74/dnx/HPj+OPb9ceb7X7fvf73eP3yePwPu
v4Pn/4TOrkROrkaP/40dXQMOroP7N+Ddm8jOTXTrFrZ5G1+/Tazdia/eSSzf
TS7dTS3cS8/fy8yWZGdKclMl+cn7+fH7hV/3C6Nlhe/l+a8V+U+V+Q9VuXfV
uTc1uZe12ed12af1mcf1mUcNmaGG9EBjuq8p5Wz6rdOctDYnO0gJEylhuNBp
iWtaCFULISfjEjIuJP/WoaAsKsqkoQwGSmehNDZC5SIUHkLmwy1CmCSCmyVw
kxRqlEMNCqheBdapwVoNWKMDq1uBKgNQ2QZUmGLl7bEyc6zUEr1vjd6zRe/a
t64dbl4/3rh5svZbZ/lCp9S1UH6pM1t1qTNV65+40GkI/WoMj17okKLfWmJf
yMAnCviBCr2jw28Y6Csm9oKFP2MTTzjxxxc65/+YXX/bXH93u/7uc/895P77
sfuvZ+6/Xnr+euv566Pnzy+eP394/vzl+XPS+8eM948F7x/L3j/WvP+76f3f
He//7nv/59j3P2e+/3H7/sfr/R+f54+A68/g+d+h03/CJ1eix1djh/8CB9fA
vevQ7nV45wa6dRPbvIWv3yLWbsdXbieW7yQX76QW7qbn7mZm72Wn7+Wm7uUm
SvLjJYVfJYXR0sL3svyX8vynivyHyty7qtzr6tzLmuzz2uyTuszjusyj+syD
+vRAQ7qvMeVsTDmaUrampLUpaW5OmJoTBlK8lRTXkAjlhU4LLmnBhS0Yj4yx
ySiTgjKoKJ2O0pgIlYVQOAiZ+1tHAJOEcLMYbpJAjTKoQQ7VK8E61W8d7W8d
PVBpAMqNsTJTrNQcu98RLbnQ6YzcsW/9e7h57Xj9Quf26crds+WS88ULnTL3
XMWlznS1b7LGP1EXHKsP/bzQaYp8b45+JcU+twAfKeB7KvSWhrymoy8Z2HMm
/pRFjLD/P7rrs6+pLO738Ls4MxaaiiJK772n9x56b/be66gzjmMZu6ioqKhY
UVEUlCYoiqKQZO+dggqk7J1KTeKjs/aCzDjnPvdruD7f3/qvsdo1QCfzsCbz
mCbzpCbzrCazRptxRZtRp82o12Y06NIf6NIbdelNuvRmXVqrLq1tKK1zKK1n
KLV3KLVvKLV/KGVgKEU5lIIOpWiHkoeGUr5q075p0ofVGSNo1ihC0SupRgXN
NEjHv9CJzwzzJ6blI8v2gWV/z3a844y95Yx3cyfecCe7eFMdvOl2nvM139nK
d7UI3C8EP5oFP54JfzwVuxsl7odS932Zq0Huup3tqs9x3sh1XstzXsmbvpwP
dQqmzhROniqc/Lto8lgR1Cke/714/EDJ2P6SsT0ljp2ljm2l9i2lUKfMtrrM
uqLcuqLCWl1lrVphqVxpqVhtKV9jKVtnLl1vLtloLt5kLtpCFG4lCrYT+Tvw
vJ147m48Z48pe59Jvt8kO2CUHoQ6fxiEfxoERwx8oHOsj6b4AHRYyDsO+paH
dQvUb0SaTqAj1bXJh15lkzov84abgU7haFOR/kmxobHU+BDolOP3KoiGSsvt
Kmt9te36Cvu1lY4rq8b2qDMOqDMOqzOOaTJOatLPatJrNOm12vQ6bXq9Nq1B
m/ZAl9aoS2vSpTbrUlt1qW261M6hlJ6hlN6hlL6h5P6h5IGhZOVQMjqUpBlK
GtIlf9WmfNOkDWPpI2jmqCpLr6QYFVTTABX/QiP66eZPDMtHpvUD0/ae5XjH
GnvLHu/mTLzhTHZypzq4U23c6dc8ZyvP1cJ3v+D/aOb/eCb48UTkbhS7H0rc
96WuBpnrttxVn+28nuO8luu8kjt9KW+6Jn/qfP7UmYLJUwWTJwonjxVO/FU0
cbho/BDQKR7bVwx1ShzbSuybgU6pbV2pbXWpdUWZtbrcWlVpray2VKywlK+y
lK22lK41l6wzl2wwF28kijYThVuIgm1E/naos4vUke81yfabpL8ZJQeN4kNG
EdA5bBD8aeD9pece66MqPtBVvUxSpwfo8NVdQk2nWNsu1b2WkTotOd9e5A43
5488Kxh9Wqh/DHRKjA9LTffL8LvlxJ0Ky61K680q2/Vq+9UVjtqVQCf9gDr9
sDr9qDr9pCbtrCatRpNWq0mr06bWa1MbtKn3tamNupQmXUqzLqVVl9KmS+7U
JXfrknuHkvqGkvqHkgaGkpRDiehQomYoUadL+qpN/qZO/Y6ljaDpo6oMvTLL
MJhlGqDgX6hEP838iW7po1s/MGy9TPs7pqOHNdbNGu9iT3SyJ9s5U22c6Vdc
ZyvX9ZLnfsH78Zz3o4n/44nQ3ShyPxS770lcDVLXbZnrptx5Pdt5Lcd5JWf6
Uu50Td7UubypM/mTp/InTxRMHiuYOFI4cbhw/FDR+IGisX1FY3uKHTuLHduK
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
OgFDgzM6y4f7g0Y+BY9+DDF8CCV13s3oRJjfREKdKFt7NNSJgTqxEy+AThzU
iSd1HidAnUSok+xuSPHoZLiuZTqvZDkvU37SoU+dZACdqWPMySMsqMOGOhyg
M76LC3V4UIcPdQS2agHUEVqLhFBHZM6WmOUyqJNDSPIIcQEhKsKFxbigFOeX
m3iVpA57hZG1yshcA3XWG6gb9ZTN+qyt/+rEkTqvklUtP+tQSZ0HzG/3PDo3
efrrUKcW6IiJC1LLWZn1tNz2d7ZjrTJws3LpDtVSqBPwpyrgOBJwitRZcglZ
chVdcgNdfBtdDHX8n2D+QOcltugVtqgDWwR03mELP2ALP6kXenQWAB0NAnUU
QGcpqfN5Vkff949OGP42nOie0Ym0dszoRDteAZ0YqBNL6jyLgzrxUCfB/RDo
JHp0Ul0301zX06FOpvNylvMiZfoCdfocDerQp04wPDosqMMmdfZySJ0dXKjD
gzp8+yq+bYXAVimwlgmtxUBHaCF1xGa51CyTQ51cQpxPiAqhTgnOLzNxK0yc
Kqiz0shcbWSsNdBmdDbpM7foM7aNpu3oioY6Cf/VydI8puoeAR0GqXOHPXwL
6tTxDVeFpssi/KLYfF5iOSu1npLZT5A6S4HOTmXAPlXAIVJnyXFkyWlkyXlS
Z/FVdDHU8b+H+j8COuii59gioPOa1FnYjS2c1cEWDKgXKNULUKCDLoQ6i4HO
V6DzJfD752XD/ctHPwbp+4INH0KMvaGkTg/QCTe/ibB0Ap1IW3uU/TXQiSZ1
XsZAnVioE+d8AnTioU4C1ElyNyS7b/2jk/EfnbPU6dM0jw5j8ggT6rCgDhvq
cKAO17EZ6PBIndVAhw91BNZigaUA6AjN2SKzXGKWyQhpNtTJI0QFuLCI1OGV
mrjlJk6liV0NdVYZ6WsMtHUG6gZ9FtDZrM/YOpq2ndSJhTpJqpYUpDkNe5ah
fjqjQyN17jKhDmf0BqljvCIgdWqgzhmp9STQkTvWKQO2KAOgzpJDqiVHVEtO
kDqLzyOLLyOLryH+N1H/O6j/fXTRI3TRU3RRM7awBVvYhi3sJHUW9GIL+rAF
/UAH81Oq/VDMb1ZHCXSWfB3w6Hzy6LyHOm+BThip0wV0IkidNqATReq0REOd
mMnnQCcW6sSROo/ioU6C+26S+w7QSXHdTHVdT3NdS3deyXBeznRezJq+QPHo
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
z3K8O4h4E2TuDLZ0hFjbQ2xA59U/OuHjzUAnAupETj35SedBNNSJ+a9O0v/Q
SZ8+kwF1MqeOZ00dpUweoXh0aKTOXvqszjYGqbORSeqsYZE61WxbBdtayrEW
cSz5HEvOjA6PEAsIkYgQSgiBFOfJcW4OzskzsQugTrGRUWqklRuplQZKtSFr
pT5jtT59rT51fUfYl9eRUCdO9RzqPIY69zOH7mZ9vQ11rjNGr3p0zvOIM3zL
SaH1uMj+lxgcbAs3KRbsUCzYq/Q7qPT7U+l3XOV7WuV7XuV7WeVzDfG5ifjc
QbzvI96NiHcT4vUC9WpFvdpRry50/lt0/nt0/kd0/hd0ngKdh2DzUMRLDXQU
vtpBv6GBhV8/e3T6lox+CNC/X2p4F2h8O6OznOia0Qm2toXYXofaX4WSOi/D
xl4AnXCoEzH1FOhEQp0o18MZnegfd4FO7P+ik+q8kObRyfDoZJE6hymTv1Oh
Do3U2U0f3wl1tjBInfVMUmcVy1bNgjpsazHbUgB0OGYZxyzhmsV8QiQkhGJS
hy/Dudk4J9fEzjexCk3MIiOjxEgrM1IrDJQqQ9YKQ8Yqffoafeq6dlJnAOi8
ADoJ/9FpgDo36cN1pI7hMttYw8XP8YjTfMvfAusxkb1qcMFaxYLNigU7FX77
lH6HlL5HlL4nVL5nVD41Kp9alU8d4l2PeDcg3g8Q78eI1zPE6yXq9Qqd34HO
f4POf4fO/4DO+4TOAzpKoIPOw4COktTRDfgNfYE6n/y/f1w8AnTeB+h7PTrd
y/A3MzpBlvYZnRCg42gJG/tH51nEZNM/OpHOR0AnakbHDXTuAJ04d32860aC
qy7RdTXJVZvsvJTyk066RycT6mTN6hykTvwGdGhQhz62HepsYpA6a5lAx76C
Zatk2cpmdNiWXI5ZDnQ4ZjGPEAkIoYgQSHC+FOfKcU4Ozs4zsQqgTrGRXmqk
lhsolYasakPGSn36an3q2lmd6Fmdp0lAR/MwTXs/g9S5BXRoI0DnCstwiW28
wMHP8syn+JYTAttRkb16cME6hd8Whd8uhd9+pe8fSt+jSt+/VT5nVT4XVT5X
VN7XVd63EO+7iNdDxOsJ4vUcmd+Czn+Nzu9E53Wj83rReX3ovH503gA6V4XO
RZF5mIrU0Q56dPoXff/kPwx0Pnh03gYaewJndTqDzB0enVch9lagEwp1wsaf
A51wqBMx9ThyuvEfnSj3PY/Orf9NJ3X6XJpHJwPqZHp0KFCHOrGPNr6HBnXo
Y1uhzgaGA+isZpI6VSxbOctawrYWsi15bEv2jA6XEPEJoZAQiAm+BOfJcE42
zs41sfJNzEITo8hILzFSywyUCkNWlSFjhT59lT5tTXvol9cRAy1Q5xnUaUwh
de5lDN3J+gZ0btBGrjFGa5mGi2zTPzrHBba/hPaVg37rFX5bFb67Fb6/KX0P
K32OKX1OqXzOqbwvqbyvqrxvqLzuIF73Ea9GZP5TZH4zMr8VndeGzutC5/Wg
896jcz+icz+jcwd/0tEofEidL35fPy/8BnQ++g/3QZ3eAP27pca3S009gfib
ZUTXcnPncgvQaQu2vg7+VwfQNP+k8yRielYnktS5D3Si3Hej3XdiSJ2b/49O
svNiikcnbfpUOtTJ8OhkQR0K1KGSOrtoYzuADn1sMxg3hmMdw76GaV/JtFUx
bRUsaynLWsSy5LMtOWyzlG0WcwgRjxAKCIGI4ItxnhTnyHF2jomVZ2IWmBiF
RnqxkVpqpJQbsioNGdX69JX6tNX/6sSSOk+gzgOPTj31+3XayFWGfkbnPAc/
wzOf5FuBzhGhY9Wg3waF73aF7x6F70Glz59Kn+NK79NK7/Mq78sqr2sqr3qV
VwMy/wEy/zEyvwmZ9wKZ9wqZ147Oe4POfYvO/YDO/YTO/YLOVaBzEKCjmqdW
Qp0B3yGg07/w26dZndH3S/S9AYZ3AcaepaZuj07Hckt7kLUt2Daj0xLieAl0
QoHOxPOwiabwyafhUCdiVudBpPs/OrHum3GuG/GuugTX1URXbdJPOqkzOtMn
06dOZEwdy5z6K3Pyz6zJP7ImDlEmDlAm9gMdKtAZ30Eb2wZ06I6NdMd6oMOw
r2LaqoEO01rGshazLAUsSy7bLAM6bLOISwj5hEBI8EU4T4JzZTg728TKNTHz
TYwCI73ISCsxUsoMWRWGzCp9+gp92iqg8wroRCmaPTqPoM7djKHbQIcyPKNz
mWmsYZvOcYjTPPPffOsxgb1y0G/1oO8mhe8Ohc8+hc8hpc8RpfcJpfcZpXeN
yqtW5XVd5XVLNf8uMv8hMv8JMu85Mu8lMu81MrcTnduNzu1F5/ahc/rROQPo
HBXQQeZiqvlqhZd20EcHdD6TOt8/LRru8x/5AHXeLTG89eh0LSM6l83qvA6y
vQq2t/6kA2iehU3+rPMowvnwJ52Gn3Su/6RzGegkOy+kzOqcTvPoZECdTKAz
eSgL6lDG91LHd1PHdwId2tgWumMT0KE71gIdhn0F01bJtJUxgY61EOiwLHK2
WQJ0OISQRwgEBF+I88Q4F+bDyjEx80yMfCO90EgrNlJKDVnlhsxKQ3q1Pm1l
e8iXV+GzOk3xszr303QzOjcpw3W0kSsM/SWm8QLbdJZDnOJaTvCtRwXgJPBd
O+i7WeGzU+GzX+H9u9L7qNL7pNLrrNLrosrrimr+DdX826r595B5j5B5T5F5
zcjcVmRuGzK3C53bg855j875iM75jM5RoL8CHVQ1F1PO1wCdAR/dF1Ln26eF
3z9CnfeLR3s9Ot1LTW88Ou3LLW3/6AQ7XoaMvQgZawY6oVAnjNR5HD7dGOH8
VydyVuf2/9RJdF5O+lfnbKpHJx3qZJA6hzMnf8+aOJgFdCb2UqAOdWw7bWwr
bQzobKA71tHtqxn2lQxbFcNWzrSWMK2FTEsey5LNMktZZhGbEHIJAY/gCwie
COdKcA7Mh5lrYuSZ6AVGWpGRWmLIKjNkVhgyqvRpK9pCPgOdlx6dx4mzOg0Z
Q7eyvt2gDF+jjdYy9BeZxvNs/AyHOMm1HOfbjgjsKwZ91g36bFX47FZ4/6bw
Pqz0Pqb0OqX0Oq+af0k1/5pq/k3VvDuqeQ+QeY+RuU3I3BfI3FfInA5kzht0
zjt0zgd0zif01y/or0r0VwQhddSK+ZpBb6Az9Nn3az/U6Vs0/MF/9P1ife9i
w9slxp4AU/dS/E0g0Rlo7lhmaV9ubVtO6rQG21tmdcZndEiasKknP+tEkDr3
It13I90NUf/ViXddTfhJJ9l5LsWjk0bqHE+fOpoxeSTjX53fsib2Ucb3UMZ3
Ucd3UEmdzTRy3IDOGjqpU82wVTCspUxrEdOSz7TksMwyllnMIoQcQsAl+HyC
J8S5YpwjxdlyEyvbxMg10fONtEIjtdiYVWrILDdkVOrTqtuCZ3WexwAdFOg8
TNbcI3W+3sr8R8cAdM6x8dMc899cyzG+7U+BY+Wgz4ZBn20K7z0K74MKrz+V
XseVXqeV8y+o5teq5tep5t1SzburmvsQmfsEmfscmduCzHmNzOlE5nSjv/ai
v/ahv/ajvw6S4fwCdDDlPKCjHfDWfYE6nxZ8/7hwuG/RyHv/0d7F+ndQpzvA
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
6zicdUr/VSd+ok4SXm47k2G5pcByS4V80nA+SGdtOuSTAfkgnUycDwLC+Sh7
v1NCPqqer1SQj9r+kRrn867G+paGz0drnqsz52Wbc3NNOXNN2fNNWQuNukVG
zWtGNcrnTYPy7RuB9ddCsc4FrPO0POnZiZTnJekvjmS2HVB2FKm7dmuNO3Tm
rdnWjbn2tXk9X+g9lxGePxMeqwiPNaR8IynfRrrvotz3UbLDlKwEhyM9TUsh
HEklLUHhVDPiGkb8kBE/ZsQQjoihJY0kCscdwvHE4Txiw5nRcX9mZ+0sLhxM
42O6PQeFY8Hh+Fmv+9swTQDQBEI4QRBOMNCEQDihQ2dCIZwwPpxwnibCccxZ
J4bXieN1ErDOnkTQScL57EjGOttSsM6WVMgnbXB9GtZZkw75ZAz8nsEBrUD7
TdH3gwLyUfZ+o4R8VD2fqeyfoHzUtvfUkI/G8prG8grKBwFlmfNyTDm5puy5
pqz5Rt1CoxYDGVSLDco3WZ1LWIc5AzrHsU7r4cz2/crOPeruXVrj9izzlmzr
hlz7R3rPJXqP5YTHCkL+JylfR8q3kO47cDiyA5SsmJIdo6XltPQsLamgJRCO
+DYjvseIUTiPGFE9IyIZEU2LG1E4hAzC8Xj+BMKpm9b2cHr7gxkdtTM7a2Z1
3ZuNw7njY7w9x3RrDh+OHxfO1YAeTBOIaPoqgoCG04FwEE0ohBPGhgM64f/U
GT0yUWd/POgkYJ1CDDRckAT5JCOd4fwUrLM5FekMbUgbXAdAf6dDPhioH+23
lZn9v2T2/QRAOB9l71IlzucLlf1TFdpvtg/UtnfVOJ/FGssijWWBxjxXa87L
MucioDxT9jyTboFR+4pR86pR/bpB+QbSuQo650GnLOnZsZSWo+mthzLb9yk7
C9WGnVpTfpZlU45tXS5aax5L9R4/EvLfCPlfpPsG0j0fhyPbS8kOUdISSgrh
SC7Qksu0uJIWVzFiFE4tI3rIiJ4wIj0jwuFQKBxpk979GaJB4Tz2evFoaitL
w4Zzb1b33dmGam8cDqaZY7npCzR+tkp/CCegl9fp53UgnBAunNOhEE7YaHkY
R8PpRGKdkijH0WgcDqcTO67D5sPrQD5JkE8y5ANAmxBQKs4HAeF8EFA6BlqV
Aflk9v+c2fejou97Re8yBcqn92tlz5fKns9RPir7hyrb+2rbO2rrm2orzkdj
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
EgZWJQwgoF8SMdD3SQjo/wHeEoWm
           "], {{0, 172.}, {138., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {138., 172.}, PlotRange -> {{0, 138.}, {0, 172.}}]], 
       EdgeForm[None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxNmHd8j2cXxn+PGXvGHrESOyIJsYUIEYkIEjMkNhEhhNh771GrqNIWrVVV
WoqitKpGlaKtWWqUDtRo0XN9nu8f/rg+Oe917nPu+/o+Km9bLmlIbEomj8cz
wPF4sthP++HR/y5i8qbObCqKp1rniuGpzmoqjqc6m6kEnursppJ4OUw5TWVM
pU1eeKpL0ctlKsuZ7JwpxQ71cpt8OFPQVMjkZ/I15THlNZU3laPOZ6qApzq/
qSKe6gKmSngF2OmL503uqqYq3FXYVJk7c3NnOd5UBC7VmCkKl+p4xeBSA68E
ufxNNemVoK7BT/Wam5rBQawCTLVgJA6BptrsKkXPnzfpbcGmIGbLcDaAnrjU
4Ux5uNTFqwCXEDw/sjc0NYCTH3V9mPlS13sjg94eCkNxaWxqxO5KnA2hJ05N
OFMNTk3xqrMzFK8sGYNg4E/2MJhFm9qaepmSyKzs4aYW1JpriRfIrlZ4QXCJ
wAuGS2u8EN4eZWoDoxDqSHr1eUcUs3XptabXgDdGw0nvjjfFwUgcYk3tqMWh
PV4TOHTAawqbjnih7IzDCyN3Z1Mn7gqjjuct+rYxvKkFXLowEw6Xrngt4dIN
L4JcCabu9CKou/FtAtgbBgex6mnqAaNovlUiuyLpJfAmva0337QNM4nsaAeX
vqY+1OLSD689XPrjxZM92TQITvHUA2EWRz2ADMoy1JTKrLgMZkcHZgZwR2c4
pXCmC5yG4HVlZyped3IO444Esqfh9SDncLxEWKWbRtBLpB6OVM8yzYSZ2I0y
jYSJOIwxjWZXL3rpZFCWcaaxMO3L2Qxm+9Mbw1mxGs/MILhMNE0gs3JOMU2m
VvapeKnknoY3lNzT8ZLhOImdA7ljAncOg8sMZtJgMBPvC9MB0/ems7BRztkw
GgmbuaY55FSuBab5ZB5NPY/ZkZydDQflXmRayJv0tiWmxewaS28BGZRlmWkp
s+M5u4ieOL3FmclwWo43BU4r8GaQ9W3TahjMoF4Fw+nUK2GZwt5JzIrDGnZM
ZWYld8wi51rOzCb7Orw5sHsHbx6s3jWtp1buDXgLYLERbzGsPjC9Ty0um/CW
wmEz3jI4bMFbSbZtpq0wXMyu9zgrTh8ys5xcH+GtYMdWvFWw287Ojez5zLSX
zMq5y/QxTNZS74ThGuodzOotn7NjHaw+YcdqZnZw53o4fWraTS1Oe/A28Ka9
ePs97p9x/dk+w13ito87dzN3wvQNDDczs59vsYh3boSJOBwyHYSLOBw2fUlv
K/UhdonrAXZuI8cRZraT7SjeFu44yMwOWH3FmZ2wPIa3F27fmU6SeS/1t2Tb
Q32C7JvIto9ZcTjFjn30xOo030Df4mvTce7eRX2M2X2c1Q79sz3R4/65XEIG
ZTnncf+OaWT/h7qxKdbUznEZidV50w/U4nIB7zBcfsQ7AoeLeEfhcAnvOG/9
2fQTbzxOfZlvLA5XTL8we4zeJXpidZUzZ3n3bdMtuIrTddM1auW+gXcKFjfx
TsPyV7wz7LyFd47cd0y/cdc56tu85SR3XeWsuNxl5jxc7uFdgMt9vIvkemD6
nd5F6vv8VM/Rv+g4Lgex+sP0EEbi8LfpL3ZdpveAN+ltj02PmBX7P9lxDS5P
OHMdLv/g3YDLU7zbZP/X9AJOt6mfw+wW9bM3Mujtr5kVl//YcZOZZ9xxB04v
OXMXTq/w7rHzNd4VMj6CwQOyZ3JcZnlMeU3lTeUcN7OyZ7E6s+My01w2q7M6
bq1d2R3XewQXL8f1HsMlh+N6T3l7bqtzOS4jeapzOm5PLPQOnXkCR/W04zns
8vJWD+/2NhV2XEbikN/qfI5bi0MBx/VewqGg43qvYFPIcb3XsNcueZnIXdRU
hLsyUevOF3yXfHDTWbEqxkxWuJQwFacWl5J4XuQqbSpFz4taZx7y5y4z9+aE
W1lTGRjl4Vv5sCsnvdK8SW+rwDfNxYwPO/LBpSJn8sOlEl4BuPjieZO9qqkK
nLypK8OsMLUfGZSllsmfWXGpxo6CzPhxR1HYVedMcTjVNNWgLsmumuxWzgDu
KE322nhlyBmI5wOrYFMQPR/qQKS6laklzMSlrqkOTMShnimEXeXpBZNBWRqY
6jNbkbN1mfWlV4+zYtWQmSpw0e+URmRWzmamUGplb47nT+4wvFrkboFXFY5N
2FmZOxpxZwBcwpmpDYOWePpdd8jj/j2tv8eDyBkBozrkijS1JqdyRZna0Auh
jmS2Dmcj4KDcbU3RvElv0+/SGHbVpxdFBmVp77i/cxswE8MO9ZqaOnAmFE5x
po7U4hSPF07WrqYuMAin7gzDFtSdYFmdO5owKw7d2NGcmU7c0Yqc3TkTQfYE
vNZw6YEXCaueeG3InYgXBYskvBhY9TH1phaXvnixcOiH1x42/fE6kW2wKRmG
MezqBTNxGui4/w0xjlyD8OLZkYzXGXYp7Exiz0hTOpmVc5hpKEy6U6fCsBv1
EGb1llHsSIBLGju6MDOEO3vAaThnesJpBF4ib0rHG20aY1pgms9d4pbBnWnM
zTTNgGE/ZkbzLdryziSYiMME03i4iMMk00R6ydQT2KVvMZadg8kxmZkUsk3B
G8Ad2j2OnlhN5UwqLKfhpcNtjmk2mdOpZ5FtBPVMsvclWwaz4jCXHRn0xGoe
3yANNtO5exj1NGYzODuXjMq6EOb/A03nbzM=
         "]]]}, {}, {}, {}, {}}, LineBox[CompressedData["
1:eJwt0E1KggEUBdDP/DIrtbSCGjYrsB0U2AIEFd2AGNSkpgmVlb+lZkvQPege
bA+6B9tBR2hw4E4e3PtOqw+l+0gQBHk2WOcjzrmiyA11hkyY8cOSXzYdnXDB
NRXueOaFBq+88U6TFm06dOnxwSd9Bgz5YsQ3T9xSJkeWY0JWeiyYM2XMgEdq
FLjkjEMOyJBmnz1SJEmwyw7bxNkitt5KSPT/X3+owxyq
      "]]},
    VertexTextureCoordinates->CompressedData["
1:eJxd1z+oU3cYx+FYStsMLdhCOjlY3AUxgyWoQciiSAwKoihBKDiUuusqty4G
h0sbaBwcHOylVHATcdEsCuJQDDiIaJNqsJVEMItoEc7zG77T4XO5//Jwzvt7
z9ZTZ3o/fFKr1S5tqtU+XusbG19daf+4+4vqOr6/7dCF5e97dPfOt2d+Xt4s
3b/04Ni0ebd0Y8/m92vLe6Vnb6911ycPS7cP7v9u2vyr9OjqqzfN9Unp1buL
47Xl49K9w9t/nXSflH505PTO9cnT0uc37bp8a+1Z6R1/1D+bNv8u/fTo45++
nE5LX/x0Y9Jc/6f099fP7T2572XpF8cPXFtbzkv/8vmWr/+88qr0vhv/np10
/yu9PHn7+YcPr0vzu1u58dP8ND/NT/PT/DQ/zU/z0/w0P81P89P8ND/NT/PT
/DQ/ze9g5cRP89P8ND/NT/PT/DQ/zU/z0/w0P81P89P8ND/NT/PT/DS/E5UL
P81P89P8ND/NT/PT/DQ/zU/z0/w0P81P89P8ND/NT/PT/L6pHPhpfpqf5qf5
aX6an+an+Wl+mp/mp/lpfpqf5qf5aX6an+Y3rT43P81P89P8ND/NT/PT/DQ/
zU/z0/w0P81P89P8ND/NT/PT/PZWn5Of5qf5aX6an+an+Wl+mp/mp/lpfpqf
5qf5aX6an+an+Wl+v1Wfi5/mp/lpfpqf5qf5aX6an+an+Wl+mp/mp/lpfpqf
5qf5aX5vq8/BT/PT/DQ/zU/z0/w0P81P89P8ND/NT/PT/DQ/zU/z0/w0v0PV
/81P89P8ND/NT/PT/DQ/zU/z0/w0P81P89P8ND/NT/PT/HQ99vxx7K3d2MP6
sVc04pycxdxvxxwbxXO5ivusF2555af5aX6an+an+Wl+mp/mp+vxXjSOPb8b
e2s/9rBG7BWzOCfbMfdHMcdW8Vz24j5Lt7zy0/w0P81P89P8ND/NT9fjPXIc
70Xd2PP7sbc2Yg+bxV7RjnNyFHN/FXOsF89l3mfplld+mp/mp/lpfpqf5qfr
8d49jvfIbrwX9WPPb8TeOos9rB17xSjOyVXM/V7MsXwu8z5Lt7zy0/w0P81P
89P8NL9B9Xf4aX6an+an+Wl+mp/mp/kNYm4N4jkcxH01CCfNT/PT/DQ/zU/z
0/xa1e/lp/lpfpqf5qf5aX6an+bXijnfirnViuewFfeV5qf5aX6an+an+Wl+
8+r38NP8ND/NT/PT/DQ/zU/zm8e5OI85P4+5NY/nUPPT/DQ/zU/z0/w0v2H1
c/w0P81P89P8ND/NT/PT/IaxRwzjXBzGnB/G3NL8ND/NT/PT/DQ/za9TfR8/
zU/z0/w0P81P89P8NL9O7F2d2CM6cS52Ys5rfpqf5qf5aX6an+a3qL7OT/PT
/DQ/zU/z0/w0P81vEXvqIvauRewRizgXNT/NT/PT/DQ/zU//D377PjI=
     "]], {}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImagePadding->All,
  Method->{
   "DefaultMeshStyle" -> Automatic, "GridLinesInFront" -> True, 
    "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8976200453497877`*^9, {3.897620304260873*^9, 3.897620312925702*^9}, 
   3.8976319074199133`*^9, 3.906042191657642*^9},
 CellLabel->
  "Out[388]=",ExpressionUUID->"fdb67af2-b046-4eab-964f-3d0645b814ab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
And here, the short branch cut is not contained in the fundamental \
parallelogram:\
\>", "Subsubsection",
 CellChangeTimes->{{3.897620081003381*^9, 3.8976200849019623`*^9}, {
  3.897620231547621*^9, 
  3.897620257367634*^9}},ExpressionUUID->"1c02f320-f0c3-4cfe-ac56-\
cddef4553704"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c1", "=", 
       RowBox[{"3", "/", "5"}]}], ",", 
      RowBox[{"t2", "=", 
       RowBox[{"0.6", "+", 
        RowBox[{"0.9", "I"}]}]}], ",", 
      RowBox[{"\[Tau]", "=", 
       RowBox[{"I", "-", "0.2"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ComplexPlot", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"True", ",", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[Theta]1", "[", 
            RowBox[{"u", ",", "\[Tau]"}], "]"}], 
           RowBox[{"\[Theta]1", "[", 
            RowBox[{
             RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
         "c1"]}], "]"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "\[Tau]"}], ",", 
        RowBox[{"1", "+", "\[Tau]"}]}], "}"}], ",", 
      RowBox[{"PlotPoints", "\[Rule]", "20"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.897556402060935*^9, 3.897556428817087*^9}, {
  3.89755693947651*^9, 3.897557009804041*^9}, {3.897557042958887*^9, 
  3.897557062175836*^9}, {3.897557575182281*^9, 3.8975576113000793`*^9}, {
  3.897557988140451*^9, 3.897557999983974*^9}, {3.897558090736024*^9, 
  3.897558167626039*^9}, {3.8975582276454268`*^9, 3.8975582353955173`*^9}, {
  3.897560461254599*^9, 3.897560467830408*^9}, {3.897560614883601*^9, 
  3.8975606538391314`*^9}, {3.897619237845399*^9, 3.897619315457747*^9}, {
  3.89761936120942*^9, 3.897619368434053*^9}, {3.8976194067338867`*^9, 
  3.89761940689263*^9}, {3.897620089117797*^9, 3.8976200984430017`*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"9ad88cd5-2d26-4d04-bc0b-3c1c5194d1c4"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxd2E+IjHEcx/HhuJFSymEdaFNaykVJ6qccXSSHPWjbLKLEwUHJQdpwIQcH
6yAKbdqclGL1c9jyt02rrPIv7NJGlIhyIH5e38P3NL1qnpnneTfNzPNZun3/
lp1zO53O6Tmdzt/H7oeDe4eHZ+u724fv/v79pV74uKi3fngf7pl3b3Z6zXR4
ZOWhka6hN+G+c30TA5dehgeej20a3fAsvLt76f0fLybDr292nTz29UH48/on
x5f03gl/+7Wva/LU5fDj5sIz7fnhp+31wjva+4W3tfMJb23nG77Srie8rF1v
+HzrEf7fK7ue2PX8+7WLn6If68f6sX6sH+vH+rF+rB/rx/qxfqwf68f6sX6s
H+vH+iXXVQvW9fRvnI1+rB/rx/qxfqwf68f6sX6sH+vH+rF+rB/rx/qxfqwf
65dcJ2+c3TJ/Zib6sX6sH+vH+rF+rB/rx/qxfqwf68f6sX6sH+vH+rF+rF9y
PTjw48jYsbfRj/Vj/Vg/1o/1Y/1YP9aP9WP9WD/Wj/Vj/Vg/1o/1Y/2S69qF
o/1Tm19FP9aP9WP9WD/Wj/Vj/Vg/1o/1Y/1YP9aP9WP9WD/Wj/VLrkcH99xa
c2Yq+rF+rB/rx/qxfqwf68f6sX6sH+vH+rF+rB/rx/qxfqxfcn10ffniM1OP
ox/rx/qxfqwf68f6sX6sH+vH+rF+rB/rx/qxfqwf68f6Jdfef8eNRz/Wj/Vj
/Vg/1o/1Y/1YP9aP9WP9WD/Wj/Vj/Vg/1o/1S64//53H1ejH+rF+rB/rx/qx
fqwf68f6sX6sH+vH+rF+rB/rx/qxfsl1rLnox/qxfqwf68f6sX6sH+vH+rF+
rB/rx/qxfqwf68f6sX7Jtbt9HqMf68f6sX6sH+vH+rF+rB/rx/qxfqwf68f6
sX6sH+vH+iXX8fZ9GP1YP9aP9WP9WD/Wj/Vj/Vg/1o/1Y/1YP9aP9WP9WD/W
L7kear/H0Y/1Y/1YP9aP9WP9WD/Wj/Vj/Vg/1o/1Y/1YP9aP9WP9kuvq9n8w
+rF+rB/rx/qxfqwf68f6sX6sH+vH+rF+rB/rx/qxfqxfcj3Q7keiH+vH+rF+
rB/rx/qxfqwf68f6sX6sH+vH+rF+rB/rx/ol14l2Pxz9WD/Wj/Vj/Vg/1o/1
Y/1YP9aP9WP9WD/Wj/Vj/Vg/1i+5rmh7TPRj/Vg/1o/1Y/1YP9aP9WP9WD/W
j/Vj/Vg/1o/1Y/1Yv+Q61PbA6Mf6sX6sH+vH+rF+rB/rx/qxfqwf68f6sX6s
H+vH+rF+yfbykvb7kvb7kvb7kvb76Mdpvy9pvy9pvy9pvy9pvy9pvy9pvy9p
vy9pvy9pvy9pvy9pvy9pv49+/AcKqB6N
    "], {{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1: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
zJUntvITZ+mJp/g0kH8azj2NZZ+m0r9mU78W4i9K0dfl8Ntq8D3g1wTaIVcH
7OhCrV9wczdh6KUuv9IX/ezZIL9YfbpRfbpXe3pSe6qvPTUCT+zAEw/wJFh/
Eqs/SdWf5Ou/VOq/1Ou/QLVfkcpzrPSCKGgCr+n0GzbZwsXfCpG3Uuid7H+v
et+rrlbV9lExtStXn2Rdh3TSKR10iTufhY3P/MoXbv4LN/WFHetmBrvprz10
71ffO8DTCrraYPsnxNqJmbrw6y/kZQ+t62VOv3Kzlccr1cfb1UeH1UfntUdX
tUeW2iMn8MgHPAwDDxPAw2z9YbH+sFZ/ANYewZUnaOlXrPCMyP5GpV8wyZdc
/BUfeS2GXkv+N4q3RXW1qLZ3irlVuf4gX7RJp+3S4Sdxp0PY6BBWOvn5Tm66
ix3rYoa66L4uuqeb+tJLdfWTnYPkp2GybZT4MI6/n8TfzWAtc9jrBfTlMvrb
KvLrOvxkC/5lB3p8AD4+rj8+Ax5f1B5fVR+bKo+tpceO4mN34bE//ziUfRzL
/JJM/ZJNPinEnhUjL8qh19XA25rvfd39AXS2wbZPqKUTM34mrropfQ993see
9PMLlcfr1ce71UfHtUcXtUeG2iMb8MgNPAoAD6PAw1T9Ya7+sFx/AAAPwepj
uPwELf6K55+T2d/o1Asm8ZKLvRLCr8XgG9n3RvG0qM63qvW9YvygXH6Uz9uk
43Zx/5O43SGsd/BLndxcJzfZxX7rYga66N7PdHePtwVwvwMdrZDtI2Jux4wd
+FUXefGZPutmjrXnrHJ/uXJ/q3L/oHr/rHr/qnbfXLvnqN3z1u6FgHtx4OcM
8HMR+LkG/Fyv3ofKD5HiYyz/hMg+pVK/MolnbOw5H/5NDL6QfC8Vz0vV+Uq1
vlGMb5Wrd7KuVTr5IO1/FLfbhPU2frmdn/vETX5iRz8xgx10Twf9pYvq6qY6
eslP/WTbIPFhmHg/ir8dx99MYa9nsJdz6PNF5Ndl5Mka/HgDergNPtyrPzgE
HpzWHuiqDy4rDwzlB5bSA3vxgTv/wJd7EMo8jKYfJpMPM4lH+ejTYvh5Ofiy
4n9d87ytu96D9g+wtQ01fcKuO4nLLkr3hT7tYQ97+fnK/bXK/Z3q/aPqfV31
vqF231q756rd8wP3IsC9JPBzDvi5DPwMAD+D1Qdw6RFa+AXPPSEzv1LJZ0z8
ORf9jQ+9EAMvZO9Lxf1KdbxSLS2K4a2sfy+ftUpHH8S9j+JWm7Dazi+2czOf
2IlP7EgH099Bd3dSnz97XgPOlrr9HWRpRUwf0et2XN9BnndSJ5+Zwy/cdPmn
pfJPm5Wf9is/nVZ/uqzeNVXvOmp3vbW7odrf47W/Z2p/LwI/VoEf69WfoNI9
pPAAyz0kMo/J5C90/AkbfcqHfhUCzyTvc9n9XHX8plpeKobXiv6NfPZWOnon
7b0Xt1qFtQ/84gd+9iM38ZEdaWP62+judqrrE9XRRbV3k2295Id+4v0g/nYE
fzOKvZrAXkyhz2fQX+eRJ4vw4xX4wTp0fxO8t1u/dwDcO67dO6/+rK/8fF36
2Vz82Vb42ZW/583eC2buRVP3Eon7mfiDfOSXYujXUuB5xfuy5tYE3oK297D5
A2Jsw67aiYsO8qyLPv7M7nfzc+WfVis/bVd+Oqz8dF69e129a6neddXu+mt/
j9T+nqz9PQf8vQT8WKv9vV7RBO4j+QdY9hGRfkwlfmFiT7nIUz74q+h/Jnme
K67nqv031fxSuX4tX7TIp2+lw3fi7ntxo1VY+cAvfOSmP7JjbcxQG9PXRn9u
pzo73C9qjtd1WwtkfgcbWtHLj7iujTz9RB11Mvtd3FTpx8XyjxvlH/cqP55U
ftBXfjBWf7BXv/dUvw/Wvo/Vvk/X7hRqd6q1O0DlB7B0F87/hGbv4ekHZOIh
HXvERh5zwV8E/xPJ80R2PVXtv6rmZ8r1b8rFS/n0tXT4RtptETffCivv+IX3
3PR7bryVHW5lvn6gP3+gOtqo9k/kxy6ytZt430u87cffDOKvRrAXY9jzCfTX
aeTJLPJ4AX6wBN1bhX7aAH/art/dB+4eVe+eVu5elO9ele6ainet+bvO3F1v
5m4gfTeS/CmR+Ckdu5cLPywEfyn5f614fqu6XgL216D1LWR6j1y3YvqPxHk7
edJBH3ayo6UfZ8s/rpR/3Cr/eFD54azyw1X1B0v1B2f1e1/1+3Dt+0TtTrZ2
p1S7U6t+Xy//CBXvIvmfscx9IvWASjxkoo/Y8GM+8IvoeyK5nyrOp6rtV9X0
XLl6IeteySevpYM34naLuP5WWH7Hz73nplrZ0VZm8APd+4Hu/EB9anc+r9lf
1C2vIWMLfP0O1b/Hzz+Qx23UwSdmt4ObLN1ZKN1ZL9/ZLf/tuPK3i8rfjJW/
2Sp/9VT/Gqz+NVb9Ll39rlD9rlL9Dij/DSx+D+d/RDN38dRPZOIeHb3PhB9w
gYeC75HofiQ7Hyu2X1TTE+XqV0X3XD55IR28FHdeiRuvheU3/HwLN/WWHX3L
Dr1jet/RXe+p9lbqYxvZ2kG+6yLedhNv+vBX/diLIez5CPrrGPpkEnk8DT+c
g+8tQj8tg39fq/+4Bfy4W/vxsPqDto905R8uiz8YCz9Y8z84sj94Mj8GUj+G
Ez/G4z+mo3dzofuFwKOi70nZ/azq+A2wvaybX0OGFuTyHXbRip9+JI/a6f1P
7LfSnenSneXync3ynf3y304rf7us/M1c+auj+ldf9a/h6neJ6nfZ6nel2nfV
6l+B0h2o8AOS+zuWvkskfybj9+jIfTb0gPc/FLyPJNdjxfFYtf6iGp8ql8/k
89/k4xfS/itx67Ww9kZYauFnW7iJt+y3d8zAO7r7PdXxnmr74Pi1ZnteN78A
Da/gyzeo7i1++p44+kDtfWS227mJ4nfzpe/WSt/tlP9yVP6LrvwXQ+XPtsqf
3ZU/Byp/ilb/lK7+KV/990r132ulv9QLf4Vyd9DMD1jyRyJ+l4r8xIR+5vz3
eO990XVfdjxQrA9V4yPl8ol8/lQ+fibtPxe3X4jrL4WlV/zca27yNfvtDTvQ
wvS00J0t1Md3ZGsr+a6NeNtBvPmMv+rGX/RhzwewX4fQJ9+Qx+PIwyn43gz0
0zz04xL4/Wr9+w3gzk7tzn71znH5znnpjr54x5C/Y8ndcWTvuNN3/Mk74cT3
8dj36ciPueDPef+Doudx2fWkan9Ws/5WN72Erl8j+hbs/B1+0koefKB329iR
4ndTpe+WSt9tlL7bL//ltPyXy/JfTJU/Oyp/9lb+HKr+KV79U6b6p2L136uV
PwGl78D83+Ds92j6BzzxdzJ2lw7/xAZ/5nz3BM99yflAtj9QLQ8Vw2NF/0T+
f+muy6c4+rVR23/Fu+47AiEEd3eXwW2QwS0QSAgJCXF3N5KQAIEEd3d3dxhp
GXd3n/VlDyx5nl2136r+BEXV2ddx0f3r0WvawXJNzw11x01Vyy1V/W1l7R3F
z7vyr3dlH+9J39yTPLsvefxw5Sp98Rpzrpw9c5M7eZs/dlc4dF/U/1DS80j2
mZTxk5z+m5zeQknvoqQNUtLGqWkz1NQlauo6LXWXhkLTUCANRaSl0GgpDEoa
i5jBwWfxoBwBLleEyZccnJftFSi2C5WbF9RrRdqVIt1i8T/nLummLmtHr2gH
r2p6r6k7r6tbylUNN5S1NxVVt+Tfbss+3Za+vSN9fkfy6K74wQPxvceiu89E
t18Ib74Wlr8TXPvIv/qFX/qVV1LJu1jFvfCLU1DHzqtn5zSxstsY2Z307F5a
9iA1a4SSNUHKmiFmLeCzVuCsDTB7B8jex2Zj0NngQR5+t5C4XUzeKKGuldKW
yxgL11mzNzhTt3jjd/gj94SDD8R9D6Vdj+VfyenV5PQGcnobJb2XkjZMTZuk
ps1TU1doqZu01H0aCktDwbQUsn4CVBSTnM4mZnLhbD6YI8TmidH5Uv0Edo8m
oNq4oFkt0i4X/3OhWDdzSTdRqh25oh0o03RfU7eXq5pvqP7cVP66qfhxS15x
W/bhtvT1HcnTO+KH95ZL6QtXmbPX2FPl3PGb/JHbgsG7ot77kq4Hsk+k1B8k
VB0Z1UxGdVFSBigpY5SUGWryIjV5nZq8Q01C05JAWhKRlkilJtHJKSxiKgdO
54GZAly2CJ0jOciV7ebJt/OVG+fVqwWa5ULdQuE/Z4t0kxe1IyXagVJNzxV1
R5m6+Zqq/rryV7ni5w351xuyjzelb25Knt0SP7glvndXdPeB6PZj4c1nwvKX
gmtvBFff80s/8Uu+8C5+4174wS2o5uTXsnP+sDIbmZktjMwOekYPLWOAkjFM
zhgnZUwTMubxGctQxjqYsY3L2MdkYg4zwf0c/E4+cesCaf0iZbWEtnSFMV/G
mrnOmbzBHbvFH74j7L8n7rkv7XgoryClVpNR9WRUGxnVQ0kZoqRMUFLmqMkr
1ORNatIeNQlLS4JpiWRaIo2azCChWIQ0LpTBB7KE2GzxYY5kP1e2k6/Yylet
n1evFGiXCv85X6ibLtaNX9IOX9b0l2q6rqrbylRN15S/rytryhWVN+Rfbsje
35S+uiV5ckt8/85SCX2+lDlzlT15jTtWzhu6Kei/Leq5K+m4L/tITK4kJdeS
kprISZ3kpH5K4iglcZqSuEhBrlGRO9SEQ2oCQE0gUuOp1AQ6KZFJSGHDqTwg
TYDNEB1mivezpDvZ8q0c5XquejVPs5Svmz//z5kC3cQF7Uixtv+Spvuyur1U
1XRF9eeqsqZM8eOavOK67EO59FW55OkN8f0b4ru3RbfviW4+FJY/EV57Lrj6
SlD6ll/ygXfxM6+oglvwnZP/k5Nbw86qY6XXM9ObGWnt9LRualofJW2InDZG
TJ0ipM7BqUtQ2hqQtoVN20OnYQ7Twb0seCeXsFlAWrtAWb5IW7zMmLvCmi5j
T1znjtzgD94S9t0Rd92Vtt+XfyElV5GS/5CSWslJ3eSkIUriBCVxloJcpiI3
qcg9agKGmgBR48nUeBoFySAlsfApHCiVh0sXYDJEB1mSvWzZdo5iM1e5lqde
ydMu5uvmzuumCnVjRdqhi5q+Ek3nZXXrFVXjVWVdmbL6muL7dfnn67J35dIX
5ZLHN8T3bi5epM+VMKdL2eNlnJHrvMFyQd9NUddtSdtd2Qci8jsRWUtCNpES
OsgJ/eSEUXL8NCV+gRK3RonbocQeUmMBaiyBGkOhxNJJCUx8IhtK5gIoPiZV
eJgm3suQ7mTKN7OUa9mqlRzNYo5uLvef03m68QLt8AVtX7Gm66K6rUTVeFn1
u1RZfUVReVX+pUz2vkz68prkyXXxvevi2zdFN++Iyu8Lrz0SXn0qKH3BL3nN
v/iOV/SRW/iFe/4bJ/cHO6uanVHLSv3DRDXSUa00VCcV1UtJGSSljBJTJvEp
s3DKIpiyhkvZwqL20Cj0AQrYzYC3swkb+aTVAspSEXX+En3mMnPyCnusjDt8
nT9wQ9hzS9x5R9qqfwcSkT9JyN+khBZSQjc5YZAcP06Jn6XEL1PiNihxe9RY
DDUWosaSqDFUchyDiGTBSRwwhYdDCdBpooN0yW6GbDtTsZGlXM1WL+doF3J1
s7m6yXzdaKF2sEjTW6zpvKRuKVE1XFbWlip/XlF8uyr/VCZ7e036/Jrk0XXx
nfL5ItrMRcbkZdbYFc5wGW/guqCnXNRxU9J6W/aeEP+NGPeLGNdIiusgxfaR
Y0fIMVPkmAVKzBolepsSfUiJAihRBEoUhRJNI8Yy8fFsEMnFJfHRKcIDlHg3
VbqdJt9IV6xlqJYzNQtZ2tnsf07l6MbytEPntX2Fms4idWuxquGSqq5EWXVZ
8b1U/vmK7O0V6Yurksdl4rtlopvXReW3hNfuCsseCK48Flx+xr/0kl/0hlf4
nnv+EyevgpP9nZ35k5VWw0ypYyQ30JNbaMkd1KQectIAKWmEkDSBT5qFkhbB
pFVc0iYmae8wGb2fDOykQVuZ+PVc4sp58mIhda6YPn2JOXGZPXqFO1TG77su
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
wVAWNoyDjuDtRwp2o0VbMZL1WNlqnGIpXjmfoJ5BaqcSdeOJuuEUbV+qpitd
05apbsxW/c5RVucpv+crPp+XvyuQvSyUPimU3LsgvlEkulIkvFwivHRFUHxd
cOEmv+AOL/8BL+cxN+sZJ+MlO/UtO/kDK/EzM/4bI/oHPaqGFvWHEtlE1j+G
I7sJEQNwxAgYMQlEzGIjltCR6weR23uRB9tRuI04cDURXkIR5tNJM1mUyRza
aD5jqIDdd4HbXcxvvyRsviyuvyJ9Doe8x4d8wwf/IgQ3EoI6CEF9xKBRYuA0
MXCRFLBOCtgh+aNJ/iDJj0jyoxACaVAIA0CwMOHcwwj+XpRwJ1q8GSNdi5Wt
xCkW41VzCZpppHYyUTeapBtEaXvTNB0Z6pYsdX22qjZX+TNP8TVf/vG87E2B
9Hmh5NEF8Z0LoutFk1nUsRzGUD6rv4DTfYHXXixoviSqvyx5DAe9gYO+4AOr
8IF/8AGthIAegv8Q0X+C6D9H9Fsh+m2RfA9IvjiSD4HkQyb4UeFAOhDMxIZy
DsN4e+GCnUjRZpRkPVq2EiNfjFXOx6ln4rWTCbqxBN1QkrYvRdOZpmlNVzdk
quqylFU5yu+5is958nf5spfnpY8LJHcLxOWFotILwksXhRcvC4rK+AXl/Pxb
vNx73OyH3MwnnLQXbNRrVtI7VsInZmwFI6qSHlFNjaijhDeSw1uJ4V348H44
bBgMm8CFzWLClg7D1/bDt3fDD7YjsBuxwCoSXkwmzKWSpjMoE9m0kVzGYD67
t5DbWcRvuyhsKhH/uSx9Bge9h4O+4QN/4QMbCQEdhIA+gv8o0X+a6LdI9Fsj
+u6QfNEkH5DkQ9RPAO9Pg4IYuBAWBsE5COPvRQi3I0UbUZK1aNlyjGIhVjUX
p5mO104k6EaR2oFkbQ9K05Gmbs5Q12epfmUrf+YovubKP+bJ3uRLn5+XPCwQ
3y4UXSucyKCOZDMGc1m9+ZyuQl5bkaCpWPTnkuQxFPAGDvgC+1fh/f/g/VoJ
fj0E3yGC7wTRZ47os0L03iJ6HxC9cCQvAsmLhPehQv50XCATE8w+COXtIQTb
4aLNCMlapHQ5Sr4YrZyLUU/HaibidGPxukGktjdZ04nStKSpG9JVtZnKqizl
t2zFpxz521zZizzp43zJ3fPi8vOiywXCi0WCokuCwiv889f4eTd5OXe4Wfe5
6Y85qc/YyS9ZyLfMuA/M6C+MiG/0sCpqWC0F0UBCtBARnXhEH4QYBkPHcYgZ
DGLxELG2j9jeQRxshWPXo4GVeGgxiTCLIk2lU8YzacM5jIE8Vs95bkchv6VI
2HBRXFcifQYFvIf9v8H+NXj/RrxfO8Gvj+A7QvCdJvosEn3WiN47RG80yQsk
eRGJXmS8Lw0MYOCCWOgQzn4obzdMsBUu2oiQrEbJlqIVCzGq2Rj1VKx2PE43
kqAdSNR2J2vaUermNPWfDNWvTOWPLEVFjvxDrux1nvRZvuRBvvj2eVFZwXg6
dTiTPpDD6snjdJzntRQKGopEdReljyC/15DfF9i3Cvb9g/dpxfv0ELyHCN4T
BK85otcK0XOL6HlA9MARPQhEDxLeiwr60nH+THQg+yCYuxvC30YIN8LEq+HS
5Qj5QqRyNko9Ha2ZiNGNxuoG47W9iZqOZE0LSl2fqqpNV/7MUH7NVHzKlr/N
kT3PlT7KldzJE1/PF13OFxYXCi4UCwou8/Ov8nPLedm3uBn3OGkPOSlP2Ekv
WAmvmbHvGVGf6eFfaaE/qKG/KKH1pJBmQkgHPqQXChkCQsaxITPokMWDkLW9
kO2d0INNBHYtCliOgxaQ+Jlk0mQqZSyDNpTF6Mtldedz2wv4zReE9cXiX/qT
I+T3Hvb9BvvW4H0b8T7teJ8+gvcIwXua4LVI9Fojeu4QPdFED5DoQSR4kmFv
KuDHwAawDoM4+8G8nVDBFkK0Hi5ZiZAtRSrmo1Qz0eqpGO14jG44TtufoO1O
0rSnqJtQ6j9pqpp0ZWWmoiJL/iFb9jpH+jRX8iBPfCtPVJY/lkYdyqD3Z7O6
cznt+bzmAkH9BVFtsV7H5zXk8wX2/gl7/8F7teK9evCeQwTPCYLHHMFjheC+
RXQ/ILrhiG4EohsJ9qSA3nSsLxPtz94P5O4G87dChOuh4tUw6VK4fCFCORup
norSjEfpRqJ1A3HangRNR6KmOVldj1L9SlX+TFd+zVB8zJS/yZI9z5Y+ypHc
yRVfzxVdzhMWnRcUXhCcv8TPK+XlXONl3uCm3+Gk3uckP2Yjn7HiXzFj3jIi
P9IRFbSQSmpwDTn4Nym4iRDUDgf1QEGDQNAYNmgaHbRwELS6F7S1Hby/GYpd
jQCWYqD5BPx0EmkCRRlJpw1mMnqzWZ153Lbz/MZC4e8icU2xXsfnPeTzDfau
gb0b8F7teK8+vOcIwXOa4LFI8Fgjuu8Q3dFEN5DoRiS4kyEvKuDDwPixDgM4
e0G8nWDBZqhoHSFZCZMthivmIpQzkerJKO1YtG44Rtsfp+1CatqS1E0p6t8o
VU2asjJd8SVD/j5T9ipL+jRbcj9HfCtXVJY7iqIOptN7M1ldOZy2PF7TecHv
QnGN/tQAer2GvL5Anj9hzz+wRyveowfvPoR3nyC4zRHcVgiuWwTXA4IrjuiC
J7iQYHcK4EXH+jAP/dj7/tydQP5WkHA9RLwSKl1CyOfDlDPhqskIzXikbiRS
NxCj7YnTtCdomhPVf5JVv1DKH6nKr2mKj+nyNxmy55nSh1mSO9ni6zmikhzh
hTxBQYEgv5ifW8LLusrLKOem3eKk3OMkPWQnPGXFvmBGvWGEf6CHfqYFfacG
VZED60j6t0RgGxzQDQYMAAGj2IDpw4CF/YDV3cCt7cD9jWDMajiwGA3NxeOn
EonjKZThVNpABqMni92Rw23J5zcUCOsKxVVFsmeQ13vI6xvsWQN7NsAe7XiP
Prz7CN59muC2SHBbJ7juEFzRRBeI6ELAu5IhDyrOi4HxZR34cfYCeNtBgs1g
0VqIZDlUtohQzIUpp8PVExHasUjdUJS2L1bbFa9pQ6obk9S/U1TVKGVlquJL
uvx9huxVpvRpluR+tvhmtuhqzkgKdSCN3pPB6sjmtOTyGvKFdQXi6kK9jsdr
yOML5FEFu/+B3Vthtx682xDedRLvOk9wWSW4bBGcDwjOAMEJT3AmQW4UwIOO
8WIe+rD3/Lg7/vzNQOFakHglWLoYIp8LVc4gVJNhmrFw3XCErj9K2x2raY/X
NCHVfxJVv5KVP1KUFamKD2ny1+myZxnSh5mS21nia1mikmxhYY7gfL4g7wI/
5xIvs5SXfo2beoOTfIed+IAd/5gV85wZ+ZoR9o4e/IkW8JUS8JMcUEv0byD4
t8L+XaD/AM5/FOM/deg/v++/uuO/teW/vx6EWQnDLURBs7H4KSRxLIkyhKL1
pzO6M9nt2dzmXH59vvBXgeQO6PkM9HgPeXyD3Gtg90bYrQPv1od3HcW7TuNd
Fgku6wTnXYIzmuAMEZwIeBcy6E7FedLR3qwDX86uH287QLARKFoNliyHyBZC
5bMI5XSYeiJcOxquG4rQ9kVru2I1rQnqRqS6LklVnaL8jlJ8TpW/T5O9Spc+
yZDezxTfzBJdzRpOpvan0rvTWe2ZnOYcXn2esPa8+GeB9DHo/gZ0+wK5VUGu
f2DXVtilB3YZwjtP4p3n8U6rBKdtguMBwREgOODxjiTIhYJzp2M8mQfe7D0f
7rYff8NfuBYoXg6SLgbL50KU06GqCYRmLEw3HKbrj9R2R2vaYjVN8eo/SFVN
ovJHsrIiRfEBJX+dKnuWJn2YLrmdIb6WKSrJFBZkCfLz+LkF/OxiXmYJL+0q
F1XOSbrFRt5jxz1iRT9lRrxkIN7Sgz7S/Csofj/Ifr+IfvV43xbYtwv07cf5
jmB8pw595/d8V3Z8tzb99tcCMcsI3EIkNBODn4wnjiZSBlNovWmMrgx2Wxa3
KYf/O09Uc15yF3B/Brq/h9y+QW6/INdG2LUDdunDu4zinafxzot4p3WC0y7B
EU1whAgOBNiJDLpSse50tCdr35uz68vb8hOsB4hWAyVLQbKFYPlsiHIqVD2O
0I6G6YbCtb1R2s4YTWucuiFBXZeoqk5Sfk9WfEbJ36XKXqbJnqRL72dIbmaI
rmYOJVH7UIyuNFZbBqcpm/8nV1iTL/6hP9WCrm9A1y+QSxXk8gdyboWde2Cn
YbzTJN5xHu+4infYJjgcEuwBgj0e70ACnSk4VzranXngyd715m758Df8hKv+
4uUA6UKgfDZIMR2smgjRjIZqhxC6/nBtV5SmLUbTFKf+Ha+qQSorE5UVyYoP
KfLXKNmzVOnDNMntdPG1dFFJhrAgU5CXw8/J52dd4GVc5KWWclOucRJvsBPu
sGIfsKKeMMNfMELf0APf03y/UHwryT41RB/9KaYZ8ukEvPuw3iNo78kD7/k9
n5Vtn61Nn/21AMxSCG4+ApqOxk/EEUeQlIFkWk8qoyOd3ZLJbcjm1+WKqvRn
RsD1Gej6HnT5Brn8gpwbYecO2KkfdhrFO07jHRfxDut4h12CPYZgDxHsCbAj
GXChYt3ohx6sfS/Ojjdv01ew7idaCZAsBcrmg+QzwcqpEPV4qGYkVDeI0PZG
aDujNC0x6oY4dV2CqipR+T1J8TlZ/i5F/hIle5IqvZ8muZkuvpoxmEjtTWF0
prJa0zkNWfy6HGG1/rwAuDwGnN+AzhWgUxXkVA85tsGOPbDDMOwwibefx9uv
4u228XaHeDuQYIuH7UmgIwXrQke7Mfc92Dte3C1v/rqPcNVPvOQvnQ+QzwYq
poJU48Ga0RDtUKiuL0zbFaFpi9I0xqh/x6lqEpSVSGVFouJDkvx1iuwZSvoQ
JbmdKr6WJipJFxamC3Kz+Nm5/MwCXnoxN7WEm3yVk1jOjr/FirnHinzEDHvG
CHlFD3hH8/lE8f5G8q4mev/GezVDXh2AVx/WaxjtNXngNbfrtbLttbXhvb/q
j1kMxs2FQ1NR+PFY4nACpT+J1o1itqexmzO49VmC2hzRzzy9jstz0PkD6Pwd
cvoFOTVCjh2wYz/sMAo7zODtl/D2G3i7XbwdBm8LE2wJkAMZcKJiXOmH7qw9
D862F2/TR7DmK1rxkyz6S+cC5DOByskg9ViwZiRENxiq7Q3XdkRqWqLVDbHq
unhVVYLye6Lic5L8XbL8ZYrsCUp6P1VyM018Na0fSe1JZrSjWM3p3PpMfm22
8Geu5Bbg9ARwegs6VoCO1ZBDPeTQBtn3wvbDsN0UbLeAt13D2+7gbQ7xNiDe
Bg/bkgAHCsaZfujK3HNn73hwN734697CFR/xkp903l8+E6CYClSNB2lGgrSD
wbq+UG1XuKY1UtMYrf4dq6qJU1YmKCuQig+J8tdJsmfJ0ocpktso8fVU0eVU
YWGaIDeDn53Nz8jnpV3goi5yk0o5yGvsuJus6LvMiIdMxFNG8Eu6/1uq90eK
11eSVxXRsw7v2QR5tgMevViPYbTHxL7n3K7nypbn1obn/oofejEINxsGTkbi
x2KIQ/GUvkRaVwqzLZXdlM79nSWoyRFV5kruAU7PAacPoON30LEWcmiCHDph
+37Yfgy2m4HtlvC2G3jbPbwNFm8D420IkD0Z50jVT+DAlbXrztn25G14CdZ8
RMu+kkU/6Zy/fDpAORmoHgvSDAfrBkK0PQhtR4SmJUrdEKOujVVVxSu/JSg+
IxXvkuQvk2VPUqT3UyQ3UeKy1L4EWlcSoy2F1ZTG/ZPBr8kS/ciR3MY5PgUc
3gIOX0H7atC+AbJrh+x6YdsR2HYKtlmAbdbw1jt4azTeCsRb4SEbEs6egnGk
H7gw91zZ2+7cTU/+mpdwxVu86COd85PN+CsmA1RjAZqRQO1gkK43RNuJ0LRG
aBqj1L+jVdWxqso4ZUWC4gNS/jpR9ixJ+jBZcidFfD1FdBklvJAqyEnjZ2Xy
M3J5qQXclCJuUgkn4So7tpwVfZsZcZ8Z+pgR9Jzm95rq9YHiWUHy+EHwqMW7
N0Lu7YB7D8Z96NB9Yt99bsd9Zctja91jf8UXvRCEm0FAExH40RjSYDylF0nr
TGa2otgN6by6TEF1tuh7rvQ+4PgCcPgIOlSC9rWQfRNk1wnZDcC2Y7DtLGyz
DNts4q338NZYvBWMtyaAtmSsAxXtRN93Ye26cbY8eBueglUv0bKPZMFXOusn
n/ZXTgSoRwM1w0G6gSBtT6i2I0zTEqGuj1LXxqiqYpXf4hWfExTvkPKXibIn
SdL7yZJbKeIyVG8CrTOR0ZrCbkzl1qXzqzNF37Mld3D2TwH7d4DdV9CuBrRt
gGzbIZs+yGYUtp6GrRdhq3XYahdvicZbQnhLAmhNwtlR0A70Ayfmrgt72427
4c5f8xQue4kXvKVzPrJpX8Wkn2rMXzMcoB0M1PUGaztDNa1hmsYI9e8oVXWM
qjJWWRGn+JAgf42UPU+UPkyS3EkSlyeLSlOEF1IEuSh+Zjo/PZuXms9LKeQm
XuQklLJjr7GibjLD7zJDH9IDn9F8X1E931Hcv5DcKwluv2C3BtCtDefWg3Eb
OnSb2HOb23Fb2XTbWnM/WPZBzwfipkOh8Qj8SDRpII7Sg6R3JDGbUZz6NF5t
huBnlvg6zuEBzv4lYP8RsKsE7epA22bItguyGYBsxmHrWdh6GbbahK328ZZY
vCUMWxEAGzLWnnroSN93Zu24crbceOseglVP0ZK3ZMFHOusrn/JTTvirRwM0
QwG6gUBtT4i2A6FpDlfXR6pro1VVMcpvccrP8Yp3CfJXSNnTROmDJMmtZHFZ
ck88rSOR0ZLMrkdxa9MFPzNF37Kld3F2zwDb94DtN9DmF2jTCFp3QNb9kNUo
ZDUNWy7BluuwxS5sgcFbQLAFAbQiYW0paHv6viNz15m95crdcOOvegiXPMUL
XtJZb9m0j2LCVzXmpx721w4E6HoDtZ0hmlaEpjFc/TtSVR2lqoxRVsQqPsTJ
38TLnifIHiGldxMl5Uni0mRhUbIgL4WfmcpPz+Sl5vKSz3MTizjxJeyYq6zI
cmbYbWbIA3rAE5rvC6rHW4rbJ5Lbd4JrDexaD7q04ly6MS6DBy4Tey5z264r
m65ba24HS97ouQDcVAg0Fo4fjiL1x1K6EuhtScymFM6fVF5NuvBHprgcZ/cQ
Z/cKsP0E2P4AbepAmxbIuhuyHoSsJmCrOdhyBbbcgi32YQsc3hyGLImANRlj
Rz10YOw5sXZcOJuuvHV3wYqHaMlTMu8tnfGRT/kqx/1Uo36aIX9df4C2O0jb
HqppDlPXR6hrI1VV0cpvMcrPcYr38fJXCbKnSOmDRMntRPG1pO44WjuS2ZTE
/oPi1aQJfmSIy7C293C2z3E2HwDr74B1LWjVBFp1Qpb9kOUYZDEDWyzB5huw
+R5sjoXNINicAOh1bKiHdvR9B+aOE3vLhbvuyl9xFy55iOc9pbNesilvxYSP
atRXPeSnHfDX9QZoO4M1raGaxjD17whVdaSqMlpZEaP4GCt/Eyd/Hi97lCC9
i5TcSBRfSRQVJwnzkwWZKfy0dB4qi5ecx0UWcuIvsmNKWZHXWGG3mMH3GAGP
aD7PqR5vKK4fSS7fCC7VsPMf0LkF59yNdh48cB7fdZ7bdl7ZcNladT1Y9EbP
BuAmQ6DRMPxgFKk3ltoZT29NZDUmc+pS+dXpwu+Z4hs420c4m9eAzWfA+ido
/Ru0agGtuiHLIchyArKYgy1WYPMt2PwANgNgMxiyIOL0OrbUA3vGniNr25mz
6cJbcxOsuIsWPSRzXtIZb/mkj3LcRzXiqxn00/X7a7sDte0hmmaEpj5cXRuh
qopSfo9Wfo5RvI+Vv4qXPYuXPkyQ3EaKryd2xtFbE5iNSZy6FF51qvC7/iSL
tbmPs36Bs/4IWFUCVrWgZTNo2QVZDEAW45D5LGS+DJttwmb7sCkWNoUhMwJg
ScJYUw/s6Hv2zG1H9qYzd82Fv+ImXHQXz3tIZzxlU16KcW/VqI96yFfb76fr
8dd2BGlaQjSNCPXvMFV1hKoyUlkRrfgYo3gTK38RJ3scL72XILmZIL6KFF1M
FJ5PFGQm8dNQPFQGLzmHizzPiStix5SwI6+yEDeYwXcY/g9pPk+p7q8oLu9J
zl8JzlWw02/QqQXn1IV2GjxwGt91mttyWll33lpxPVjwwsz44yaCoZEwwkAk
qSeG2hFPb0Gy6pO5tSj+zzThV/2nBtb6Mc76DWD1BbCqAiz/gJatoEUPZDEM
mU9C5vOQ2Spstg2bHsKmAGyKB82JOCsy2oZ2YMfYdWBtO3E2nHmrroJlN9GC
u2TOUzrtJZ/0Vo55q0Z8NIO+uj4/bXeAtj1Y0xyqqUeoa8NVVZGq71HKL9GK
9zHy17GyZ3Gyh/HSOwmScmRHLL0lgVmfyKlN4f1MFX5LF5djrR7irF7hLD8B
lj8AizrQogU07wbNByGzCchsDjJdgUy3YJN92AQHm8CgKQFnQUbrdWzpu3od
B/aGE3fNmb/sKlx0E8+5S2c85JOeinEv1Yi3eshH2++r6/HTdgRqWoI1DaHq
3wh1TbjqR4Tya5TiY7TibYz8ZazsSZz0fpzkVrz4WoKoBCksRAqyE/lpyTxU
Gi8pi4vM48QVcqIvsiNKWYjrzOBbDP/7NO8nVPeXFKd3JKcvBMefsONv0LEZ
69iFdhjcdxzfcZzbclxZd9pedjmY98JM+wPjwdAwgtAfSe6OobbHMZqQrD9J
3BoU/0eaqCJDchtr9QRn9RZnWQFYVgMW9aBFG2jeC5qPQGZTkNkCZLoGm+7A
JmjYBITP4QEzItaScmhN27dl7Nizthw563odF8GSq2jBTTLrIZ32lE94HekM
e2sGfbR9vtpuf217oKY5WFMfqq4NU1WFq75HKr9EKT5Ey1/HyJ/Hyh7FSe/G
S24ktMfSmxJYfxI5Ncn8HyhhRbrkBtbyEc7yNc7iM2DxEzD/A5q3gmY9oNkQ
ZDoJmcxDJquQyTZ07gA+B8DGeh0i1pyMtqLu29B37VhbDpwNR96qXsdFuOAq
nnOTTrvLJz0UY56qES/1oLe230fX46vtCNC0BGkaQtS/Q9U1Yaof4cqvEcpP
UYp30fKXMbKnsdIHsdLbcZLr8eLL8aILCYJcJD8NyUel8JLSuchsblw+J7qI
HVHCQlxlBt9g+N+lez+iuj2nOL4hOX4mOPyAHeoA+2asfdeh/cC+/fiOw9ym
w+qaw/aSy8GcF2bKDxgLgocQhL4Icmc0rTWO0Yhk1yVxq1ME31NFV7CWd7CW
T3EW73AWXwHzGsC8ATRrB836QNNRyHQaMlmETNahc7vwOTR8DoSOdTAWRzp7
xzqbDpx1J96Ks2DJRTSv13GXTXnIJzyVo15HOgPe2j4fbZeftj1A0xykqQ9R
1yJUVWGq7xHKL5GKD1GKN9HyFzGyx7HSe3GSm3GtsYzGeFZdIrc6mf8dJfqc
JrmFtXiCM3+DM68AzKoAs3rAtA007QVNhkGTKejcAnRuDTLegYwPIWMQPgsD
Jkc6h5bUPWvGji1ry56z7sBbdRIsOYsWXMSzrkc6E3odD9Wwp3rQS9vnre32
0Xb4a1oCNQ3B6t8h6hqE6keY8mu48lOk4l2U/FW0/Fm07GGM9G6s5Eac+Eqc
qDhemB8vyEjgo5J4SSguMpMbl8uJLmBHXGQhSplB1xn+t+neD6huTymOr0kO
nwj2lbB9LWDXhLXrPLQb2LMb37af27BfXbXfWXQ5mPXCTPoBo0HwIILYE0Hu
iKa1xDHrE9i1SbyfKYKvqfrXrsU9rMVznPkHnPl3wOwXYNYEmnaApv2gyRhk
MgOdW4LObUDGe5AxBj4LQcZ4nClJr3NgRduzYWzbsTftuWuOvBUnwaJex1Uy
4yabcpePeyhHPVVDXpoBL22vt7bLV9v2L51gdW2oqhqhqgxXVkQoPkYq3kbJ
X0bLnsRIH8RIb8e2xDLq49m1idyfyYKvKNEVjPkdrPlTrNk7nNlXnGkNYNoA
mLSDJn3guRHw3DRkvAgZr0Nnd6GzaMgIhM7icSZEjBn5wJKm19m2YW3acdYc
eCuOgkUn0fyxzpSbfMJdMXqsM+Cp7fM60mn307QEaBqC1L+D1TWhqp8I1bcw
5edwxfsI+etI+fMo2eNo6b0Yyc0YcVmsqCROWBgnyI7noxJ4yck8ZBo3LosT
k8eOuMBClDCDyhj+N+le96huTyiOL0n2Hwh23yG7X4BtE8a289B2YM92Yttu
fsNubcVud8HlcMYLO+EHDgfB/QhidwSlPZreFMf8k8CpSeRVpgi/pIqvY80f
YM1f4sw+4swqAdM6wKQZMOkCzw2A58ZB41nIeBk6uwmd3YfOYiEjCDQmYE1J
aHPKviV915q5ZcvesOeuOvCXnYSLzqI5F8mMq2zSTT7urhzxUA95avr1Ol7H
Ov6a5kBNfZC6NkRdHaqqDFNW6PczQvEuUv4qSvZUv5/R0jsxTTHMP/HsGiSv
Mln4Rf95ijG7hzV7jjX9gDP9jjP5BZg0Aec6QON+0HgMPDsDnl2CjDYgoz3I
CAOdgUAjPO4cEW1GObCg7Vod6WzYctbsecsORzpzzpIZF+mkq3zcTTnqrhry
ONbx1HZ7a9t9NS3+moZA9e8gdU2I6meo6htC+SVM8SFc8SZC/iJS9iRK9iBa
ejtacj1GXBojKooV5sXy0+P4yQk8ZAo3Pp0Tk82OPM9CFDODSxn+5XSvOzS3
RxSHFyS79wTbb5BNDWDTiLHpPLAZ3LWZ2LJdWLddX7bbm3c5nPbCjvmBQ0H4
PgSpM4LaGk1viGXVJXCqEvnfkoWfUPoHu9lDrOkrnOlnnMlPwOQ3cK4FONcN
Gg+BxhPg2Tno7ApktAUZHUBncNAZGDhLwJqQDs2pep0dvY4Ne93uSGfJUbjg
JJ51lky7yCZdFWNuyhF39aCHpt/zSKfTR9vmp2kK0NQHquuC1dUhqh8I5dcw
5af/7mek7HGU9F50QwyrLp5TheR/SxJ+SpFcx5g+wJq8xJp8xJ2rxJ2rA4yb
AeMu4OwgeHYcNJoFjZahM5vQmf2jNkMIMMJjz5EOTSn7FrQdK+aWNXvdlrtq
x1tyECw4iuacJNPO0kkX+ZircsRNNeSu6ffQ9npqu7y07T6aFj9NQ8CRzq9g
1c8Q1fdQZQVC+TFM8TZc/ipC/ixS9ihSejdKcjNaXBYtuhQjLIgRZMXyU2J5
iUhuPIobk8GJzGWHFbKCLzH8y+jet2huDygOz0g2bwk2XyHrGpx1I8a688B6
cMd6ctNmcc1mY8lub84VPemFG/WDBoMIPQhSRwS1OZpRH8v6lcD9kSioSBZd
xpjewpo+wZq8wZl8wZ2rAs7VA8ZtgHEPeHYYPDsJGs2DRqvQmW3ozCFkCECG
MO4sAWNCPjCj7lnQt62YmzbsNVvuij1/yUE473ikM+UimzjWGdbrHE+gx1Pb
6a1t89U0+R/rBB3rHO/n5//uZ4TsSaTsQVR9DOtXPPcHkl+RJLqEMbmJMXmE
Pfcae+4zzvgnzvgPcLYVONsNGA2BRhPgmXnwzCpouAUZHhy1Geh1CJgjHeqe
OX3Hkrmp17Hhrtjxl+yF8w6i2SMd2cR/dI7a3LW9Hv/Wadbr+Kt/B6p/Bamq
glWVxzqfEIr3YYrX4cd5EbIHkdLbkZLyKPGVKFFxtDAvWpAew0+K4yUkcmNT
OVFZ7LB8VkgR07+U7l1Oc7tHcXhCsnlDsK6ArKpxVo1oq859q6Edq6kN66VV
661F+/0ZV/SEF27YH+oPJnQhyG0RtMZo5u9YdnUC73ui4Euy+ArG5A7W5Bn2
3Dvcua844xqccQNwth042wcajYBG0+CZRfDMOmS4CxmiIQMQPNIhoo91di0Y
21asDWvOmi1v2Y6/6CCccxTPOEmnnGXjLopRV+Wwm3rAXdPnoevx0HZ6aVv1
On6a+gB1XaC65ng/v4Uqv/xrP8Pkr8LlzyJkjyKO2uJ535GCz/pPc8y525hz
T7HGb7HGFbiz1biz9YBRG2DUC5wZAc9MgYYLoOEaaLADGRxCpwHQAMYZEdDG
5ANT6q45fduSuWHFXrPhLtvyF490xDOOkikn2YSzYtRFOeyqGnTT9Llre9y1
nZ7aNm9Ns++xToD6V6D6SCdE9TVU+TlU8QFxnBcmfxauz5Pei5DeipRcixRf
jhRdiBLmRPFR0TxkHDcuiROdxg7PZoUUMAMuMbyv0dzuUBwek6xfEay+QJbV
OMtGtGXXnuXwtuX0utXyitX2vMPBtBtmzBsY8od7g4mdCEpLBL0+mlkby/mZ
wP+aKPyYLLmGOXcfe+4F1vgDzvg77mwt7mwTYNQJGA0AZ8ZAwxnQcAk03AAN
9iADLHQaBAzx2LPEw3OUfTPajjljy5K1bs1ZteEt2QkW7EVzDuJpJ+mks1yv
M+KqGnJVDxxNQNftoe3Q6/gc6/gf6wSpfgarvocoK0KP9xOheBMmfxEufxp+
1BbP+4oUfkzSv3SM72GMn2PPfsCe/YYz+oUzagTOdABn+gHDUdBwGjRYAg3W
wdO74GnMUZsBjDUiHhqT902oO2aMLQvWuhVn1Zqn11mwE87Zi6cdpZNOsnFn
xYiL8qjNVdPn9n/r+P1HJ0j1I1j1LUT5JUT5KfQ4DyF/GSZ/GiZ7GC69Gy65
GSEpixBfihAWRAqyIvlJUbz4OG5MEicinR2aywosYvhcobndpDo8JFu9JFh+
hiyqsRaNhxbduxYjW5aza5arS1a7c46Hk+7YER9wIADfHUxqD6M2RTB+R7Nq
4riVCfwviaJL6HM3MMaPsMavsGc/487+wBn9xhm1AGe6gTODgOEEaDAHGqyA
Blvg6X3wNA46BeEM8ZizpINzlD1T2rY5Y/NYZ0WvYyuYtxfNOkj0E5hwko8d
TUA16Krud9P2uum63Y91vDVNvsc6AeqaQNXPIFVlsOpriH4/lR9CFe8QitcI
+fOw6lhuZTz/i/6jHG1cjjn7EHP2FdboE9boB+5MHe5MM2DYBRgOAAbjoMEs
eHoZPL0JntoHT2HBUxBggMcYEQ+MKXsmNL3O5rHOijVvyUYwbyea1es4SCcc
5WNOihFn1aCLut9V0+um7XbTdnhqW700TT7HOv7qXwHq6kDVjyDV92BlhT4v
5Dgv9CjvBUL+FCF7GCa9Gya9GSYpCxdfCheejxBkRPASInmxcZyoZHZYJivo
PMP3Et39OtXxPtnyOcHiE2hejTVvOjDv2TEf27SYX7XYWLDZm3FGj3vghnyh
vgBCZwi5JYzWEMmojWZXxfG+JQg+JYpL0ca3MWefYM++xRpV4IyqcGfqcWfa
AMMewHAYMJgET8+Dp1fB09vgqUPwFACegnGGBPSRDnXXlL5tztywZK9ZcZdt
+Iu2wjk70Yy9ZMpRNu4kH3VWDrscTaDPVdvjpu1y17Z7alu8NY16HT91nb9e
52g/K4NU344n8ClEoZ/A21DFK8TPWN7XBMHHo7aztzFGTzBGb7BnvmDPVOEM
/+AMWwGDHsBgCDg9CejbTq2Cp7bBkwfgSQA8CeEMCGgjkl5n14S2bcbcsGCv
WXKXrXmLNoI52+M2B+m4o3zUSTH8Lx0XTY+rrstN2+7xb5163//R+Rn4n7xg
fZ7yQ4jiXYjidaj8Zaj8aajsUaj0HkJ6EyEpCxNfChPmhwvSwnnxkdzoeE44
ih2czfS7QPe4SnW8Q7Z8hjf/CJpVY8ya9836ts0n1s2Xli225uz2J10wo57A
gB/cHUhsD6U0hdP/RLJqYjiVcfwvCcIPiZIyzNl7GKPnWKP32DPfcGd+4Qwb
cYYdgEEfYDAKnJ4GTy+Cp9bBU7vgSTR4EgROwVhD4qERef8cdceUvmXOXLdg
r1pxl6z5C0c64ml7yaSDbNxRMeKkHHJWDbho/qXT6a5t89Q263V8NH/+pROg
rvrXfgapvgYrvxxNQPE+RPE25F9t7/VtaKN7mDPPMWfeYw2/YQ1rcAYNOIN2
4HQfcHoEODUFnFoAT66BJ3fAE2jwBACchLEGhMMz5H1j6o4JfcuMuW7OXrXk
LlnxF2yEc7biaTvJpL1s3EE+4qgcclINOGv6XLQ9rtpON22bh7bF66hNr1Pn
p/7lr64OONL5EXicF3SU9zlY+TFY8T5Y8SZY8SpY/jxE9jhEdj9EeitUci1U
fAkhzEcIUsN4sRHcyAR2aBorIJ/hWUJ1vEW2eII3+wiY1qBNW/dMBzfNplfN
Vhctd2ccDsfdsEPeYK8/vjOI1BJKbQhn1Eaxq2K43+IFn5D6x5rRDYzRQ8yZ
V9gzn7CGP3CGdTiDZpxBF3B6ADg9DpyaBU4tgyc3wZN74AkseALEncJjDIkH
RuS9c7RtU8amGWvNgrNixVu0FszbCGftxFP20gkH2ZijYthJOeh8tJy9Ltpu
V22Hu7bVU6PXadDr+P5b518TONrPIGXF8QQ+BSs/BH+NE3xM0LeduYE+8xBj
+Apr+AlrUIk1qMOdbsad7gRODQCnxoCTM8DJJfDEBnjiuO1vEHcSxhgctxlT
t02O28w5K5a8RSv+vLVw1lY8ZSedsJeNOSiGHZWDTup+5/+0uWlbPTTNXv9p
+7eOuirgSKdSDxR4BHRUGKT8FKT8GKR4H6R4E6R4GSR/FiR7FCS9GywpDxaX
hAjzQ/koBC8mghOOZAVlMryLaE7lZIvHeNNPOJPaA5POHdPRddP5ZbPNOZv9
SWf0iAfQ7wN3BxDbgilNCPrvCGZNFKcylvclXvgeKb6CPnMHc+YpxvAt1rAC
a1CFM/iDO92KO90DnBoCTk0AJ+eBk6vgiS3wxAH4Nw78G8KewqMNSftGlF1j
2pYJY8OMtWrBWbbkLVgL5mxEM7aSSTvpuL181EEx5KgacFL3OWt6XHRdrtp2
d22Lp6bpWOe3r7rWT13zv/czUA/07wl8Dvr87zbDOxjD4zaDozbs6eO2U93A
ySHg5ARwYg44sQL+vQX+fdz2F4Q9iUcb/K82U9aq+XGblWDOWjRj8/9qc9Z1
uRy3eWiavDT1/2k70vE/0vn5v4COIgNUXwNUFQHKLwHKT/7KD/6Kt/6KlwHy
pwGyBwHSm4Hi0iDR+WB+Sig3KpIdksz0zaM5XyWbP4JNPmPP1e+d6900mVo1
XV2w2J1yOBx1xQ56QT1+hI5AcnMItT6M8SuS/TOa+zVW8CleVIw+cx1teB9j
+AJj8AFr8A17+hfudCPuVDvuVB9wcgQ4OQWcWABOrIF/74B/o8G/AeAEjDlF
ODQk7RlRd4zpmybMdTP2igV3yZI/byWctRFN20om7GRj9vIRB+Wgo6rfSdPr
rO120Xa6atvctc2emkZv/QTU/5fO8e3/dwL62/8W8CFefx4wLEcbPsAYHLed
Pm47ddx28rjtxHHb32uAvu2vQ/AvAPgbOmoz0LdR/t1myl4x5y5ZHLdZi6Zs
JBO2R23D/21z0nY7azv+09bgpfnjo677b9t/dI4K/3X5H19+R1elr+q7r+qr
j+qLj/KTj/Kdr+KVr/yJn+yuv6QsQFQYyE8O5oZHsQLS6a4lZLOH0Lmvh8Yt
2+dG1s4tLppsz9gejDljhjzAXh98ZwCpJZjSgKDXhbOqojjfY3if44TvE/Tv
XMNbaIPHGIPXmNOfsad/YE/V4U4140524U4OACfGgBMzwN9LwN8b4F974F9Y
8C8QdwJGnyYeGJJ3jajbxvQNE9aaGWfZnLdoyZ+zEs5Yi6dspeN2slF7hX4C
A47qPif9cmqPlvP40dGkn4C35vfxBH4dT6Aq4P85gbcJkitog9togyeY02+O
2k4dt508bjtx3Pb3cdtfG4C+7R8Y8B8g7m8YfYp4YPCftnPMNVN9G3fR4t9t
kzbScVvZqJ1iyF454KDuc9T0OGm7nLXtrtoWd02jp6b+uK3WV13jd0zzPzrH
nXovv6Nf1ejjfdS/vNW/vNQ1nuoqT/UPD9V3D9UXT+UHT8UrL/ljH+lNX3Gx
Pz8piBMSx3AvJJk80n+o7Z7tWzeeWzq3NWO9P+6EGXIHer3hTn9iaxClMYT2
O4xZHcGujOZVxAr0y1l8aHANbXAPY/Acc/od5vRX7Klq7Kl63Mk23Mke3Ikh
4MQE8Pc88PcK8NcW8NcB+A8c8A8IewJ/eJq4b0jZMaJtGTPWTVirZpwlc96C
pWDWSjRtrV9O6ZidfMReMeig6ndU/3s5XbRtbtpmj+Pl9FbX+RzT/GsC/9b5
z+3/awK+lw4NytGn72NOP8eceo859RV7shp7sh53og13ogf39xDw9wTw1xzw
1wrwjy3gHwfAURuI/Rt/eOp/tZ1jrZoet1kIZi2P22ykY7byYTvloL2q30Hd
66jtcjpqa3XTNB23/fZW1/r8l+bfO/OvNv1P9Lukz67Tv5j0//76NdP/iZum
0VXT4KKpd9b8dtbUOqurXFTfXVWf3RSv3eUPPSVXfPjIAKZ3BuHs832jjvWz
swvG21M2B6NOmEF38IjGj9gaeEyDYNSEs39Ecr/G8D/FCt/GS0rRBrfQpx9h
Tr/CnPqEPVWJPVmLPdmEO9GBO9GH+3sU+Hsa+GsR+GsN+McO8A80+P8BuL8g
zEnCwWnSniF1+yx905i5ZsJeMeMumvPnLYUzVuIpa8m4jWzU9n8t5/EE/mc5
vTRHNL7/vxPQ336tr36B/08nZxnVZrq++2/nv2cqSBKsEBLc3SHBvd5x6XSm
nXbq7p26OzXqVGgpBUqhlLpQoLjES1tckuAW4Zwv53nu931DAnRmn7MWa9aW
mb2u4Xdf133dTzJ7tcB8s2DaLuG0Q1ibGWgzBW0moM0YtBmBNoZAgrQZ1QlN
CW1NlSzQZi0tssXa3jj0vHLse67R5qbIcVc98FBneo7c9xpJ8xlJ9VffDFSn
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
dX2Lgh3RiZPFzJRGzusI+6GdM789aGGr/18t3qua3dc3OW9ttAM61qN0IHWn
vhRN0dAR4MmZUkfQqWA0kZNjBpOD6fQ9ZpGTkwGTcxtNjhPWdtYDJsd3aI//
4LbAgQ3B/SvR5HB75od1fxfeOSMCT07MdCmiE/59B/eX9mBEZ0mrz4pmj7VN
LhQd68MfrU9JrC6IrK4JrFJrre5XW+VUWD0ptXpdbFX0zqr8jV31C2feE3dB
nrf4od+HzMCP94Lr73Abb4bhcLuEwi0ahxtqbkcT8Or5i2e0hs/YwmfsEtAP
jtIxwHSEo3Rei6YU4bWL6EwSorXLn/oR06HWbpFpR8E0CHZmzxNLCHar4Sxr
5X0b9V3bkZsOONgvuCtPe0Kw+w3tDBjcEtS/NqRvGad3YWj3z2Eo2OUJkfK4
eFk0QedHRKcN0fFbqqHTgOns/2R9rM76jMTq0n2RnobOOxHh60mkr2v10eRo
fN2B6IxODmsgBybnPkzOLXs8OcluyiSkzXv4gO/QLjQ5gQPrgvuWc3oXcXt+
Cev6JrwzMUIeh+jMkEbO7Qj7voPzS3vQH23+unSs9xB0PlidF1ldFVjd5lml
V7MfVrLzy6xevrd6V2hV9tam6qVT7VM3/mNPUY6vJCvg4/0gCLfQpuvhLZch
3M7GyE/F4dVzMBEVA6PVfMZmPmOngH5AQDsOdC5hOvoUnakkHdFkRKcWBTum
o/exxqC+kt5YZoSCva3QVPp2Ggr2rufMXkTnEQp2TEeVbjNyx1Z9AwW7i+q8
u/KUl+KIz/A+v6G/AwY2BfWvCcHB/nto949hEOxR8lhEZ5Y04puO0B/bQ+a3
BS7CdLyAjhPQsUZ0jtZZJUmsLgKdqRSdyRo6EopOYzmjucSYmhxzanJY4ybH
WXXBDU/OUe/h/ZrJCYbJ4cLkhMPkxMmiZ0gj5oKvf20L+qPVf0mLN0FnU6M9
QefQR6uTiI7Y6oqAfYvHvlfDflDJflzGflHCLiiyKimwrnzlUPPMhY//QQMf
8QMUboEQbtymlLCWKxFtyVEd52Jkp+I6j8V3H0rs/ZNntIrP2ITo8Ak6huPp
PBNNeSOaUiyaXCGexMNrd/IHik4T0IFgx3S6nzF78zGdoWwrRaa16p4NBLuj
6pKL6py78qSX4rDP8F6/wR0BAxuD+leFQLCHdv8QBsEeLYtNkEXNkoYjOj+1
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
           "], {{0, 172.}, {138., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {138., 172.}, PlotRange -> {{0, 138.}, {0, 172.}}]], 
       EdgeForm[None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxNmHd8j2cXxn+PGXvGHrESOyIJsYUIEYkIEjMkNhEhhNh771GrqNIWrVVV
WoqitKpGlaKtWWqUDtRo0XN9nu8f/rg+Oe917nPu+/o+Km9bLmlIbEomj8cz
wPF4sthP++HR/y5i8qbObCqKp1rniuGpzmoqjqc6m6kEnursppJ4OUw5TWVM
pU1eeKpL0ctlKsuZ7JwpxQ71cpt8OFPQVMjkZ/I15THlNZU3laPOZ6qApzq/
qSKe6gKmSngF2OmL503uqqYq3FXYVJk7c3NnOd5UBC7VmCkKl+p4xeBSA68E
ufxNNemVoK7BT/Wam5rBQawCTLVgJA6BptrsKkXPnzfpbcGmIGbLcDaAnrjU
4Ux5uNTFqwCXEDw/sjc0NYCTH3V9mPlS13sjg94eCkNxaWxqxO5KnA2hJ05N
OFMNTk3xqrMzFK8sGYNg4E/2MJhFm9qaepmSyKzs4aYW1JpriRfIrlZ4QXCJ
wAuGS2u8EN4eZWoDoxDqSHr1eUcUs3XptabXgDdGw0nvjjfFwUgcYk3tqMWh
PV4TOHTAawqbjnih7IzDCyN3Z1Mn7gqjjuct+rYxvKkFXLowEw6Xrngt4dIN
L4JcCabu9CKou/FtAtgbBgex6mnqAaNovlUiuyLpJfAmva0337QNM4nsaAeX
vqY+1OLSD689XPrjxZM92TQITvHUA2EWRz2ADMoy1JTKrLgMZkcHZgZwR2c4
pXCmC5yG4HVlZyped3IO444Esqfh9SDncLxEWKWbRtBLpB6OVM8yzYSZ2I0y
jYSJOIwxjWZXL3rpZFCWcaaxMO3L2Qxm+9Mbw1mxGs/MILhMNE0gs3JOMU2m
VvapeKnknoY3lNzT8ZLhOImdA7ljAncOg8sMZtJgMBPvC9MB0/ems7BRztkw
GgmbuaY55FSuBab5ZB5NPY/ZkZydDQflXmRayJv0tiWmxewaS28BGZRlmWkp
s+M5u4ieOL3FmclwWo43BU4r8GaQ9W3TahjMoF4Fw+nUK2GZwt5JzIrDGnZM
ZWYld8wi51rOzCb7Orw5sHsHbx6s3jWtp1buDXgLYLERbzGsPjC9Ty0um/CW
wmEz3jI4bMFbSbZtpq0wXMyu9zgrTh8ys5xcH+GtYMdWvFWw287Ojez5zLSX
zMq5y/QxTNZS74ThGuodzOotn7NjHaw+YcdqZnZw53o4fWraTS1Oe/A28Ka9
ePs97p9x/dk+w13ito87dzN3wvQNDDczs59vsYh3boSJOBwyHYSLOBw2fUlv
K/UhdonrAXZuI8cRZraT7SjeFu44yMwOWH3FmZ2wPIa3F27fmU6SeS/1t2Tb
Q32C7JvIto9ZcTjFjn30xOo030Df4mvTce7eRX2M2X2c1Q79sz3R4/65XEIG
ZTnncf+OaWT/h7qxKdbUznEZidV50w/U4nIB7zBcfsQ7AoeLeEfhcAnvOG/9
2fQTbzxOfZlvLA5XTL8we4zeJXpidZUzZ3n3bdMtuIrTddM1auW+gXcKFjfx
TsPyV7wz7LyFd47cd0y/cdc56tu85SR3XeWsuNxl5jxc7uFdgMt9vIvkemD6
nd5F6vv8VM/Rv+g4Lgex+sP0EEbi8LfpL3ZdpveAN+ltj02PmBX7P9lxDS5P
OHMdLv/g3YDLU7zbZP/X9AJOt6mfw+wW9bM3Mujtr5kVl//YcZOZZ9xxB04v
OXMXTq/w7rHzNd4VMj6CwQOyZ3JcZnlMeU3lTeUcN7OyZ7E6s+My01w2q7M6
bq1d2R3XewQXL8f1HsMlh+N6T3l7bqtzOS4jeapzOm5PLPQOnXkCR/W04zns
8vJWD+/2NhV2XEbikN/qfI5bi0MBx/VewqGg43qvYFPIcb3XsNcueZnIXdRU
hLsyUevOF3yXfHDTWbEqxkxWuJQwFacWl5J4XuQqbSpFz4taZx7y5y4z9+aE
W1lTGRjl4Vv5sCsnvdK8SW+rwDfNxYwPO/LBpSJn8sOlEl4BuPjieZO9qqkK
nLypK8OsMLUfGZSllsmfWXGpxo6CzPhxR1HYVedMcTjVNNWgLsmumuxWzgDu
KE322nhlyBmI5wOrYFMQPR/qQKS6laklzMSlrqkOTMShnimEXeXpBZNBWRqY
6jNbkbN1mfWlV4+zYtWQmSpw0e+URmRWzmamUGplb47nT+4wvFrkboFXFY5N
2FmZOxpxZwBcwpmpDYOWePpdd8jj/j2tv8eDyBkBozrkijS1JqdyRZna0Auh
jmS2Dmcj4KDcbU3RvElv0+/SGHbVpxdFBmVp77i/cxswE8MO9ZqaOnAmFE5x
po7U4hSPF07WrqYuMAin7gzDFtSdYFmdO5owKw7d2NGcmU7c0Yqc3TkTQfYE
vNZw6YEXCaueeG3InYgXBYskvBhY9TH1phaXvnixcOiH1x42/fE6kW2wKRmG
MezqBTNxGui4/w0xjlyD8OLZkYzXGXYp7Exiz0hTOpmVc5hpKEy6U6fCsBv1
EGb1llHsSIBLGju6MDOEO3vAaThnesJpBF4ib0rHG20aY1pgms9d4pbBnWnM
zTTNgGE/ZkbzLdryziSYiMME03i4iMMk00R6ydQT2KVvMZadg8kxmZkUsk3B
G8Ad2j2OnlhN5UwqLKfhpcNtjmk2mdOpZ5FtBPVMsvclWwaz4jCXHRn0xGoe
3yANNtO5exj1NGYzODuXjMq6EOb/A03nbzM=
         "]]]}, {}, {}, {}, {}}, LineBox[CompressedData["
1:eJwt0E1KggEUBdDP/DIrtbSCGjYrsB0U2AIEFd2AGNSkpgmVlb+lZkvQPege
bA+6B9tBR2hw4E4e3PtOqw+l+0gQBHk2WOcjzrmiyA11hkyY8cOSXzYdnXDB
NRXueOaFBq+88U6TFm06dOnxwSd9Bgz5YsQ3T9xSJkeWY0JWeiyYM2XMgEdq
FLjkjEMOyJBmnz1SJEmwyw7bxNkitt5KSPT/X3+owxyq
      "]]},
    VertexTextureCoordinates->CompressedData["
1:eJx12DGIXFUYgNGJiGKhYBorC8VeZnELLVydLQ0yKwqikkIQLMT02ljIajEL
KV4QBIsUFlFEwU5EBLVREAtxIcWsaJaJEhVWZisxYnFe8cFUj6893Hvff+99
L1546qVbJpPJxTOTyf/fyeSNuy4//sqjvl9+98De2ycf7OhzX91z4a2Tz8Z+
4eL3zx1vfz322Z27/90/+Xbsa6dX5sPhD2PvPPnE/cfbP4797vs3/t4eDsc+
/efgm/2Tq2PvPf3gO4fz5dg/PfPyQ8Phz2O/eebh9z7f/2XsrY/uuO14+9rY
R89effXO4+OxD2798HB7WI39yCevP3Z+97exrz9/7sr+ye9jX7r93rMfX74x
9u6nf7x2OP9z7JPzX/x68+ZfO5vc+uWn+Wl+mp/mp/lpfpqf5qf5aX6an+an
+Wl+mp/mp/ltWmd165ef5qf5aX6an+an+Wl+mp/mp/lpfpqf5qf5aX6a36Z9
2XVWt375aX6an+an+Wl+mp/mp/lpfpqf5qf5aX6an+a36Rzrvuw6q1u//DQ/
zU/z0/w0P81P89P8ND/NT/PT/DQ/zW/Tud9zrPuy66xu/fLT/DQ/zU/z0/w0
P81P89P8ND/NT/PT/Db9J3vu9xzrvuw6q1u//DQ/zU/z0/w0P81P89P8ND/N
T/PT/DbNFf1P9tzvOdZ92XVWt375aX6an+an+Wl+mp/mp/lpfpqf5tc5bJ05
Yp3/4jrn/Drn1jr7cJ11tY6T5qf5aX6an+an+Wl+mp/mp/lpfprfOnPrPHPX
PHPEPP/Fec75ec6tefbhPOtK89P8ND/NT/PT/DQ/zU/z0/w0P81vvmHO79za
OaxzRf+TPfd7jnVfnmad7cWtX36an+an+Wl+mp/mp/lpfpvuRZ3zO7d2Dutc
0f9kz/2eY6fZl3tZZ3Xrl5/mp/lpfpqf5qf5aX69R05zD5pmrp9mTp1m7ppm
jpjmvzjNOa/5aX7TrKtpnDQ/zU/z0/w0P81P89P8prl3L3NvXOYetMxcv8yc
uszctcwcscx/UfPT/JbZh8usK81P89P8ND/NT/PT/DQ/zW+Re/Yi98ZF7kGL
zPWLzKmLzF2LzBGan+a3yLm1yD7U/DQ/zU/z0/w0P81P89N91+k7Re/dvUf2
XtQ5v3Nr57DTzBV7+U/23O85tpV9eZR1dhC3fvlpfpqf5td3sFXecVZ5l1jl
nr3KvXGVe9Aqc/0qc6rmp/mt8l9c5ZzX/DQ/zW8VJ81P89P8ND/Nb8i715B3
nCHvEkPu2UPujUPuQUPmes1P8xsyRwz5L2p+mp/mN2RdaX6an+an+Wl+s7wT
zvLuNcs7zizvErPcs2e5N85yD9L8NL9Z5q5Z5gjNT/PT/GbZh5qf5qf5aX66
79J9Z+27Yd/B+q7Td4reu3uPPM29aC9zfufWzmFbmSuO8p88yLnfc+x69uWl
rLPduPX7H6DUFvo=
     "]], {}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImagePadding->All,
  Method->{
   "DefaultMeshStyle" -> Automatic, "GridLinesInFront" -> True, 
    "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.897620089739337*^9, 3.897620099230269*^9}, 
   3.897631907990344*^9, 3.906042191962154*^9},
 CellLabel->
  "Out[389]=",ExpressionUUID->"3e00de5f-44e0-42d1-ba7d-6e7f1111669c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Now we parametrize the 7 contours needed for the Pochammer contour (for the \
n=2 case):\n-From Goto\[CloseCurlyQuote]s Figure 1, we want the integral \
along contours ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "0"], TraditionalForm]],ExpressionUUID->
  "a6db66f0-dc3e-4fd2-aa6e-b181de316b5a"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "1"], TraditionalForm]],ExpressionUUID->
  "33e4423b-2bba-4cd3-86a2-c43e18ddda02"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "2"], TraditionalForm]],ExpressionUUID->
  "f4bb2772-365b-482e-9193-e26e8cc47a21"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "3"], TraditionalForm]],ExpressionUUID->
  "f7dfe4af-5f2f-4b0b-b707-b0e68a854b6b"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["l", "0"], TraditionalForm]],ExpressionUUID->
  "48f04d3b-34db-4bf0-8807-a9820e10b40c"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["l", "\[Infinity]"], TraditionalForm]],ExpressionUUID->
  "bf221e58-ba86-46a1-b268-b544e783b918"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["l", "2"], TraditionalForm]],ExpressionUUID->
  "0bddb35d-5dc9-4243-a22f-914001125ef0"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "ec2756ec-3b1d-48c9-ad8b-514a66d81946"],
 "\n-For numerical purposes, we will need two additional points, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "\[Epsilon]"], ","}], TraditionalForm]],ExpressionUUID->
  "db6d570e-467e-4fc8-aea0-ff4851f8c739"],
 " ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["L", "\[Epsilon]", 
    RowBox[{"(", "2", ")"}]], TraditionalForm]],ExpressionUUID->
  "a4539ea6-94af-4d77-ab55-c5213d56c5b5"],
 " \n-",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "\[Epsilon]"], TraditionalForm]],ExpressionUUID->
  "dc2d5fda-69f9-4c97-9155-858bd283ec8a"],
 " is a point at a distance ",
 Cell[BoxData[
  FormBox["\[Epsilon]", TraditionalForm]],ExpressionUUID->
  "6491deb7-097a-4dbc-b21a-fb9ac23f2e0f"],
 " from the origin ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["t", "1"], "=", "0"}], ","}], TraditionalForm]],
  ExpressionUUID->"6c1db702-9a62-4ed5-b246-2fd7a0d8e8fc"],
 " at which the branch cut is drawn by Mathematica, with the expectation that \
it has ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", 
    RowBox[{"Arg", "(", 
     SubscriptBox["R", "\[Epsilon]"], ")"}], "<", 
    RowBox[{"\[Pi]", "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "38b641f7-718b-40b8-8053-6c0a3ede08ee"],
 "\n-",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["L", "\[Epsilon]", 
    RowBox[{"(", "2", ")"}]], TraditionalForm]],ExpressionUUID->
  "06cbe2a6-99c3-40e5-a5c9-952e9e729a55"],
 "is a point at a distance from ",
 Cell[BoxData[
  FormBox["\[Epsilon]", TraditionalForm]],ExpressionUUID->
  "27ce9c46-32bf-45e4-b734-930f57050f52"],
 "  from the point ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "2"], TraditionalForm]],ExpressionUUID->
  "806ad520-430a-4e9f-97ac-223bbfbfde5b"],
 ", at which the branch cut is drawn by Mathematica, with the expectation \
that it has \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "\[Pi]"}], "<", 
    RowBox[{"Arg", "(", 
     SubscriptBox["R", "\[Epsilon]"], ")"}], "<", 
    RowBox[{
     RowBox[{"-", "\[Pi]"}], "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "95dcffef-c4c1-4cf9-bd17-06cac224e613"],
 ".\n"
}], "Subtitle",
 CellChangeTimes->{{3.8976203274807787`*^9, 3.897620479796112*^9}, {
   3.897620542611967*^9, 3.8976208260245533`*^9}, 
   3.8976208791701508`*^9},ExpressionUUID->"a2830884-4177-4d3f-8072-\
fcef0c403927"],

Cell[CellGroupData[{

Cell[TextData[{
 "Defining contours: we will draw the \[OpenCurlyDoubleQuote]circles\
\[CloseCurlyDoubleQuote] in Goto\[CloseCurlyQuote]s figure 1 as polygons of 5 \
(or 6, for n>2) edges and vertices: \n\n-The circle around the origin has \
vertices: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{
      SubscriptBox["R", "\[Epsilon]"], "\[ImaginaryI]", " ", "\[Epsilon]"}], 
     ",", 
     RowBox[{"-", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Epsilon]"}]}], ")"}], 
   TraditionalForm]],ExpressionUUID->"fc6e7d49-74f9-4979-84b2-d35dc3a2060b"],
 "\n\n-The circle around ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "2"], TraditionalForm]],ExpressionUUID->
  "fd739d94-9b62-4355-b0e4-7d8942645e7c"],
 " for n=2 has vertices: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["t", "2"], "+", "\[Epsilon]"}], ",", 
     RowBox[{
      SubscriptBox["t", "2"], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]"}]}], ",", 
     RowBox[{
      SubscriptBox["t", "2"], "-", "\[Epsilon]"}], ",", 
     RowBox[{
      SubscriptBox["t", "2"], "+", 
      SubsuperscriptBox["L", "\[Epsilon]", 
       RowBox[{"(", "2", ")"}]]}], ",", 
     RowBox[{
      SubscriptBox["t", "2"], "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]"}]}]}], ")"}], 
   TraditionalForm]],ExpressionUUID->"ffa0f466-2b2d-4812-975d-848a6e7395b6"],
 "\n\n"
}], "Subsection",
 CellChangeTimes->{{3.897620884814377*^9, 3.897621086827517*^9}, {
  3.897624733419578*^9, 
  3.8976247336724377`*^9}},ExpressionUUID->"af952f98-88d8-4775-b3cc-\
caf525286b82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ThetaIntegralNoRegularizationN2", "[", 
   RowBox[{"c0_", ",", "c1_", ",", "t2_", ",", "\[Tau]_", ",", "accuracy_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "accuracy", " ", "is", " ", "only", " ", "really", " ", "relevant", " ", 
      "if", " ", "we", " ", "insert", " ", "high"}], "-", 
     RowBox[{"precision", " ", "numbers", " ", "for", " ", "c0"}]}], ",", 
    "c1", ",", "t2", ",", "\[Tau]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"same", " ", "branch", " ", "choices", " ", "as", " ", "above"}], 
    ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"converges", " ", "for"}], " ", "-", "1"}], "<", 
     RowBox[{"Re", 
      RowBox[{"(", "c1", ")"}]}], "<", "1"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Mathematica", " ", "might", " ", "still", " ", "complain", " ", "here", 
     " ", "and", " ", "there"}], ",", " ", 
    RowBox[{
    "but", " ", "coincides", " ", "with", " ", "the", " ", "regularized", " ",
      "contours", " ", 
     RowBox[{"above", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", 
        RowBox[{"1", "/", "2"}], ",", "t2"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.897626475946059*^9, 3.897626636530431*^9}, {
  3.8976267203834677`*^9, 3.897626750259811*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"d1f05f7b-61c7-497b-a3b2-4771021f3c98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ThetaIntegralWithPochhammerforN2", "[", 
   RowBox[{"c0_", ",", "c1_", ",", "t2_", ",", "\[Tau]_", ",", "accuracy_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "c2", ",", "intM0", ",", "intM1", ",", "intM2", ",", "intM3", ",", 
      "intl0", ",", "intlinf", ",", "intl2", ",", "ints2", ",", "cinf", ",", 
      "eps", ",", "Reps", ",", "thetaReps", ",", "Leps2", ",", "thetaLeps2", 
      ",", "intRWgamma2", ",", "intRWgamma0", ",", "intRWgammaInf"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"This", " ", "returns", " ", "the", " ", "Riemann"}], "-", 
        RowBox[{"Wirtinger", " ", "integrals", " ", "at", " ", "leading"}], 
        "-", "in", "-", 
        RowBox[{"\[Eta]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         FormBox[
          RowBox[{
           SubscriptBox["\[Integral]", 
            SubscriptBox["\[Gamma]", "j"]], 
           RowBox[{
            SuperscriptBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "1"], "(", 
                 RowBox[{"u", ",", "\[Tau]"}], ")"}], "]"}], "c1"], "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "1"], "(", 
               RowBox[{
                RowBox[{"u", "-", 
                 SubscriptBox["t", "2"]}], ",", "\[Tau]"}], ")"}], "]"}], 
             RowBox[{"-", "c1"}]], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[Pi]\[ImaginaryI]", " ", "u"}]], 
            RowBox[{"\[DifferentialD]", "u"}]}]}],
          TraditionalForm]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"along", " ", 
         SubscriptBox["\[Gamma]", "j"]}], "=", 
        RowBox[{"{", 
         RowBox[{"\[Gamma]0", ",", "\[Gamma]1", ",", "\[Gamma]inf"}], 
         "}"}]}]}], ",", " ", 
      RowBox[{"where", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\[Gamma]0", ":", 
        RowBox[{
         RowBox[{"[", 
          RowBox[{"0", ",", "1"}], "]"}], "\[IndentingNewLine]", 
         "\[Gamma]2"}], ":", 
        RowBox[{
         RowBox[{"[", 
          RowBox[{"0", ",", "t2"}], "]"}], "\[IndentingNewLine]", 
         RowBox[{"\[Gamma]3", ":", 
          RowBox[{"[", 
           RowBox[{"0", ",", "\[Tau]"}], "]"}]}]}]}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "This", " ", "code", " ", "expects", " ", "that", " ", "Mathematica", 
       " ", "draws", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "having", " ", "a", " ", 
       "short", " ", "branch", " ", "cut", " ", "in", " ", "the", " ", 
       "fundamental", " ", "paralellogram", " ", 
       RowBox[{"(", 
        RowBox[{"with", " ", "edges", " ", "1", " ", "and", " ", "\[Tau]"}], 
        ")"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "To", " ", 
       "ensure", " ", "this"}], ",", " ", 
      RowBox[{"try", " ", "picking", " ", "a", " ", "t2", " ", "with", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Re", 
          RowBox[{"(", "t2", ")"}]}], "<", "0.5"}], ")"}]}]}], 
     "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
       "accuracy", " ", "is", " ", "only", " ", "really", " ", "relevant", 
        " ", "if", " ", "we", " ", "insert", " ", "high"}], "-", 
       RowBox[{"precision", " ", "numbers", " ", "for", " ", "c0"}]}], ",", 
      "c1", ",", "t2", ",", "\[Tau]"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eps", "=", " ", 
      RowBox[{
       RowBox[{"Abs", "[", "t2", "]"}], "/", "20"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "radius", " ", "of", " ", "the", " ", "circles", " ", "in", " ", "the", 
       " ", "regularized", " ", "cycles"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t2curr", "=", "t2"}], ",", 
         RowBox[{"tau", "=", "\[Tau]"}], ",", 
         RowBox[{"epsCurr", "=", "eps"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"thetaReps", "=", 
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Im", "@", 
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"epsCurr", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{" ", 
                    RowBox[{"I", " ", "\[Theta]"}]}]]}], "-", "t2curr"}], ",",
                   "tau"}], "]"}], 
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{"epsCurr", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"I", " ", "\[Theta]"}]]}], ",", "tau"}], "]"}]], 
               ")"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", 
              RowBox[{"Arg", "[", "t2", "]"}]}], "}"}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"thetaLeps2", "=", 
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Im", "@", 
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{"t2curr", "+", 
                   RowBox[{"epsCurr", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{" ", 
                    RowBox[{"I", " ", "\[Theta]"}]}]]}], "-", "t2curr"}], ",",
                   "tau"}], "]"}], 
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{"t2curr", "+", 
                   RowBox[{"epsCurr", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"I", " ", "\[Theta]"}]]}]}], ",", "tau"}], "]"}]],
                ")"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", 
              RowBox[{
               RowBox[{"Arg", "[", "t2", "]"}], "+", "\[Pi]"}]}], "}"}], ",", 
            
            RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "we", " ", "find", " ", "theta", " ", "such", " ", "that", " ", 
         SubscriptBox["R", "\[Epsilon]"]}], "=", 
        RowBox[{"\[Epsilon]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"I", " ", "\[Theta]"}]]}]}], " ", ",", " ", 
       RowBox[{"and", " ", "similarly", " ", "for", " ", 
        SubscriptBox["L", "\[Epsilon]"]}]}], "  ", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Reps", "=", 
      RowBox[{"eps", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", " ", "thetaReps"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Leps2", "=", 
      RowBox[{"eps", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", " ", "thetaLeps2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"intM0", "=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[Theta]1", "[", 
              RowBox[{"u", ",", "\[Tau]"}], "]"}], 
             RowBox[{"\[Theta]1", "[", 
              RowBox[{
               RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
           "c1"], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "eps", ",", "Reps"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c1"}]], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[Theta]1", "[", 
               RowBox[{"u", ",", "\[Tau]"}], "]"}], 
              RowBox[{"\[Theta]1", "[", 
               RowBox[{
                RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
            "c1"], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "Reps", ",", 
            RowBox[{"I", " ", "*", "eps"}]}], "}"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"note", ":", " ", 
       RowBox[{
       "the", " ", "above", " ", "follows", " ", "the", " ", "m0", " ", 
        "contour", " ", "of", " ", "Goto"}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"intM1", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{"I", "*", "eps"}], ",", 
          RowBox[{"-", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intM2", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{"-", "eps"}], ",", 
          RowBox[{
           RowBox[{"-", "I"}], "*", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intM3", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{
           RowBox[{"-", "I"}], "*", "eps"}], ",", "eps"}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intl0", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "eps", ",", 
          RowBox[{"1", "-", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intlinf", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{"I", "*", "eps"}], ",", 
          RowBox[{"\[Tau]", "-", 
           RowBox[{"I", "*", "eps"}]}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "the", " ", "following", " ", "is", " ", "more", " ", "creative"}], 
       ",", " ", 
       RowBox[{
       "we", " ", "try", " ", "to", " ", "stay", " ", "on", " ", "the", " ", 
        "same", " ", "branch", " ", "and", " ", "a", " ", "horizontal", " ", 
        "line", " ", "might", " ", "not", " ", "be", " ", "the", " ", 
        "best"}], ",", " ", 
       RowBox[{
       "so", " ", "we", " ", "take", " ", "the", " ", "path", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"l0", ":", 
         RowBox[{"[", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"t2", "+", "\[Epsilon]"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"intl2", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "eps", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"t2", "+", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ints2", "=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[Theta]1", "[", 
              RowBox[{"u", ",", "\[Tau]"}], "]"}], 
             RowBox[{"\[Theta]1", "[", 
              RowBox[{
               RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
           "c1"], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", 
           RowBox[{"t2", "+", "eps"}], ",", 
           RowBox[{"t2", "+", 
            RowBox[{"I", "*", "eps"}]}], ",", 
           RowBox[{"t2", "-", "eps"}], ",", 
           RowBox[{"t2", "+", "Leps2"}]}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], "\[Pi]", " ", "I", " ", "c1"}]], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[Theta]1", "[", 
               RowBox[{"u", ",", "\[Tau]"}], "]"}], 
              RowBox[{"\[Theta]1", "[", 
               RowBox[{
                RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
            "c1"], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", 
            RowBox[{"t2", "+", "Leps2"}], ",", 
            RowBox[{"t2", "-", 
             RowBox[{"I", "*", "eps"}]}], ",", 
            RowBox[{"t2", "+", "eps"}]}], "}"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "putting", " ", "everything", " ", "together", " ", "See", " ", 
       RowBox[{"Goto", "'"}], "s", " ", "formulas", " ", "for", " ", "the", 
       " ", "regularized", " ", "cycles", " ", "before", " ", "Fact", " ", 
       "2.4"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"cinf", "=", 
      RowBox[{"(*", "\[Eta]", "*)"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "c0"}], " ", "\[Tau]"}], "+", 
       RowBox[{"c1", " ", "t2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c2", "=", 
      RowBox[{"-", "c1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"intRWgamma2", "=", 
      RowBox[{
       FractionBox[
        RowBox[{"intM0", "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], 
          RowBox[{"(", 
           RowBox[{"intM1", " ", "+", "intM2", "+", "intM3"}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], "-", "1"}]], "+", 
       "intl2", "-", 
       FractionBox["ints2", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c2"}]], "-", "1"}]]}]}], 
     ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"intRWgamma0", "=", 
      RowBox[{"intl0", "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[Pi]", " ", "I", " ", "c0"}]]}], ")"}], "intM0"}],
          "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[Pi]", " ", "I", " ", "c0"}]]}], ")"}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c1"}]], "intM1"}], "+", 
         
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c1"}]], "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c0"}]]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"intM2", " ", "+", "intM3"}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], "-", "1"}]]}]}], ";", 
     "   ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"intRWgammaInf", "=", 
      RowBox[{"intlinf", "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "cinf"}]]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"intM3", "+", "intM0"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[Pi]", " ", "I", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "-", "cinf"}], " ", ")"}]}]]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"intM1", "+", "intM2"}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], "-", "1"}]]}]}], ";", 
     "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"intRWgamma0", ",", "intRWgamma2", ",", "intRWgammaInf"}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.897621612307976*^9, 3.897621848367812*^9}, {
   3.897621885706346*^9, 3.8976220335517483`*^9}, {3.897622138903194*^9, 
   3.8976221953333797`*^9}, {3.8976222649387074`*^9, 3.897622481440361*^9}, {
   3.897622530134243*^9, 3.89762253263439*^9}, {3.8976226310662193`*^9, 
   3.8976226996944*^9}, {3.897622777679743*^9, 3.8976228301217747`*^9}, {
   3.897622880624219*^9, 3.8976229326893187`*^9}, {3.897623629286832*^9, 
   3.897623703394802*^9}, {3.897623773338441*^9, 3.8976238307588873`*^9}, {
   3.897623981855733*^9, 3.897624028554749*^9}, {3.897624086872613*^9, 
   3.8976241199329567`*^9}, {3.897624171993066*^9, 3.89762433406213*^9}, {
   3.8976243860167437`*^9, 3.89762439805971*^9}, {3.897624437052865*^9, 
   3.897624526488706*^9}, 3.897624601681579*^9, {3.89762468902672*^9, 
   3.8976247100486298`*^9}, {3.897624770328084*^9, 3.897624791942037*^9}, {
   3.897624841489984*^9, 3.8976248898295603`*^9}, {3.897625486178238*^9, 
   3.897625697114188*^9}, {3.897625905253421*^9, 3.8976259651008883`*^9}, {
   3.897626014961446*^9, 3.897626165223085*^9}, {3.897626207441443*^9, 
   3.897626216544229*^9}, {3.8976262468033953`*^9, 3.897626307488443*^9}, {
   3.89762640245586*^9, 3.897626441115121*^9}, {3.897626757610208*^9, 
   3.897626762151935*^9}, 3.8976318658806877`*^9, {3.898077621919064*^9, 
   3.898077622758008*^9}, {3.898077845272608*^9, 3.898077853625749*^9}, 
   3.898078070591023*^9},
 CellLabel->
  "In[391]:=",ExpressionUUID->"23ca5568-abdd-45ff-9829-03c2f007d062"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8976220053844347`*^9, 3.897622006288313*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"2193b8a9-4df6-4d02-a681-809f474b259f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
For convergent integrals, the Pochhamer-regularized and unregularized theta \
integrals agree:\
\>", "Subsection",
 CellChangeTimes->{{3.8976319456017427`*^9, 3.8976319677106657`*^9}, {
  3.897632025518448*^9, 
  3.8976320275102262`*^9}},ExpressionUUID->"94c5a6e7-3afd-4a35-85c8-\
3cae0687e16a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ThetaIntegralNoRegularizationN2", "[", 
  RowBox[{
   RowBox[{"0.3", "+", 
    RowBox[{"0.4", " ", "I"}]}], ",", 
   RowBox[{
    RowBox[{"2", "/", "3"}], "+", 
    RowBox[{"0.2", " ", "I"}]}], ",", 
   RowBox[{
    RowBox[{"1", "/", "3"}], "+", 
    RowBox[{
     RowBox[{"1", "/", "3"}], "I"}]}], ",", "I", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{3.897626592765024*^9},
 CellLabel->
  "In[393]:=",ExpressionUUID->"5f1f6bbc-5ce3-4160-ae12-23cbdad79d62"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"u\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"u\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.\
333333333333333630392440525623478503271356416804371648344253048381`65.\
954589770191\\\", \\\"+\\\", \
RowBox[{\\\"0.\
333333333333332683703967717496897628819157855538101677668789420116`65.\
954589770191\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"0.17627377609550632`\\\"}], \\\"+\\\", \
RowBox[{\\\"0.013047736104910924`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"2.685701458143654`*^-7\\\"}]\\) for the integral and \
error estimates.\"", 2, 393, 63, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8976265936718397`*^9, {3.89762677444349*^9, 3.897626783169737*^9}, 
   3.897627187040312*^9, 3.8976319124225483`*^9, 3.906042192067574*^9},
 CellLabel->
  "During evaluation of \
In[393]:=",ExpressionUUID->"2d559fdd-e319-4261-9a0f-80f1a8886e72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.007689594860844513`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.14705466678473383`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.17627377609550632`"}], "+", 
    RowBox[{"0.013047736104910924`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.5141971172623732`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.25293085884359573`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8976265937095423`*^9, {3.897626774465825*^9, 3.897626783196509*^9}, 
   3.8976271870734053`*^9, 3.897631912429089*^9, 3.906042192077149*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"e1d1225d-fa7a-4460-b0ed-44db2d0dceec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ThetaIntegralWithPochhammerforN2", "[", 
  RowBox[{
   RowBox[{"0.3", "+", 
    RowBox[{"0.4", " ", "I"}]}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "/", "3"}], "+", 
     RowBox[{"0.2", " ", "I"}]}], ")"}], ",", 
   RowBox[{
    RowBox[{"1", "/", "3"}], "+", 
    RowBox[{
     RowBox[{"1", "/", "3"}], "I"}]}], ",", "I", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.89762679609827*^9, 3.897626822345755*^9}, 
   3.897631865922472*^9},
 CellLabel->
  "In[394]:=",ExpressionUUID->"9e1d3d8d-0416-4501-a755-0391ed0d355d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.007689594869083773`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.1470546670244099`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.176274092248571`"}], "+", 
    RowBox[{"0.013047187596791146`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.5141971172619229`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.25293085883974814`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.897626800189959*^9, 3.89762682280746*^9}, 
   3.897631912514462*^9, 3.906042192121448*^9},
 CellLabel->
  "Out[394]=",ExpressionUUID->"23db3cd6-9ecd-4ff5-974b-96dc51e16089"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can also check monodromy relations", "Subsection",
 CellChangeTimes->{{3.8976319456017427`*^9, 
  3.897631985836176*^9}},ExpressionUUID->"b3790fde-385f-4b82-b785-\
5972d51756c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c0", "=", 
      RowBox[{"0.3", "+", 
       RowBox[{"0.4", " ", "I"}]}]}], ",", 
     RowBox[{"c1", "=", 
      RowBox[{
       RowBox[{"2", "/", "3"}], "+", 
       RowBox[{"0.2", " ", "I"}]}]}], ",", 
     RowBox[{"t2", "=", 
      RowBox[{
       RowBox[{"1", "/", "3"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "3"}], "I"}]}]}], ",", 
     RowBox[{"\[Tau]", "=", "I"}], ",", 
     RowBox[{"acc", "=", "8"}], ",", 
     RowBox[{"\[Eta]", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integrals0t2AndInf", "=", 
     RowBox[{"ThetaIntegralNoRegularizationN2", "[", 
      RowBox[{"c0", ",", "c1", ",", "t2", ",", "\[Tau]", ",", "acc"}], 
      "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c0", " "}]], "-", "1"}], 
       ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"c1", "  ", "t2"}], "-", 
            RowBox[{"c0", " ", "\[Tau]"}], "+", "\[Eta]"}], ")"}], " "}]]}], 
       ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "c1"}]], "-", 
        "1"}], ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.897627075701089*^9, 3.897627144404513*^9}, {
  3.897627198235704*^9, 3.897627221412562*^9}},
 CellLabel->
  "In[395]:=",ExpressionUUID->"2dae4c53-fc41-448b-aeed-c4ed75ef4bb6"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"u\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"u\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.\
333333333333333630392440525623478503271356416804371648344253048381`65.\
954589770191\\\", \\\"+\\\", \
RowBox[{\\\"0.\
333333333333332683703967717496897628819157855538101677668789420116`65.\
954589770191\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"0.17627377609550632`\\\"}], \\\"+\\\", \
RowBox[{\\\"0.013047736104910924`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"2.685701458143654`*^-7\\\"}]\\) for the integral and \
error estimates.\"", 2, 395, 64, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8976271991054173`*^9, 3.897627223875512*^9}, 
   3.897631912752986*^9, 3.90604219216434*^9},
 CellLabel->
  "During evaluation of \
In[395]:=",ExpressionUUID->"07390045-a898-4e57-805e-74ba5d51e956"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2.540695646646718`*^-6"}], "-", 
  RowBox[{"5.50597626158833`*^-7", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.89762713848212*^9, 3.8976271462287416`*^9}, {
   3.8976271991457157`*^9, 3.897627223897436*^9}, 3.897631912768523*^9, 
   3.9060421921738787`*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"3c010bc0-09e2-4edd-bcaf-56d8efc398a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c0", "=", 
      RowBox[{"0.3", "+", 
       RowBox[{"0.4", " ", "I"}]}]}], ",", 
     RowBox[{"c1", "=", 
      RowBox[{
       RowBox[{"2", "/", "3"}], "+", 
       RowBox[{"0.2", " ", "I"}]}]}], ",", 
     RowBox[{"t2", "=", 
      RowBox[{
       RowBox[{"1", "/", "3"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "3"}], "I"}]}]}], ",", 
     RowBox[{"\[Tau]", "=", "I"}], ",", 
     RowBox[{"acc", "=", "8"}], ",", 
     RowBox[{"\[Eta]", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integrals0t2AndInf", "=", 
     RowBox[{"ThetaIntegralWithPochhammerforN2", "[", 
      RowBox[{"c0", ",", "c1", ",", "t2", ",", "\[Tau]", ",", "acc"}], 
      "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c0", " "}]], "-", "1"}], 
       ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"c1", "  ", "t2"}], "-", 
            RowBox[{"c0", " ", "\[Tau]"}], "+", "\[Eta]"}], ")"}], " "}]]}], 
       ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "c1"}]], "-", 
        "1"}], ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{3.897627233306015*^9, 3.897631865945945*^9},
 CellLabel->
  "In[396]:=",ExpressionUUID->"6491c52c-631c-4b0e-a3f0-654cf53d3ce5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4.728661906483467`*^-12"}], "-", 
  RowBox[{"3.902678180622843`*^-11", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.897627233921752*^9, 3.897631912849799*^9, 
  3.906029404924539*^9, 3.906042192208349*^9},
 CellLabel->
  "Out[396]=",ExpressionUUID->"4924e2d6-6d62-4bf7-9c24-370c3506db41"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The regularized theta integrals satisfy monodromy relations where the \
unregularized theta integrals would diverge:\
\>", "Subsection",
 CellChangeTimes->{{3.8976319456017427`*^9, 
  3.897632022272668*^9}},ExpressionUUID->"72493af5-f287-46c0-b814-\
9ae882433965"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c0", "=", 
      RowBox[{"0.3", "+", 
       RowBox[{"0.4", " ", "I"}]}]}], ",", 
     RowBox[{"c1", "=", 
      RowBox[{
       RowBox[{"4", "/", "3"}], "+", 
       RowBox[{"0.2", " ", "I"}]}]}], ",", 
     RowBox[{"t2", "=", 
      RowBox[{
       RowBox[{"1", "/", "3"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "3"}], "I"}]}]}], ",", 
     RowBox[{"\[Tau]", "=", "I"}], ",", 
     RowBox[{"acc", "=", "8"}], ",", 
     RowBox[{"\[Eta]", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integrals0t2AndInf", "=", 
     RowBox[{"ThetaIntegralWithPochhammerforN2", "[", 
      RowBox[{"c0", ",", "c1", ",", "t2", ",", "\[Tau]", ",", "acc"}], 
      "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c0", " "}]], "-", "1"}], 
       ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"c1", "  ", "t2"}], "-", 
            RowBox[{"c0", " ", "\[Tau]"}], "+", "\[Eta]"}], ")"}], " "}]]}], 
       ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "c1"}]], "-", 
        "1"}], ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.897627239200564*^9, 3.897627239322584*^9}, 
   3.897631865949655*^9},
 CellLabel->
  "In[397]:=",ExpressionUUID->"f1d6150f-f8fb-4ada-9bbc-316d7e0ba64e"],

Cell[BoxData[
 RowBox[{"1.1189137116840442`*^-10", "+", 
  RowBox[{"1.4218315413927485`*^-10", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.897627239727434*^9, 3.8976319129390593`*^9, 
  3.90604219224205*^9},
 CellLabel->
  "Out[397]=",ExpressionUUID->"dc9e10c6-8e32-4c95-a6b4-8ef84dc91e1f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Adding the Kronecker-Eisenstein series: a trivial step from the theta \
integrals above\
\>", "Chapter",
 CellChangeTimes->{{3.8976272840914717`*^9, 
  3.897627298937302*^9}},ExpressionUUID->"919bc0e2-931f-48b0-8ed0-\
8d3b71953b43"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RWIntegralNoRegularizationN2", "[", 
   RowBox[{
   "c0_", ",", "c1_", ",", "t2_", ",", "\[Tau]_", ",", "\[Eta]_", ",", "tl_", 
    ",", "accuracy_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "accuracy", " ", "is", " ", "only", " ", "really", " ", "relevant", " ", 
      "if", " ", "we", " ", "insert", " ", "high"}], "-", 
     RowBox[{"precision", " ", "numbers", " ", "for", " ", "c0"}]}], ",", 
    "c1", ",", "t2", ",", "\[Tau]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "tl_", " ", "should", " ", "be", " ", "either", " ", "0", " ", "or", " ", 
    "t2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"same", " ", "branch", " ", "choices", " ", "as", " ", "above"}], 
    ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"converges", " ", "for", " ", "0"}], "<", 
      RowBox[{"Re", 
       RowBox[{"(", "c1", ")"}]}], "<", 
      RowBox[{"1", " ", "if", " ", "tl"}]}], "=", "0"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"converges", " ", "for"}], " ", "-", "1"}], "<", 
      RowBox[{"Re", 
       RowBox[{"(", "c1", ")"}]}], "<", 
      RowBox[{"0", " ", "if", " ", "tl"}]}], "=", "t2"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Mathematica", " ", "might", " ", "still", " ", "complain", " ", "here", 
     " ", "and", " ", "there"}], ",", " ", 
    RowBox[{
    "but", " ", "coincides", " ", "with", " ", "the", " ", "regularized", " ",
      "contours", " ", 
     RowBox[{"above", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
       RowBox[{"F", "[", 
        RowBox[{
         RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], ",", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
       RowBox[{"F", "[", 
        RowBox[{
         RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", 
        RowBox[{"1", "/", "2"}], ",", "t2"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
       RowBox[{"F", "[", 
        RowBox[{
         RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.897627328709478*^9, 3.897627436816955*^9}, {
  3.90614710296845*^9, 
  3.906147105163218*^9}},ExpressionUUID->"4866b57e-07b2-490a-b264-\
f0507d90d091"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ThetaIntegralWithPochhammerforN2", "[", 
   RowBox[{
   "c0_", ",", "c1_", ",", "t2_", ",", "\[Tau]_", ",", "\[Eta]_", ",", "tl_", 
    ",", "accuracy_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "c2", ",", "intM0", ",", "intM1", ",", "intM2", ",", "intM3", ",", 
      "intl0", ",", "intlinf", ",", "intl2", ",", "ints2", ",", "cinf", ",", 
      "eps", ",", "Reps", ",", "thetaReps", ",", "Leps2", ",", "thetaLeps2", 
      ",", "intRWgamma2", ",", "intRWgamma0", ",", "intRWgammaInf"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"This", " ", "returns", " ", "the", " ", "Riemann"}], "-", 
        RowBox[{"Wirtinger", " ", "integrals", " ", "at", " ", "leading"}], 
        "-", "in", "-", 
        RowBox[{"\[Eta]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         FormBox[
          RowBox[{
           SubscriptBox["\[Integral]", 
            SubscriptBox["\[Gamma]", "j"]], 
           RowBox[{
            SuperscriptBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "1"], "(", 
                 RowBox[{"u", ",", "\[Tau]"}], ")"}], "]"}], "c1"], "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "1"], "(", 
               RowBox[{
                RowBox[{"u", "-", 
                 SubscriptBox["t", "2"]}], ",", "\[Tau]"}], ")"}], "]"}], 
             RowBox[{"-", "c1"}]], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[Pi]\[ImaginaryI]", " ", "u"}]], 
            RowBox[{"F", "[", 
             RowBox[{
              RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[DifferentialD]", "u"}]}]}],
          TraditionalForm]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"along", " ", 
         SubscriptBox["\[Gamma]", "j"]}], "=", 
        RowBox[{"{", 
         RowBox[{"\[Gamma]0", ",", "\[Gamma]1", ",", "\[Gamma]inf"}], 
         "}"}]}]}], ",", " ", 
      RowBox[{"where", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\[Gamma]0", ":", 
        RowBox[{
         RowBox[{"[", 
          RowBox[{"0", ",", "1"}], "]"}], "\[IndentingNewLine]", 
         "\[Gamma]2"}], ":", 
        RowBox[{
         RowBox[{"[", 
          RowBox[{"0", ",", "t2"}], "]"}], "\[IndentingNewLine]", 
         RowBox[{"\[Gamma]3", ":", 
          RowBox[{"[", 
           RowBox[{"0", ",", "\[Tau]"}], "]"}]}]}]}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "This", " ", "code", " ", "expects", " ", "that", " ", "Mathematica", 
       " ", "draws", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "having", " ", "a", " ", 
       "short", " ", "branch", " ", "cut", " ", "in", " ", "the", " ", 
       "fundamental", " ", "paralellogram", " ", 
       RowBox[{"(", 
        RowBox[{"with", " ", "edges", " ", "1", " ", "and", " ", "\[Tau]"}], 
        ")"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "To", " ", 
       "ensure", " ", "this"}], ",", " ", 
      RowBox[{"try", " ", "picking", " ", "a", " ", "t2", " ", "with", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Re", 
          RowBox[{"(", "t2", ")"}]}], "<", "0.5"}], ")"}]}]}], 
     "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
       "accuracy", " ", "is", " ", "only", " ", "really", " ", "relevant", 
        " ", "if", " ", "we", " ", "insert", " ", "high"}], "-", 
       RowBox[{"precision", " ", "numbers", " ", "for", " ", "c0"}]}], ",", 
      "c1", ",", "t2", ",", "\[Tau]"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eps", "=", " ", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "3"}], ")"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "radius", " ", "of", " ", "the", " ", "circles", " ", "in", " ", "the", 
       " ", "regularized", " ", "cycles"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t2curr", "=", "t2"}], ",", 
         RowBox[{"tau", "=", "\[Tau]"}], ",", 
         RowBox[{"epsCurr", "=", "eps"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"thetaReps", "=", 
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Im", "@", 
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"epsCurr", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{" ", 
                    RowBox[{"I", " ", "\[Theta]"}]}]]}], "-", "t2curr"}], ",",
                   "tau"}], "]"}], 
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{"epsCurr", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"I", " ", "\[Theta]"}]]}], ",", "tau"}], "]"}]], 
               ")"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", 
              RowBox[{"Arg", "[", "t2", "]"}]}], "}"}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"thetaLeps2", "=", 
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Im", "@", 
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{"t2curr", "+", 
                   RowBox[{"epsCurr", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{" ", 
                    RowBox[{"I", " ", "\[Theta]"}]}]]}], "-", "t2curr"}], ",",
                   "tau"}], "]"}], 
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{"t2curr", "+", 
                   RowBox[{"epsCurr", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"I", " ", "\[Theta]"}]]}]}], ",", "tau"}], "]"}]],
                ")"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", 
              RowBox[{
               RowBox[{"Arg", "[", "t2", "]"}], "+", "\[Pi]"}]}], "}"}], ",", 
            
            RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "we", " ", "find", " ", "theta", " ", "such", " ", "that", " ", 
         SubscriptBox["R", "\[Epsilon]"]}], "=", 
        RowBox[{"\[Epsilon]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"I", " ", "\[Theta]"}]]}]}], " ", ",", " ", 
       RowBox[{"and", " ", "similarly", " ", "for", " ", 
        SubscriptBox["L", "\[Epsilon]"]}]}], "  ", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Reps", "=", 
      RowBox[{"eps", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", " ", "thetaReps"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Leps2", "=", 
      RowBox[{"eps", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", " ", "thetaLeps2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"intM0", "=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[Theta]1", "[", 
              RowBox[{"u", ",", "\[Tau]"}], "]"}], 
             RowBox[{"\[Theta]1", "[", 
              RowBox[{
               RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
           "c1"], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
          RowBox[{"F", "[", 
           RowBox[{
            RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}],
          ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "eps", ",", "Reps"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c1"}]], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[Theta]1", "[", 
               RowBox[{"u", ",", "\[Tau]"}], "]"}], 
              RowBox[{"\[Theta]1", "[", 
               RowBox[{
                RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
            "c1"], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
           RowBox[{"F", "[", 
            RowBox[{
             RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], 
            "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "Reps", ",", 
            RowBox[{"I", " ", "*", "eps"}]}], "}"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"note", ":", " ", 
       RowBox[{
       "the", " ", "above", " ", "follows", " ", "the", " ", "m0", " ", 
        "contour", " ", "of", " ", "Goto"}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"intM1", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{"I", "*", "eps"}], ",", 
          RowBox[{"-", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intM2", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{"-", "eps"}], ",", 
          RowBox[{
           RowBox[{"-", "I"}], "*", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intM3", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{
           RowBox[{"-", "I"}], "*", "eps"}], ",", "eps"}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intl0", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "eps", ",", 
          RowBox[{"1", "-", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intlinf", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{"I", "*", "eps"}], ",", 
          RowBox[{"\[Tau]", "-", 
           RowBox[{"I", "*", "eps"}]}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "the", " ", "following", " ", "is", " ", "more", " ", "creative"}], 
       ",", " ", 
       RowBox[{
       "we", " ", "try", " ", "to", " ", "stay", " ", "on", " ", "the", " ", 
        "same", " ", "branch", " ", "and", " ", "a", " ", "horizontal", " ", 
        "line", " ", "might", " ", "not", " ", "be", " ", "the", " ", 
        "best"}], ",", " ", 
       RowBox[{
       "so", " ", "we", " ", "take", " ", "the", " ", "path", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"l0", ":", 
         RowBox[{"[", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"t2", "+", "\[Epsilon]"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"intl2", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "eps", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"t2", "+", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ints2", "=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[Theta]1", "[", 
              RowBox[{"u", ",", "\[Tau]"}], "]"}], 
             RowBox[{"\[Theta]1", "[", 
              RowBox[{
               RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
           "c1"], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
          RowBox[{"F", "[", 
           RowBox[{
            RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}]}],
          ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", 
           RowBox[{"t2", "+", "eps"}], ",", 
           RowBox[{"t2", "+", 
            RowBox[{"I", "*", "eps"}]}], ",", 
           RowBox[{"t2", "-", "eps"}], ",", 
           RowBox[{"t2", "+", "Leps2"}]}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], "\[Pi]", " ", "I", " ", "c1"}]], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[Theta]1", "[", 
               RowBox[{"u", ",", "\[Tau]"}], "]"}], 
              RowBox[{"\[Theta]1", "[", 
               RowBox[{
                RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
            "c1"], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
           RowBox[{"F", "[", 
            RowBox[{
             RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], 
            "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", 
            RowBox[{"t2", "+", "Leps2"}], ",", 
            RowBox[{"t2", "-", 
             RowBox[{"I", "*", "eps"}]}], ",", 
            RowBox[{"t2", "+", "eps"}]}], "}"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "putting", " ", "everything", " ", "together", " ", "See", " ", 
       RowBox[{"Goto", "'"}], "s", " ", "formulas", " ", "for", " ", "the", 
       " ", "regularized", " ", "cycles", " ", "before", " ", "Fact", " ", 
       "2.4"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"cinf", "=", 
      RowBox[{"\[Eta]", "-", 
       RowBox[{"c0", " ", "\[Tau]"}], "+", 
       RowBox[{"c1", " ", "t2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c2", "=", 
      RowBox[{"-", "c1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"intRWgamma2", "=", 
      RowBox[{
       FractionBox[
        RowBox[{"intM0", "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], 
          RowBox[{"(", 
           RowBox[{"intM1", " ", "+", "intM2", "+", "intM3"}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], "-", "1"}]], "+", 
       "intl2", "-", 
       FractionBox["ints2", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c2"}]], "-", "1"}]]}]}], 
     ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"intRWgamma0", "=", 
      RowBox[{"intl0", "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[Pi]", " ", "I", " ", "c0"}]]}], ")"}], "intM0"}],
          "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[Pi]", " ", "I", " ", "c0"}]]}], ")"}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c1"}]], "intM1"}], "+", 
         
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c1"}]], "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c0"}]]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"intM2", " ", "+", "intM3"}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], "-", "1"}]]}]}], ";", 
     "   ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"intRWgammaInf", "=", 
      RowBox[{"intlinf", "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "cinf"}]]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"intM3", "+", "intM0"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[Pi]", " ", "I", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "-", "cinf"}], " ", ")"}]}]]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"intM1", "+", "intM2"}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], "-", "1"}]]}]}], ";", 
     "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"intRWgamma0", ",", "intRWgamma2", ",", "intRWgammaInf"}], 
      "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.897621612307976*^9, 3.897621848367812*^9}, {
   3.897621885706346*^9, 3.8976220335517483`*^9}, {3.897622138903194*^9, 
   3.8976221953333797`*^9}, {3.8976222649387074`*^9, 3.897622481440361*^9}, {
   3.897622530134243*^9, 3.89762253263439*^9}, {3.8976226310662193`*^9, 
   3.8976226996944*^9}, {3.897622777679743*^9, 3.8976228301217747`*^9}, {
   3.897622880624219*^9, 3.8976229326893187`*^9}, {3.897623629286832*^9, 
   3.897623703394802*^9}, {3.897623773338441*^9, 3.8976238307588873`*^9}, {
   3.897623981855733*^9, 3.897624028554749*^9}, {3.897624086872613*^9, 
   3.8976241199329567`*^9}, {3.897624171993066*^9, 3.89762433406213*^9}, {
   3.8976243860167437`*^9, 3.89762439805971*^9}, {3.897624437052865*^9, 
   3.897624526488706*^9}, 3.897624601681579*^9, {3.89762468902672*^9, 
   3.8976247100486298`*^9}, {3.897624770328084*^9, 3.897624791942037*^9}, {
   3.897624841489984*^9, 3.8976248898295603`*^9}, {3.897625486178238*^9, 
   3.897625697114188*^9}, {3.897625905253421*^9, 3.8976259651008883`*^9}, {
   3.897626014961446*^9, 3.897626165223085*^9}, {3.897626207441443*^9, 
   3.897626216544229*^9}, {3.8976262468033953`*^9, 3.897626307488443*^9}, {
   3.89762640245586*^9, 3.897626441115121*^9}, {3.897626757610208*^9, 
   3.897626762151935*^9}, {3.8976274551164*^9, 3.897627513655675*^9}, 
   3.897631865968919*^9, {3.898073297183796*^9, 3.8980733187657337`*^9}, {
   3.898073369853448*^9, 3.898073371610159*^9}, {3.898073405265727*^9, 
   3.898073406465949*^9}, {3.898073438059495*^9, 3.8980734384115143`*^9}, {
   3.898073474683708*^9, 3.8980735382395372`*^9}, {3.898073652199625*^9, 
   3.8980736541501226`*^9}, 3.8980737754500313`*^9, {3.8980777782309732`*^9, 
   3.898077778695394*^9}, {3.8980778094254913`*^9, 3.898077834711252*^9}, 
   3.898078114469111*^9, 3.898078177511018*^9, 3.898078217879746*^9, {
   3.898078311195977*^9, 3.89807833685233*^9}, {3.898078382703993*^9, 
   3.8980783828840647`*^9}, {3.90602925122336*^9, 3.906029252730507*^9}, {
   3.906042325766927*^9, 3.9060423272643003`*^9}, {3.906043180068338*^9, 
   3.9060431802071657`*^9}, {3.9060433435275383`*^9, 3.906043343654355*^9}, {
   3.906043432074408*^9, 3.906043432245502*^9}, {3.90604349186032*^9, 
   3.9060434935261593`*^9}, {3.906043530257114*^9, 3.906043530749943*^9}, {
   3.906043576441638*^9, 3.906043576835647*^9}, {3.906043614875675*^9, 
   3.906043615004229*^9}, {3.906043796867577*^9, 3.906043797074458*^9}},
 CellLabel->
  "In[475]:=",ExpressionUUID->"6be4c331-ef6f-4250-9eb1-14e688462493"],

Cell[CellGroupData[{

Cell["\<\
The unregularized and the regularized Riemann-Wirtinger integrals agree when \
the first ones converge:\
\>", "Subsubsection",
 CellChangeTimes->{{3.8976316606407824`*^9, 
  3.89763169351368*^9}},ExpressionUUID->"280b8273-cc44-46c8-a385-\
9d0e5ef1e856"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RWIntegralNoRegularizationN2", "[", 
  RowBox[{
   RowBox[{"3", "/", "7"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "/", "3"}], ",", 
   RowBox[{
    RowBox[{"1", "/", "3"}], "+", 
    RowBox[{
     RowBox[{"1", "/", "3"}], "I"}]}], ",", 
   RowBox[{"I", "+", 
    RowBox[{"2", "/", "10"}]}], ",", 
   RowBox[{
    RowBox[{"4", "/", "10"}], "+", 
    RowBox[{
     RowBox[{"7", "/", "10"}], "I"}]}], ",", 
   RowBox[{
    RowBox[{"1", "/", "3"}], "+", 
    RowBox[{
     RowBox[{"1", "/", "3"}], "I"}]}], ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.897631563351037*^9, 3.8976316247691107`*^9}},
 CellLabel->
  "In[400]:=",ExpressionUUID->"7adec4aa-4d44-4356-81e7-3b4ace920975"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.12429824437732907`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.8262405536035677`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.3642729477669429`"}], "+", 
    RowBox[{"0.10789704286750043`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.003394170184867651`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.44502068006897094`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8976316255364113`*^9, 3.897631913333991*^9, 
  3.906029704898183*^9, 3.906042192392641*^9},
 CellLabel->
  "Out[400]=",ExpressionUUID->"13edaed4-d2f9-4f91-aa75-86c5d72723eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ThetaIntegralWithPochhammerforN2", "[", 
  RowBox[{
   RowBox[{"3", "/", "7"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "/", "3"}], ",", 
   RowBox[{
    RowBox[{"1", "/", "3"}], "+", 
    RowBox[{
     RowBox[{"1", "/", "3"}], "I"}]}], ",", 
   RowBox[{"I", "+", 
    RowBox[{"2", "/", "10"}]}], ",", 
   RowBox[{
    RowBox[{"4", "/", "10"}], "+", 
    RowBox[{
     RowBox[{"7", "/", "10"}], "I"}]}], ",", 
   RowBox[{
    RowBox[{"1", "/", "3"}], "+", 
    RowBox[{
     RowBox[{"1", "/", "3"}], "I"}]}], ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.897631639831457*^9, 3.897631650951746*^9}, 
   3.8976318659729767`*^9, {3.90611453221318*^9, 3.906114535145859*^9}},
 CellLabel->
  "In[491]:=",ExpressionUUID->"41cd317e-ec05-40f9-94e2-7b0c235fb581"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.12429824437669391`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.8262405536024761`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.3642747802037332`"}], "+", 
    RowBox[{"0.10789727164300748`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.0033941701830086726`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.44502068007411594`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.897631652073103*^9, 3.897631913588942*^9, 
  3.906042192757131*^9, 3.9061145429799767`*^9},
 CellLabel->
  "Out[491]=",ExpressionUUID->"7aca8bf2-bed5-4603-b190-960c32872204"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RWIntegralNoRegularizationN2", "[", 
  RowBox[{
   RowBox[{"3", "/", "7"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "/", "3"}], ",", 
   RowBox[{
    RowBox[{"1", "/", "3"}], "+", 
    RowBox[{
     RowBox[{"1", "/", "3"}], "I"}]}], ",", 
   RowBox[{"I", "*", "100"}], ",", 
   RowBox[{
    RowBox[{"4", "/", "10"}], "+", 
    RowBox[{
     RowBox[{"7", "/", "10"}], "I"}]}], ",", 
   RowBox[{
    RowBox[{"1", "/", "3"}], "+", 
    RowBox[{
     RowBox[{"1", "/", "3"}], "I"}]}], ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.906114548404565*^9, 3.906114676910459*^9}},
 CellLabel->
  "In[504]:=",ExpressionUUID->"d6d86bdc-8535-43b3-a311-4e2f8e7659e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.003332865788599648`"}], "+", 
    RowBox[{"0.8126682974537673`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.3739102278604192`"}], "+", 
    RowBox[{"0.00039193863805493234`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.0717087337200268`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.04588939484112097`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9061145518587303`*^9, 3.906114587549231*^9}, {
  3.9061146228493834`*^9, 3.906114677642219*^9}},
 CellLabel->
  "Out[504]=",ExpressionUUID->"22fc1f3d-221e-4389-a738-703e1d6faebb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The Pochhammer-regularized Riemann-Wirtinger integrals satisfy monodromy \
relations:\
\>", "Subsubsection",
 CellChangeTimes->{{3.897631725741189*^9, 3.897631742060224*^9}, 
   3.897631865987536*^9},ExpressionUUID->"16b8f9b5-ccf9-4e0e-8b50-\
2ef6fc92afba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c0", "=", 
      RowBox[{"0.3", "+", 
       RowBox[{"0.4", " ", "I"}]}]}], ",", 
     RowBox[{"c1", "=", 
      RowBox[{
       RowBox[{"1", "/", "3"}], "+", 
       RowBox[{"0.2", " ", "I"}]}]}], ",", 
     RowBox[{"t2", "=", 
      RowBox[{
       RowBox[{"1", "/", "3"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "3"}], "I"}]}]}], ",", 
     RowBox[{"\[Tau]", "=", "I"}], ",", 
     RowBox[{"acc", "=", "8"}], ",", 
     RowBox[{"\[Eta]", "=", 
      RowBox[{"1", "/", "3"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integrals0t2AndInf", "=", 
     RowBox[{"ThetaIntegralWithPochhammerforN2", "[", 
      RowBox[{
      "c0", ",", "c1", ",", "t2", ",", "\[Tau]", ",", "\[Eta]", ",", "t2", 
       ",", "acc"}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c0", " "}]], "-", "1"}], 
       ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"c1", "  ", "t2"}], "-", 
            RowBox[{"c0", " ", "\[Tau]"}], "+", "\[Eta]"}], ")"}], " "}]]}], 
       ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "c1"}]], "-", 
        "1"}], ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.897627239200564*^9, 3.897627239322584*^9}, {
   3.89763171040809*^9, 3.89763172113413*^9}, {3.8976317668872023`*^9, 
   3.897631766961364*^9}, 3.897631866000416*^9},
 CellLabel->
  "In[402]:=",ExpressionUUID->"165cf588-5a99-4114-9df1-f9afb437f6bd"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 402, 70, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906042192766766*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"2cb10451-9d22-4aca-a2f7-305771e95720"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 402, 71, 
   33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906042192999834*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"5bb5e098-c99f-4123-a31d-a2a9a7ed7250"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"u\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"u\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"0.33333333333333276`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"+\\\", RowBox[{\\\"0.33333333333333376`\\\", \\\" \\\", \\\"\[ImaginaryI]\
\\\"}]}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"19997.699551942293`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"78998.9279527488`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"297.633892786545`\\\"}]\\) for the integral and error \
estimates.\"", 2, 402, 72, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906042193003635*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"5796f49c-8cd3-4ad4-8c74-586c4aa9ee20"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 402, 73, 
   33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.90604219303281*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"9c7c9905-1156-4c62-9d28-2f8c7dcf6cab"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"u\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"u\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"0.33333333333333304`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"+\\\", RowBox[{\\\"0.3333333333333325`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"24544.587873580054`\\\"}], \\\"+\\\", \
RowBox[{\\\"22807.403001776947`\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) \
and \\!\\(\\*RowBox[{\\\"125.58669248793987`\\\"}]\\) for the integral and \
error estimates.\"", 2, 402, 74, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906042193036181*^9},
 CellLabel->
  "During evaluation of \
In[402]:=",ExpressionUUID->"a4284bd2-14ed-4a9f-82d9-6adf198a9e60"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "23.069229816783384`"}], "+", 
  RowBox[{"3085.0496531600556`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.897631722300729*^9, 3.897631767696602*^9, 3.8976319137835093`*^9, {
   3.898073310977413*^9, 3.898073326826977*^9}, {3.898073391968338*^9, 
   3.898073415590302*^9}, 3.906042193039459*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"a4aa0ce3-6e63-4330-85ff-284e69073639"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The Pochhammer-regularized Riemann-Wirtinger integrals satisfy monodromy \
relations (even if the unregularized would diverge):\
\>", "Subsubsection",
 CellChangeTimes->{{3.897631725741189*^9, 3.897631762498556*^9}, 
   3.897631866011468*^9},ExpressionUUID->"1699d41b-afc0-43de-ba16-\
44726e566890"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c0", "=", 
      RowBox[{"0.3", "+", 
       RowBox[{"0.4", " ", "I"}]}]}], ",", 
     RowBox[{"c1", "=", 
      RowBox[{
       RowBox[{"3", "/", "4"}], "+", 
       RowBox[{"0.2", " ", "I"}]}]}], ",", 
     RowBox[{"t2", "=", 
      RowBox[{
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "2"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "2"}], ")"}]}], "I"}]}]}], ",", 
     RowBox[{"\[Tau]", "=", "I"}], ",", 
     RowBox[{"acc", "=", "3"}], ",", 
     RowBox[{"\[Eta]", "=", 
      RowBox[{"1", "/", "3"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integrals0t2AndInf", "=", 
     RowBox[{"ThetaIntegralWithPochhammerforN2", "[", 
      RowBox[{
      "c0", ",", "c1", ",", "t2", ",", "\[Tau]", ",", "\[Eta]", ",", "t2", 
       ",", "acc"}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c0", " "}]], "-", "1"}], 
       ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"c1", "  ", "t2"}], "-", 
            RowBox[{"c0", " ", "\[Tau]"}], "+", "\[Eta]"}], ")"}], " "}]]}], 
       ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "c1"}]], "-", 
        "1"}], ")"}], 
      RowBox[{"integrals0t2AndInf", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.897627239200564*^9, 3.897627239322584*^9}, {
   3.89763171040809*^9, 3.89763172113413*^9}, 3.897631866015699*^9, {
   3.9060431090911417`*^9, 3.906043110367766*^9}, 3.9060432992115793`*^9, {
   3.906043353931754*^9, 3.9060434497116747`*^9}, {3.906043500011334*^9, 
   3.9060435025136127`*^9}, {3.906043546255653*^9, 3.9060435492538147`*^9}, {
   3.9060435849797573`*^9, 3.906043588109069*^9}, {3.906043630052396*^9, 
   3.9060436329815397`*^9}, {3.9060437173991957`*^9, 3.90604378424233*^9}, {
   3.906043825645082*^9, 3.906043917993936*^9}},
 CellLabel->
  "In[487]:=",ExpressionUUID->"96b3c646-8d41-4652-92d5-16ffcea2507b"],

Cell[BoxData[
 RowBox[{"2.8386144168557337`*^-6", "-", 
  RowBox[{"9.041427562195281`*^-7", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.897631772038013*^9, 3.897631913949832*^9, {3.8980733071151342`*^9, 
   3.8980733469089203`*^9}, {3.898073419922366*^9, 3.898073443571878*^9}, 
   3.906042193270892*^9, 3.906043120657352*^9, 3.9060431855280113`*^9, {
   3.906043406729938*^9, 3.9060434512814074`*^9}, 3.90604350302721*^9, {
   3.906043549783771*^9, 3.906043588820691*^9}, 3.906043633642272*^9, {
   3.906043721072526*^9, 3.9060437851102448`*^9}, {3.906043816571021*^9, 
   3.906043918697978*^9}},
 CellLabel->
  "Out[487]=",ExpressionUUID->"7c4520f2-ef5d-4233-97cf-51049b8f926b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ThetaIntegralWithPochhammerforN2", "[", 
  RowBox[{
   RowBox[{"0.3", "+", 
    RowBox[{"0.4", " ", "I"}]}], ",", 
   RowBox[{
    RowBox[{"3", "/", "4"}], "+", 
    RowBox[{"0.2", " ", "I"}]}], ",", 
   RowBox[{
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "6"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "6"}], ")"}]}], "I"}]}], ",", "I", ",", 
   RowBox[{"1", "/", "3"}], ",", "0", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{
  3.898077602850731*^9, {3.906042218725754*^9, 3.906042347933858*^9}, {
   3.90604267529241*^9, 3.906042692378606*^9}, {3.906042834670706*^9, 
   3.906042836062778*^9}, {3.906043275154018*^9, 3.9060432753498383`*^9}, {
   3.9060434628928537`*^9, 3.906043508484733*^9}, {3.906043539078704*^9, 
   3.906043542132897*^9}, {3.9060436511017637`*^9, 3.906043654331482*^9}},
 CellLabel->
  "In[468]:=",ExpressionUUID->"a3742043-f53e-4fda-af59-302e6a961638"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"12.633044762521322`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.4943395902028256`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.6542522334957446`"}], "+", 
    RowBox[{"0.47081516413915625`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"13.155226668288671`", "\[VeryThinSpace]", "-", 
    RowBox[{"5.521110605705227`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.898073781918046*^9, {3.906029315746298*^9, 3.9060293282686253`*^9}, {
   3.9060294231334867`*^9, 3.906029429736691*^9}, 3.9060297356493483`*^9, 
   3.9060300182844143`*^9, 3.906042024364448*^9, 3.906042194226177*^9, 
   3.9060422308975554`*^9, {3.9060422618941307`*^9, 3.9060423127178593`*^9}, 
   3.906042356462578*^9, 3.906042393200623*^9, {3.9060426760408583`*^9, 
   3.9060426930529327`*^9}, 3.90604284722113*^9, 3.906043276542491*^9, {
   3.9060434675049667`*^9, 3.9060434786048717`*^9}, 3.906043508985779*^9, 
   3.906043542979466*^9, 3.906043654980403*^9},
 CellLabel->
  "Out[468]=",ExpressionUUID->"aeb1059b-e5df-444d-b096-92a3a05d6318"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The constant c infinity RW integrals", "Chapter",
 CellChangeTimes->{{3.8976272840914717`*^9, 3.897627298937302*^9}, {
  3.906146237959818*^9, 3.906146255748427*^9}, {3.906147048326735*^9, 
  3.9061470513221188`*^9}},ExpressionUUID->"ab90767b-2b76-4ae6-98e5-\
84f90f98a7e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RWIntegralNoRegularizationN2constantcinf", "[", 
   RowBox[{
   "c0_", ",", "c1_", ",", "t2_", ",", "\[Tau]_", ",", "cinf_", ",", "tl_", 
    ",", "accuracy_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "accuracy", " ", "is", " ", "only", " ", "really", " ", "relevant", " ", 
      "if", " ", "we", " ", "insert", " ", "high"}], "-", 
     RowBox[{"precision", " ", "numbers", " ", "for", " ", "c0"}]}], ",", 
    "c1", ",", "t2", ",", "\[Tau]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "tl_", " ", "should", " ", "be", " ", "either", " ", "0", " ", "or", " ", 
    "t2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"same", " ", "branch", " ", "choices", " ", "as", " ", "above"}], 
    ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"converges", " ", "for", " ", "0"}], "<", 
      RowBox[{"Re", 
       RowBox[{"(", "c1", ")"}]}], "<", 
      RowBox[{"1", " ", "if", " ", "tl"}]}], "=", "0"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"converges", " ", "for"}], " ", "-", "1"}], "<", 
      RowBox[{"Re", 
       RowBox[{"(", "c1", ")"}]}], "<", 
      RowBox[{"0", " ", "if", " ", "tl"}]}], "=", "t2"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Mathematica", " ", "might", " ", "still", " ", "complain", " ", "here", 
     " ", "and", " ", "there"}], ",", " ", 
    RowBox[{
    "but", " ", "coincides", " ", "with", " ", "the", " ", "regularized", " ",
      "contours", " ", 
     RowBox[{"above", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
       RowBox[{"F", "[", 
        RowBox[{
         RowBox[{"u", "-", "tl"}], ",", 
         RowBox[{"cinf", "+", 
          RowBox[{"c0", " ", "\[Tau]"}], "-", 
          RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
       RowBox[{"F", "[", 
        RowBox[{
         RowBox[{"u", "-", "tl"}], ",", 
         RowBox[{"cinf", "+", 
          RowBox[{"c0", " ", "\[Tau]"}], "-", 
          RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", 
        RowBox[{"1", "/", "2"}], ",", "t2"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
       RowBox[{"F", "[", 
        RowBox[{
         RowBox[{"u", "-", "tl"}], ",", 
         RowBox[{"cinf", "+", 
          RowBox[{"c0", " ", "\[Tau]"}], "-", 
          RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.897627328709478*^9, 3.897627436816955*^9}, {
   3.906146284565881*^9, 3.906146338795198*^9}, 3.9061463843763037`*^9, {
   3.906146492522512*^9, 3.9061465077470284`*^9}},
 CellLabel->
  "In[507]:=",ExpressionUUID->"f57267c4-3b66-4384-842d-7f13d4e46988"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ThetaIntegralWithPochhammerforN2constantcinf", "[", 
   RowBox[{
   "c0_", ",", "c1_", ",", "t2_", ",", "\[Tau]_", ",", "cinf_", ",", "tl_", 
    ",", "accuracy_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "c2", ",", "intM0constantcinf", ",", "intM1constantcinf", ",", 
      "intM2constantcinf", ",", "intM3constantcinf", ",", "intl0constantcinf",
       ",", "intlinfconstantcinf", ",", "intl2constantcinf", ",", 
      "ints2constantcinf", ",", "eps", ",", "Reps", ",", "thetaReps", ",", 
      "Leps2", ",", "thetaLeps2", ",", "intRWgamma2constantcinf", ",", 
      "intRWgamma0constantcinf", ",", "intRWgammaInfconstantcinf"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"This", " ", "returns", " ", "the", " ", "Riemann"}], "-", 
        RowBox[{"Wirtinger", " ", "integrals", " ", "at", " ", "leading"}], 
        "-", "in", "-", 
        RowBox[{"\[Eta]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         FormBox[
          RowBox[{
           SubscriptBox["\[Integral]", 
            SubscriptBox["\[Gamma]", "j"]], 
           RowBox[{
            SuperscriptBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "1"], "(", 
                 RowBox[{"u", ",", "\[Tau]"}], ")"}], "]"}], "c1"], "[", 
              RowBox[{
               SubscriptBox["\[Theta]", "1"], "(", 
               RowBox[{
                RowBox[{"u", "-", 
                 SubscriptBox["t", "2"]}], ",", "\[Tau]"}], ")"}], "]"}], 
             RowBox[{"-", "c1"}]], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[Pi]\[ImaginaryI]", " ", "u"}]], 
            RowBox[{"F", "[", 
             RowBox[{
              RowBox[{"u", "-", "tl"}], ",", "\[Eta]", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[DifferentialD]", "u"}]}]}],
          TraditionalForm]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"along", " ", 
         SubscriptBox["\[Gamma]", "j"]}], "=", 
        RowBox[{"{", 
         RowBox[{"\[Gamma]0", ",", "\[Gamma]1", ",", "\[Gamma]inf"}], 
         "}"}]}]}], ",", " ", 
      RowBox[{"where", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\[Gamma]0", ":", 
        RowBox[{
         RowBox[{"[", 
          RowBox[{"0", ",", "1"}], "]"}], "\[IndentingNewLine]", 
         "\[Gamma]2"}], ":", 
        RowBox[{
         RowBox[{"[", 
          RowBox[{"0", ",", "t2"}], "]"}], "\[IndentingNewLine]", 
         RowBox[{"\[Gamma]3", ":", 
          RowBox[{"[", 
           RowBox[{"0", ",", "\[Tau]"}], "]"}]}]}]}]}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "This", " ", "code", " ", "expects", " ", "that", " ", "Mathematica", 
       " ", "draws", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Theta]1", "[", 
           RowBox[{"u", ",", "\[Tau]"}], "]"}], 
          RowBox[{"\[Theta]1", "[", 
           RowBox[{
            RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "having", " ", "a", " ", 
       "short", " ", "branch", " ", "cut", " ", "in", " ", "the", " ", 
       "fundamental", " ", "paralellogram", " ", 
       RowBox[{"(", 
        RowBox[{"with", " ", "edges", " ", "1", " ", "and", " ", "\[Tau]"}], 
        ")"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "To", " ", 
       "ensure", " ", "this"}], ",", " ", 
      RowBox[{"try", " ", "picking", " ", "a", " ", "t2", " ", "with", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Re", 
          RowBox[{"(", "t2", ")"}]}], "<", "0.5"}], ")"}]}]}], 
     "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
       "accuracy", " ", "is", " ", "only", " ", "really", " ", "relevant", 
        " ", "if", " ", "we", " ", "insert", " ", "high"}], "-", 
       RowBox[{"precision", " ", "numbers", " ", "for", " ", "c0"}]}], ",", 
      "c1", ",", "t2", ",", "\[Tau]"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eps", "=", " ", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "radius", " ", "of", " ", "the", " ", "circles", " ", "in", " ", "the", 
       " ", "regularized", " ", "cycles"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t2curr", "=", "t2"}], ",", 
         RowBox[{"tau", "=", "\[Tau]"}], ",", 
         RowBox[{"epsCurr", "=", "eps"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"thetaReps", "=", 
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Im", "@", 
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"epsCurr", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{" ", 
                    RowBox[{"I", " ", "\[Theta]"}]}]]}], "-", "t2curr"}], ",",
                   "tau"}], "]"}], 
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{"epsCurr", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"I", " ", "\[Theta]"}]]}], ",", "tau"}], "]"}]], 
               ")"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", 
              RowBox[{"Arg", "[", "t2", "]"}]}], "}"}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"thetaLeps2", "=", 
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Im", "@", 
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{"t2curr", "+", 
                   RowBox[{"epsCurr", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{" ", 
                    RowBox[{"I", " ", "\[Theta]"}]}]]}], "-", "t2curr"}], ",",
                   "tau"}], "]"}], 
                RowBox[{"\[Theta]1", "[", 
                 RowBox[{
                  RowBox[{"t2curr", "+", 
                   RowBox[{"epsCurr", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"I", " ", "\[Theta]"}]]}]}], ",", "tau"}], "]"}]],
                ")"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", 
              RowBox[{
               RowBox[{"Arg", "[", "t2", "]"}], "+", "\[Pi]"}]}], "}"}], ",", 
            
            RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "we", " ", "find", " ", "theta", " ", "such", " ", "that", " ", 
         SubscriptBox["R", "\[Epsilon]"]}], "=", 
        RowBox[{"\[Epsilon]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"I", " ", "\[Theta]"}]]}]}], " ", ",", " ", 
       RowBox[{"and", " ", "similarly", " ", "for", " ", 
        SubscriptBox["L", "\[Epsilon]"]}]}], "  ", "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Reps", "=", 
      RowBox[{"eps", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", " ", "thetaReps"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Leps2", "=", 
      RowBox[{"eps", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", " ", "thetaLeps2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"intM0constantcinf", "=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[Theta]1", "[", 
              RowBox[{"u", ",", "\[Tau]"}], "]"}], 
             RowBox[{"\[Theta]1", "[", 
              RowBox[{
               RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
           "c1"], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
          RowBox[{"F", "[", 
           RowBox[{
            RowBox[{"u", "-", "tl"}], ",", 
            RowBox[{"cinf", "+", 
             RowBox[{"c0", " ", "\[Tau]"}], "-", 
             RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "eps", ",", "Reps"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c1"}]], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[Theta]1", "[", 
               RowBox[{"u", ",", "\[Tau]"}], "]"}], 
              RowBox[{"\[Theta]1", "[", 
               RowBox[{
                RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
            "c1"], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
           RowBox[{"F", "[", 
            RowBox[{
             RowBox[{"u", "-", "tl"}], ",", 
             RowBox[{"cinf", "+", 
              RowBox[{"c0", " ", "\[Tau]"}], "-", 
              RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "Reps", ",", 
            RowBox[{"I", " ", "*", "eps"}]}], "}"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"note", ":", " ", 
       RowBox[{
       "the", " ", "above", " ", "follows", " ", "the", " ", "m0", " ", 
        "contour", " ", "of", " ", "Goto"}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"intM1constantcinf", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", 
           RowBox[{"cinf", "+", 
            RowBox[{"c0", " ", "\[Tau]"}], "-", 
            RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{"I", "*", "eps"}], ",", 
          RowBox[{"-", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intM2constantcinf", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", 
           RowBox[{"cinf", "+", 
            RowBox[{"c0", " ", "\[Tau]"}], "-", 
            RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{"-", "eps"}], ",", 
          RowBox[{
           RowBox[{"-", "I"}], "*", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intM3constantcinf", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", 
           RowBox[{"cinf", "+", 
            RowBox[{"c0", " ", "\[Tau]"}], "-", 
            RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{
           RowBox[{"-", "I"}], "*", "eps"}], ",", "eps"}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intl0constantcinf", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", 
           RowBox[{"cinf", "+", 
            RowBox[{"c0", " ", "\[Tau]"}], "-", 
            RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "eps", ",", 
          RowBox[{"1", "-", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"intlinfconstantcinf", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", 
           RowBox[{"cinf", "+", 
            RowBox[{"c0", " ", "\[Tau]"}], "-", 
            RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", 
          RowBox[{"I", "*", "eps"}], ",", 
          RowBox[{"\[Tau]", "-", 
           RowBox[{"I", "*", "eps"}]}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "the", " ", "following", " ", "is", " ", "more", " ", "creative"}], 
       ",", " ", 
       RowBox[{
       "we", " ", "try", " ", "to", " ", "stay", " ", "on", " ", "the", " ", 
        "same", " ", "branch", " ", "and", " ", "a", " ", "horizontal", " ", 
        "line", " ", "might", " ", "not", " ", "be", " ", "the", " ", 
        "best"}], ",", " ", 
       RowBox[{
       "so", " ", "we", " ", "take", " ", "the", " ", "path", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"l0", ":", 
         RowBox[{"[", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"t2", "+", "\[Epsilon]"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"intl2constantcinf", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Theta]1", "[", 
             RowBox[{"u", ",", "\[Tau]"}], "]"}], 
            RowBox[{"\[Theta]1", "[", 
             RowBox[{
              RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], "c1"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"u", "-", "tl"}], ",", 
           RowBox[{"cinf", "+", 
            RowBox[{"c0", " ", "\[Tau]"}], "-", 
            RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "eps", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"t2", "+", "eps"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ints2constantcinf", "=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[Theta]1", "[", 
              RowBox[{"u", ",", "\[Tau]"}], "]"}], 
             RowBox[{"\[Theta]1", "[", 
              RowBox[{
               RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
           "c1"], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
          RowBox[{"F", "[", 
           RowBox[{
            RowBox[{"u", "-", "tl"}], ",", 
            RowBox[{"cinf", "+", 
             RowBox[{"c0", " ", "\[Tau]"}], "-", 
             RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", 
           RowBox[{"t2", "+", "eps"}], ",", 
           RowBox[{"t2", "+", 
            RowBox[{"I", "*", "eps"}]}], ",", 
           RowBox[{"t2", "-", "eps"}], ",", 
           RowBox[{"t2", "+", "Leps2"}]}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], "\[Pi]", " ", "I", " ", "c1"}]], 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"\[Theta]1", "[", 
               RowBox[{"u", ",", "\[Tau]"}], "]"}], 
              RowBox[{"\[Theta]1", "[", 
               RowBox[{
                RowBox[{"u", "-", "t2"}], ",", "\[Tau]"}], "]"}]], ")"}], 
            "c1"], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", "\[Pi]", " ", "I", " ", "c0", " ", "u"}]], 
           RowBox[{"F", "[", 
            RowBox[{
             RowBox[{"u", "-", "tl"}], ",", 
             RowBox[{"cinf", "+", 
              RowBox[{"c0", " ", "\[Tau]"}], "-", 
              RowBox[{"c1", " ", "t2"}]}], ",", "\[Tau]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", 
            RowBox[{"t2", "+", "Leps2"}], ",", 
            RowBox[{"t2", "-", 
             RowBox[{"I", "*", "eps"}]}], ",", 
            RowBox[{"t2", "+", "eps"}]}], "}"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "accuracy"}]}], "]"}]}]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "putting", " ", "everything", " ", "together", " ", "See", " ", 
       RowBox[{"Goto", "'"}], "s", " ", "formulas", " ", "for", " ", "the", 
       " ", "regularized", " ", "cycles", " ", "before", " ", "Fact", " ", 
       "2.4"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"c2", "=", 
      RowBox[{"-", "c1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"intRWgamma2constantcinf", "=", 
      RowBox[{
       FractionBox[
        RowBox[{"intM0constantcinf", "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], 
          RowBox[{"(", 
           RowBox[{
           "intM1constantcinf", " ", "+", "intM2constantcinf", "+", 
            "intM3constantcinf"}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], "-", "1"}]], "+", 
       "intl2constantcinf", "-", 
       FractionBox["ints2constantcinf", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c2"}]], "-", "1"}]]}]}], 
     ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"intRWgamma0constantcinf", "=", 
      RowBox[{"intl0constantcinf", "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[Pi]", " ", "I", " ", "c0"}]]}], ")"}], 
          "intM0constantcinf"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", "\[Pi]", " ", "I", " ", "c0"}]]}], ")"}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c1"}]], 
          "intM1constantcinf"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c1"}]], "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c0"}]]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"intM2constantcinf", " ", "+", "intM3constantcinf"}], 
           ")"}]}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], "-", "1"}]]}]}], ";", 
     "   ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"intRWgammaInfconstantcinf", "=", 
      RowBox[{"intlinfconstantcinf", "+", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "cinf"}]]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"intM3constantcinf", "+", "intM0constantcinf"}], ")"}]}], 
         "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "\[Pi]", " ", "I", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "-", "cinf"}], " ", ")"}]}]]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"intM1constantcinf", "+", "intM2constantcinf"}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "\[Pi]", " ", "I", " ", "c1"}]], "-", "1"}]]}]}], ";", 
     "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "intRWgamma0constantcinf", ",", "intRWgamma2constantcinf", ",", 
       "intRWgammaInfconstantcinf"}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.897621612307976*^9, 3.897621848367812*^9}, {
   3.897621885706346*^9, 3.8976220335517483`*^9}, {3.897622138903194*^9, 
   3.8976221953333797`*^9}, {3.8976222649387074`*^9, 3.897622481440361*^9}, {
   3.897622530134243*^9, 3.89762253263439*^9}, {3.8976226310662193`*^9, 
   3.8976226996944*^9}, {3.897622777679743*^9, 3.8976228301217747`*^9}, {
   3.897622880624219*^9, 3.8976229326893187`*^9}, {3.897623629286832*^9, 
   3.897623703394802*^9}, {3.897623773338441*^9, 3.8976238307588873`*^9}, {
   3.897623981855733*^9, 3.897624028554749*^9}, {3.897624086872613*^9, 
   3.8976241199329567`*^9}, {3.897624171993066*^9, 3.89762433406213*^9}, {
   3.8976243860167437`*^9, 3.89762439805971*^9}, {3.897624437052865*^9, 
   3.897624526488706*^9}, 3.897624601681579*^9, {3.89762468902672*^9, 
   3.8976247100486298`*^9}, {3.897624770328084*^9, 3.897624791942037*^9}, {
   3.897624841489984*^9, 3.8976248898295603`*^9}, {3.897625486178238*^9, 
   3.897625697114188*^9}, {3.897625905253421*^9, 3.8976259651008883`*^9}, {
   3.897626014961446*^9, 3.897626165223085*^9}, {3.897626207441443*^9, 
   3.897626216544229*^9}, {3.8976262468033953`*^9, 3.897626307488443*^9}, {
   3.89762640245586*^9, 3.897626441115121*^9}, {3.897626757610208*^9, 
   3.897626762151935*^9}, {3.8976274551164*^9, 3.897627513655675*^9}, 
   3.897631865968919*^9, {3.898073297183796*^9, 3.8980733187657337`*^9}, {
   3.898073369853448*^9, 3.898073371610159*^9}, {3.898073405265727*^9, 
   3.898073406465949*^9}, {3.898073438059495*^9, 3.8980734384115143`*^9}, {
   3.898073474683708*^9, 3.8980735382395372`*^9}, {3.898073652199625*^9, 
   3.8980736541501226`*^9}, 3.8980737754500313`*^9, {3.8980777782309732`*^9, 
   3.898077778695394*^9}, {3.8980778094254913`*^9, 3.898077834711252*^9}, 
   3.898078114469111*^9, 3.898078177511018*^9, 3.898078217879746*^9, {
   3.898078311195977*^9, 3.89807833685233*^9}, {3.898078382703993*^9, 
   3.8980783828840647`*^9}, {3.90602925122336*^9, 3.906029252730507*^9}, {
   3.906042325766927*^9, 3.9060423272643003`*^9}, {3.906043180068338*^9, 
   3.9060431802071657`*^9}, {3.9060433435275383`*^9, 3.906043343654355*^9}, {
   3.906043432074408*^9, 3.906043432245502*^9}, {3.90604349186032*^9, 
   3.9060434935261593`*^9}, {3.906043530257114*^9, 3.906043530749943*^9}, {
   3.906043576441638*^9, 3.906043576835647*^9}, {3.906043614875675*^9, 
   3.906043615004229*^9}, {3.906043796867577*^9, 3.906043797074458*^9}, {
   3.906146351181128*^9, 3.9061463932068977`*^9}, {3.906146426060637*^9, 
   3.906146475180275*^9}, {3.906146517722438*^9, 3.9061465738431063`*^9}, {
   3.906146608431342*^9, 3.906146694097528*^9}, {3.90614672643793*^9, 
   3.9061467320083847`*^9}, {3.906146778609919*^9, 3.906146805457481*^9}, {
   3.9061473634641447`*^9, 3.906147368281704*^9}, 3.906147569668548*^9, {
   3.9061476224418287`*^9, 3.9061476472062263`*^9}, {3.906147717921805*^9, 
   3.906147718064404*^9}},
 CellLabel->
  "In[546]:=",ExpressionUUID->"51144eac-f9bf-43e0-b97a-ded2abd9365d"],

Cell[CellGroupData[{

Cell["\<\
The unregularized and the regularized Riemann-Wirtinger integrals agree when \
the first ones converge:\
\>", "Subsubsection",
 CellChangeTimes->{{3.8976316606407824`*^9, 
  3.89763169351368*^9}},ExpressionUUID->"7dbbed99-5f1b-4d06-b5aa-\
39559a9ffff2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RWIntegralNoRegularizationN2constantcinf", "[", 
  RowBox[{
   RowBox[{"3", "/", "7"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "/", "3"}], ",", 
   RowBox[{
    RowBox[{"1", "/", "3"}], "+", 
    RowBox[{
     RowBox[{"1", "/", "3"}], "I"}]}], ",", 
   RowBox[{"I", "*", 
    RowBox[{"10", "^", "2"}]}], ",", 
   RowBox[{
    RowBox[{"4", "/", "10"}], "+", 
    RowBox[{
     RowBox[{"7", "/", "10"}], "I"}]}], ",", 
   RowBox[{
    RowBox[{"1", "/", "3"}], "+", 
    RowBox[{
     RowBox[{"1", "/", "3"}], "I"}]}], ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.906114548404565*^9, 3.906114676910459*^9}, 
   3.9061473959806833`*^9, {3.906147454380043*^9, 3.906147507508408*^9}},
 CellLabel->
  "In[540]:=",ExpressionUUID->"8ae2ae39-00b0-4294-aa6e-73f3fd8b181d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.014555943079570519`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.7747987614799369`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.3945282121455367`"}], "-", 
    RowBox[{"0.02416657327183961`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "22.82216134527869`"}], "+", 
    RowBox[{"21.758375841806814`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9061145518587303`*^9, 3.906114587549231*^9}, {
   3.9061146228493834`*^9, 3.906114677642219*^9}, 3.906147400175242*^9, {
   3.906147470971187*^9, 3.90614750801764*^9}},
 CellLabel->
  "Out[540]=",ExpressionUUID->"4ddf5ae4-2261-43b4-a5f2-da8de358470d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The Pochhammer-regularized constant cinf Riemann-Wirtinger integrals satisfy \
monodromy relations:\
\>", "Subsubsection",
 CellChangeTimes->{{3.897631725741189*^9, 3.897631742060224*^9}, 
   3.897631865987536*^9, {3.906146819214179*^9, 
   3.9061468238951273`*^9}},ExpressionUUID->"19b80be5-35a5-40a6-9658-\
2f61d87269e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c0", "=", 
      RowBox[{"0.3", "+", 
       RowBox[{"0.4", " ", "I"}]}]}], ",", 
     RowBox[{"c1", "=", 
      RowBox[{
       RowBox[{"1", "/", "3"}], "+", 
       RowBox[{"0.2", " ", "I"}]}]}], ",", 
     RowBox[{"t2", "=", 
      RowBox[{
       RowBox[{"1", "/", "3"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "3"}], "I"}]}]}], ",", 
     RowBox[{"\[Tau]", "=", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "3"}], "I"}]}]}], ",", 
     RowBox[{"acc", "=", "8"}], ",", 
     RowBox[{"cinf", "=", 
      RowBox[{
       RowBox[{"1", "/", "3"}], "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "I"}]}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integrals0t2AndInfconstantcinf", "=", 
     RowBox[{"ThetaIntegralWithPochhammerforN2constantcinf", "[", 
      RowBox[{
      "c0", ",", "c1", ",", "t2", ",", "\[Tau]", ",", "cinf", ",", "t2", ",", 
       "acc"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[Pi]", " ", "I", " ", "c0", " "}]], "-", "1"}], 
       ")"}], 
      RowBox[{"integrals0t2AndInfconstantcinf", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "cinf", " "}]]}], 
       ")"}], 
      RowBox[{"integrals0t2AndInfconstantcinf", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]", " ", "I", " ", "c1"}]], "-", 
        "1"}], ")"}], 
      RowBox[{"integrals0t2AndInfconstantcinf", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.897627239200564*^9, 3.897627239322584*^9}, {
   3.89763171040809*^9, 3.89763172113413*^9}, {3.8976317668872023`*^9, 
   3.897631766961364*^9}, 3.897631866000416*^9, {3.906146836848819*^9, 
   3.906146885882833*^9}, {3.9061469290994663`*^9, 3.9061469786547527`*^9}, {
   3.9061472339860897`*^9, 3.9061472698291063`*^9}, {3.906147416205091*^9, 
   3.9061474277519617`*^9}, {3.9061475131789017`*^9, 3.906147514039463*^9}},
 CellLabel->
  "In[548]:=",ExpressionUUID->"fb2b3b1f-8d20-45bd-a072-409d727c6b2d"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 548, 768, 
   33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.906042192766766*^9, {3.906146851560296*^9, 3.906146871704685*^9}, {
   3.906147245601715*^9, 3.906147271345809*^9}, {3.9061474039778967`*^9, 
   3.906147429607572*^9}, 3.906147595507708*^9, 3.906147659693262*^9, 
   3.906147723346088*^9, 3.906158871807221*^9},
 CellLabel->
  "During evaluation of \
In[548]:=",ExpressionUUID->"49cb4a35-40bc-459e-a920-0dc3793169b4"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"u\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"u\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"0.006484219583594676`\\\", \\\"\[VeryThinSpace]\\\"}], \\\
\"-\\\", RowBox[{\\\"0.0035157804164053235`\\\", \\\" \\\", \\\"\[ImaginaryI]\
\\\"}]}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.0002547842779541317`\\\", \\\"\[VeryThinSpace]\
\\\"}], \\\"-\\\", RowBox[{\\\"0.00016653122807183657`\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2926457495220975`*^-7\\\"}]\\) for the integral and \
error estimates.\"", 2, 548, 769, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.906042192766766*^9, {3.906146851560296*^9, 3.906146871704685*^9}, {
   3.906147245601715*^9, 3.906147271345809*^9}, {3.9061474039778967`*^9, 
   3.906147429607572*^9}, 3.906147595507708*^9, 3.906147659693262*^9, 
   3.906147723346088*^9, 3.906158871823098*^9},
 CellLabel->
  "During evaluation of \
In[548]:=",ExpressionUUID->"3a1454be-fa80-4994-83ec-9d09be774c9b"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"u\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"u\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.8349457066922783`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.092095265039536`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"0.10310560626095777`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"0.1255820186614533`\\\"}]\\) for the integral and error \
estimates.\"", 2, 548, 770, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.906042192766766*^9, {3.906146851560296*^9, 3.906146871704685*^9}, {
   3.906147245601715*^9, 3.906147271345809*^9}, {3.9061474039778967`*^9, 
   3.906147429607572*^9}, 3.906147595507708*^9, 3.906147659693262*^9, 
   3.906147723346088*^9, 3.906158871836059*^9},
 CellLabel->
  "During evaluation of \
In[548]:=",ExpressionUUID->"41b7edcf-d1b5-4b1c-aec1-82c9ee5cabd3"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"u\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"u\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"0.14940629167973382`\\\", \\\"\[VeryThinSpace]\\\"}], \
\\\"+\\\", RowBox[{\\\"0.10362794278596653`\\\", \\\" \\\", \\\"\[ImaginaryI]\
\\\"}]}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.03160689174750495`\\\", \\\"\[VeryThinSpace]\\\
\"}], \\\"-\\\", RowBox[{\\\"0.024531059084739716`\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"0.00003375299933191102`\\\"}]\\) for the integral and \
error estimates.\"", 2, 548, 771, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.906042192766766*^9, {3.906146851560296*^9, 3.906146871704685*^9}, {
   3.906147245601715*^9, 3.906147271345809*^9}, {3.9061474039778967`*^9, 
   3.906147429607572*^9}, 3.906147595507708*^9, 3.906147659693262*^9, 
   3.906147723346088*^9, 3.906158871860252*^9},
 CellLabel->
  "During evaluation of \
In[548]:=",ExpressionUUID->"b5f2f322-cff9-4a38-b5dc-9e438e5abe1e"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 548, 772, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.906042192766766*^9, {3.906146851560296*^9, 3.906146871704685*^9}, {
   3.906147245601715*^9, 3.906147271345809*^9}, {3.9061474039778967`*^9, 
   3.906147429607572*^9}, 3.906147595507708*^9, 3.906147659693262*^9, 
   3.906147723346088*^9, 3.90615887186998*^9},
 CellLabel->
  "During evaluation of \
In[548]:=",ExpressionUUID->"e1afac21-2083-476b-907c-e708d76c45a8"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 548, 773, 
   33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.906042192766766*^9, {3.906146851560296*^9, 3.906146871704685*^9}, {
   3.906147245601715*^9, 3.906147271345809*^9}, {3.9061474039778967`*^9, 
   3.906147429607572*^9}, 3.906147595507708*^9, 3.906147659693262*^9, 
   3.906147723346088*^9, 3.906158871883484*^9},
 CellLabel->
  "During evaluation of \
In[548]:=",ExpressionUUID->"4478db23-3790-4f01-82de-10415fe0b404"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 548, 774, 
   33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.906042192766766*^9, {3.906146851560296*^9, 3.906146871704685*^9}, {
   3.906147245601715*^9, 3.906147271345809*^9}, {3.9061474039778967`*^9, 
   3.906147429607572*^9}, 3.906147595507708*^9, 3.906147659693262*^9, 
   3.906147723346088*^9, 3.906158871914196*^9},
 CellLabel->
  "During evaluation of \
In[548]:=",ExpressionUUID->"7a186f33-1b04-485f-aceb-4c26820dca0b"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 548, 775, 33170020911864477215, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.906042192766766*^9, {3.906146851560296*^9, 3.906146871704685*^9}, {
   3.906147245601715*^9, 3.906147271345809*^9}, {3.9061474039778967`*^9, 
   3.906147429607572*^9}, 3.906147595507708*^9, 3.906147659693262*^9, 
   3.906147723346088*^9, 3.9061588719214993`*^9},
 CellLabel->
  "During evaluation of \
In[548]:=",ExpressionUUID->"8eb051da-672c-43c3-8a89-9bebce6952e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3.060296349613734`"}], "-", 
  RowBox[{"0.8685193387300183`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.9061472466037807`*^9, 3.906147272230013*^9}, {
   3.906147404880219*^9, 3.906147429720858*^9}, 3.9061475957558947`*^9, 
   3.906147659810533*^9, 3.9061477234513206`*^9, 3.90615887193371*^9},
 CellLabel->
  "Out[548]=",ExpressionUUID->"19832c40-ca70-4176-8cfe-56df0d35abf1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{-18, Automatic}, {-260, Automatic}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c9bfa065-aac2-4014-b5dd-50c41d4459a0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 278, 6, 160, "Title",ExpressionUUID->"e5c46d65-7870-4de3-9310-cd7fcbc06890"],
Cell[861, 30, 1231, 31, 181, "Subtitle",ExpressionUUID->"dd76ea8d-796d-4526-8723-bc69023ae00d"],
Cell[CellGroupData[{
Cell[2117, 65, 178, 3, 54, "Subsection",ExpressionUUID->"d7a4b99f-c345-4cc5-9246-e17753eac857"],
Cell[CellGroupData[{
Cell[2320, 72, 2169, 61, 287, "Subsubsection",ExpressionUUID->"4c4356dd-fff8-4971-a24c-b724adaca888"],
Cell[CellGroupData[{
Cell[4514, 137, 273, 8, 30, "Input",ExpressionUUID->"953a0fa2-26ba-415f-b63d-b3617636916e"],
Cell[4790, 147, 292, 6, 34, "Output",ExpressionUUID->"5996835b-774b-4099-a7c6-68240ea9326e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5131, 159, 256, 4, 45, "Subsubsection",ExpressionUUID->"b8fff623-0a84-4aae-9d5b-6feefc462dad"],
Cell[CellGroupData[{
Cell[5412, 167, 654, 20, 33, "Input",ExpressionUUID->"b8c7e899-13c8-4800-9ff8-30fb2887e6ee"],
Cell[6069, 189, 745, 14, 45, "Message",ExpressionUUID->"993d19c6-4426-4e5a-9b4a-acad5cdd8b16"],
Cell[6817, 205, 558, 16, 55, "Output",ExpressionUUID->"251e0919-aff3-408d-a971-aa0d0473004f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7424, 227, 1754, 46, 160, "Subsubsection",ExpressionUUID->"bea53e04-73fb-4244-876a-a83e04138391"],
Cell[CellGroupData[{
Cell[9203, 277, 4409, 128, 221, "Input",ExpressionUUID->"96072dbb-d4b1-4ff3-b78e-6c56cb95de98"],
Cell[13615, 407, 716, 12, 34, "Output",ExpressionUUID->"fa07b90a-3ae3-4496-8562-6eb0da65499c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14380, 425, 345, 7, 45, "Subsubsection",ExpressionUUID->"236b0f3c-4b0e-4534-9744-11a56cf72a52"],
Cell[CellGroupData[{
Cell[14750, 436, 616, 20, 33, "Input",ExpressionUUID->"4472187a-eb62-4574-aef8-1616f8e5696f"],
Cell[15369, 458, 64193, 1069, 202, "Output",ExpressionUUID->"93d2aa06-b9a4-4e77-a5d0-f087f6b80239"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[79601, 1532, 148, 3, 54, "Subsection",ExpressionUUID->"aa1ef8e5-145b-4f3f-8704-589bccc9beeb"],
Cell[79752, 1537, 1341, 26, 372, "Section",ExpressionUUID->"aa379a36-244f-48c3-a3c5-f2b1a1bdb22e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81130, 1568, 499, 11, 223, "Title",ExpressionUUID->"9a0e57cd-2ab0-4925-bf92-4aad7e155c11"],
Cell[CellGroupData[{
Cell[81654, 1583, 228, 4, 45, "Subsubsection",ExpressionUUID->"29a50cb5-6a1f-4549-a37b-3c6d1ffeafd9"],
Cell[81885, 1589, 509, 12, 33, "Input",ExpressionUUID->"6857992a-0d78-4e27-a7ad-6314512c59d7"],
Cell[82397, 1603, 528, 14, 33, "Input",ExpressionUUID->"884a385b-b934-4fcf-a8f9-55b22a352591"],
Cell[82928, 1619, 969, 23, 51, "Input",ExpressionUUID->"a63dcd24-a8bc-4641-9a97-5ee4e0c6650b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83934, 1647, 61603, 1065, 705, "Subsection",ExpressionUUID->"accba59d-9739-43e6-bbdf-c6e851cb1d9c"],
Cell[CellGroupData[{
Cell[145562, 2716, 428, 10, 30, "Input",ExpressionUUID->"ca91c7dd-a40c-4e31-a740-833480d496b0"],
Cell[145993, 2728, 1548, 37, 61, "Output",ExpressionUUID->"592b7bfe-03c3-417f-b9c7-3c253011ff12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147578, 2770, 783, 19, 48, "Input",ExpressionUUID->"d275f46f-fb1f-4b49-9969-43977d975b19"],
Cell[148364, 2791, 1695, 27, 51, "Message",ExpressionUUID->"78b21913-0975-40a1-9062-9072c4ff624d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150096, 2823, 1470, 39, 136, "Input",ExpressionUUID->"6de61124-9be8-4592-92b3-135521a437c2"],
Cell[151569, 2864, 1756, 28, 51, "Message",ExpressionUUID->"0df88eb1-574e-4349-8b7a-b8244a17b1d0"],
Cell[153328, 2894, 1754, 28, 51, "Message",ExpressionUUID->"deff902b-e251-4677-ab58-ff14a5363599"],
Cell[155085, 2924, 1754, 28, 51, "Message",ExpressionUUID->"0f8c80a9-3c1c-4c94-ae4c-02c3a82b9c24"]
}, Open  ]],
Cell[156854, 2955, 1139, 31, 48, "Input",ExpressionUUID->"9386c3a7-c9cf-476e-ab46-b2be627a435f"],
Cell[CellGroupData[{
Cell[158018, 2990, 622, 19, 30, "Input",ExpressionUUID->"d2d45ba0-8406-480e-9f86-463de937956c"],
Cell[158643, 3011, 1316, 33, 61, "Output",ExpressionUUID->"a45b92e0-1bd7-46cc-b741-c027ac34474a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159996, 3049, 657, 20, 30, "Input",ExpressionUUID->"912d8be2-9255-4a34-a6ae-053d25ed3181"],
Cell[160656, 3071, 1714, 28, 51, "Message",ExpressionUUID->"01329c9a-f125-4ad8-8b25-06a79b2e1ba8"]
}, Open  ]],
Cell[162385, 3102, 978, 25, 39, "Input",ExpressionUUID->"73175c1c-7e74-448c-8260-3613229f5f46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163400, 3132, 597, 17, 106, "Section",ExpressionUUID->"83573429-6e1e-42ff-b209-0ed8de6d7282"],
Cell[CellGroupData[{
Cell[164022, 3153, 1084, 32, 130, "Input",ExpressionUUID->"708bddfd-c1be-435c-9410-a405aaf7d603"],
Cell[165109, 3187, 58266, 973, 370, "Output",ExpressionUUID->"b93e424e-6edd-4e10-8e8c-ba247f068e22"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[223424, 4166, 1875, 41, 307, "Section",ExpressionUUID->"90aa37c9-5b8e-4354-9b51-2f92dcc02bd6"],
Cell[CellGroupData[{
Cell[225324, 4211, 237, 5, 45, "Subsubsection",ExpressionUUID->"9c284687-c1c5-4d99-b87b-c7b58d0d383d"],
Cell[CellGroupData[{
Cell[225586, 4220, 1751, 41, 130, "Input",ExpressionUUID->"6c4b96e0-03be-4466-a8b4-62c7d5eb1aa5"],
Cell[227340, 4263, 83090, 1379, 449, "Output",ExpressionUUID->"fdb67af2-b046-4eab-964f-3d0645b814ab"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310479, 5648, 293, 7, 45, "Subsubsection",ExpressionUUID->"1c02f320-f0c3-4cfe-ac56-cddef4553704"],
Cell[CellGroupData[{
Cell[310797, 5659, 1812, 43, 130, "Input",ExpressionUUID->"9ad88cd5-2d26-4d04-bc0b-3c1c5194d1c4"],
Cell[312612, 5704, 76953, 1278, 449, "Output",ExpressionUUID->"3e00de5f-44e0-42d1-ba7d-6e7f1111669c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[389626, 6989, 3611, 111, 280, "Subtitle",ExpressionUUID->"a2830884-4177-4d3f-8072-fcef0c403927"],
Cell[CellGroupData[{
Cell[393262, 7104, 1658, 46, 218, "Subsection",ExpressionUUID->"af952f98-88d8-4775-b3cc-caf525286b82"],
Cell[394923, 7152, 3391, 88, 252, "Input",ExpressionUUID->"d1f05f7b-61c7-497b-a3b2-4771021f3c98"],
Cell[398317, 7242, 22668, 550, 1892, "Input",ExpressionUUID->"23ca5568-abdd-45ff-9829-03c2f007d062"],
Cell[420988, 7794, 177, 3, 30, "Input",ExpressionUUID->"2193b8a9-4df6-4d02-a681-809f474b259f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421202, 7802, 305, 7, 54, "Subsection",ExpressionUUID->"94c5a6e7-3afd-4a35-85c8-3cae0687e16a"],
Cell[CellGroupData[{
Cell[421532, 7813, 486, 14, 30, "Input",ExpressionUUID->"5f1f6bbc-5ce3-4160-ae12-23cbdad79d62"],
Cell[422021, 7829, 1226, 25, 63, "Message",ExpressionUUID->"2d559fdd-e319-4261-9a0f-80f1a8886e72"],
Cell[423250, 7856, 692, 15, 34, "Output",ExpressionUUID->"e1d1225d-fa7a-4460-b0ed-44db2d0dceec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423979, 7876, 563, 16, 30, "Input",ExpressionUUID->"9e1d3d8d-0416-4501-a755-0391ed0d355d"],
Cell[424545, 7894, 637, 14, 34, "Output",ExpressionUUID->"23db3cd6-9ecd-4ff5-974b-96dc51e16089"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425231, 7914, 187, 3, 54, "Subsection",ExpressionUUID->"b3790fde-385f-4b82-b785-5972d51756c6"],
Cell[CellGroupData[{
Cell[425443, 7921, 2111, 60, 121, "Input",ExpressionUUID->"2dae4c53-fc41-448b-aeed-c4ed75ef4bb6"],
Cell[427557, 7983, 1177, 24, 63, "Message",ExpressionUUID->"07390045-a898-4e57-805e-74ba5d51e956"],
Cell[428737, 8009, 396, 8, 34, "Output",ExpressionUUID->"3c010bc0-09e2-4edd-bcaf-56d8efc398a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429170, 8022, 2061, 59, 121, "Input",ExpressionUUID->"6491c52c-631c-4b0e-a3f0-654cf53d3ce5"],
Cell[431234, 8083, 341, 7, 34, "Output",ExpressionUUID->"4924e2d6-6d62-4bf7-9c24-370c3506db41"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[431624, 8096, 274, 6, 54, "Subsection",ExpressionUUID->"72493af5-f287-46c0-b814-9ae882433965"],
Cell[CellGroupData[{
Cell[431923, 8106, 2089, 60, 121, "Input",ExpressionUUID->"f1d6150f-f8fb-4ada-9bbc-316d7e0ba64e"],
Cell[434015, 8168, 304, 6, 34, "Output",ExpressionUUID->"dc9e10c6-8e32-4c95-a6b4-8ef84dc91e1f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[434380, 8181, 242, 6, 69, "Chapter",ExpressionUUID->"919bc0e2-931f-48b0-8ed0-8d3b71953b43"],
Cell[434625, 8189, 4180, 113, 273, "Input",ExpressionUUID->"4866b57e-07b2-490a-b264-f0507d90d091"],
Cell[438808, 8304, 25169, 606, 1892, "Input",ExpressionUUID->"6be4c331-ef6f-4250-9eb1-14e688462493"],
Cell[CellGroupData[{
Cell[464002, 8914, 263, 6, 45, "Subsubsection",ExpressionUUID->"280b8273-cc44-46c8-a385-9d0e5ef1e856"],
Cell[CellGroupData[{
Cell[464290, 8924, 710, 22, 30, "Input",ExpressionUUID->"7adec4aa-4d44-4356-81e7-3b4ace920975"],
Cell[465003, 8948, 638, 14, 34, "Output",ExpressionUUID->"13edaed4-d2f9-4f91-aa75-86c5d72723eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465678, 8967, 785, 23, 30, "Input",ExpressionUUID->"41cd317e-ec05-40f9-94e2-7b0c235fb581"],
Cell[466466, 8992, 639, 14, 34, "Output",ExpressionUUID->"7aca8bf2-bed5-4603-b190-960c32872204"]
}, Open  ]],
Cell[CellGroupData[{
Cell[467142, 9011, 684, 21, 30, "Input",ExpressionUUID->"d6d86bdc-8535-43b3-a311-4e2f8e7659e8"],
Cell[467829, 9034, 646, 15, 34, "Output",ExpressionUUID->"22fc1f3d-221e-4389-a738-703e1d6faebb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[468524, 9055, 267, 6, 45, "Subsubsection",ExpressionUUID->"16b8f9b5-ccf9-4e0e-8b50-2ef6fc92afba"],
Cell[CellGroupData[{
Cell[468816, 9065, 2251, 64, 121, "Input",ExpressionUUID->"165cf588-5a99-4114-9df1-f9afb437f6bd"],
Cell[471070, 9131, 599, 12, 46, "Message",ExpressionUUID->"2cb10451-9d22-4aca-a2f7-305771e95720"],
Cell[471672, 9145, 486, 11, 28, "Message",ExpressionUUID->"5bb5e098-c99f-4123-a31d-a2a9a7ed7250"],
Cell[472161, 9158, 1009, 19, 28, "Message",ExpressionUUID->"5796f49c-8cd3-4ad4-8c74-586c4aa9ee20"],
Cell[473173, 9179, 485, 11, 28, "Message",ExpressionUUID->"9c7c9905-1156-4c62-9d28-2f8c7dcf6cab"],
Cell[473661, 9192, 995, 18, 28, "Message",ExpressionUUID->"a4284bd2-14ed-4a9f-82d9-6adf198a9e60"],
Cell[474659, 9212, 435, 9, 34, "Output",ExpressionUUID->"a4aa0ce3-6e63-4330-85ff-284e69073639"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[475143, 9227, 309, 6, 45, "Subsubsection",ExpressionUUID->"1699d41b-afc0-43de-ba16-44726e566890"],
Cell[CellGroupData[{
Cell[475477, 9237, 2740, 73, 121, "Input",ExpressionUUID->"96b3c646-8d41-4652-92d5-16ffcea2507b"],
Cell[478220, 9312, 697, 12, 34, "Output",ExpressionUUID->"7c4520f2-ef5d-4233-97cf-51049b8f926b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478954, 9329, 977, 24, 30, "Input",ExpressionUUID->"a3742043-f53e-4fda-af59-302e6a961638"],
Cell[479934, 9355, 1107, 21, 34, "Output",ExpressionUUID->"aeb1059b-e5df-444d-b096-92a3a05d6318"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[481102, 9383, 280, 4, 69, "Chapter",ExpressionUUID->"ab90767b-2b76-4ae6-98e5-84f90f98a7e3"],
Cell[481385, 9389, 4622, 121, 273, "Input",ExpressionUUID->"f57267c4-3b66-4384-842d-7f13d4e46988"],
Cell[486010, 9512, 27094, 636, 1892, "Input",ExpressionUUID->"51144eac-f9bf-43e0-b97a-ded2abd9365d"],
Cell[CellGroupData[{
Cell[513129, 10152, 263, 6, 45, "Subsubsection",ExpressionUUID->"7dbbed99-5f1b-4d06-b5aa-39559a9ffff2"],
Cell[CellGroupData[{
Cell[513417, 10162, 794, 23, 30, "Input",ExpressionUUID->"8ae2ae39-00b0-4294-aa6e-73f3fd8b181d"],
Cell[514214, 10187, 713, 16, 34, "Output",ExpressionUUID->"4ddf5ae4-2261-43b4-a5f2-da8de358470d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[514976, 10209, 333, 7, 45, "Subsubsection",ExpressionUUID->"19b80be5-35a5-40a6-9658-2f61d87269e2"],
Cell[CellGroupData[{
Cell[515334, 10220, 2602, 70, 121, "Input",ExpressionUUID->"fb2b3b1f-8d20-45bd-a072-409d727c6b2d"],
Cell[517939, 10292, 730, 15, 28, "Message",ExpressionUUID->"49cb4a35-40bc-459e-a920-0dc3793169b4"],
Cell[518672, 10309, 1271, 23, 46, "Message",ExpressionUUID->"3a1454be-fa80-4994-83ec-9d09be774c9b"],
Cell[519946, 10334, 1121, 21, 28, "Message",ExpressionUUID->"41b7edcf-d1b5-4b1c-aec1-82c9ee5cabd3"],
Cell[521070, 10357, 1264, 23, 28, "Message",ExpressionUUID->"b5f2f322-cff9-4a38-b5dc-9e438e5abe1e"],
Cell[522337, 10382, 700, 14, 28, "Message",ExpressionUUID->"e1afac21-2083-476b-907c-e708d76c45a8"],
Cell[523040, 10398, 730, 15, 28, "Message",ExpressionUUID->"4478db23-3790-4f01-82de-10415fe0b404"],
Cell[523773, 10415, 730, 15, 28, "Message",ExpressionUUID->"7a186f33-1b04-485f-aceb-4c26820dca0b"],
Cell[524506, 10432, 705, 14, 28, "Message",ExpressionUUID->"8eb051da-672c-43c3-8a89-9bebce6952e6"],
Cell[525214, 10448, 434, 8, 34, "Output",ExpressionUUID->"19832c40-ca70-4176-8cfe-56df0d35abf1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

